// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IDiario2Writer
{
    Task<FDiario2> WriteAsync(Models.Diario2 diario2, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(Diario2Response diario2, int operadorId, MsiSqlConnection? oCnn);
}

public class Diario2Writer(IFDiario2Factory diario2Factory) : IDiario2Writer
{
    private readonly IFDiario2Factory _diario2Factory = diario2Factory ?? throw new ArgumentNullException(nameof(diario2Factory));
    public virtual async Task Delete(Diario2Response diario2, int operadorId, MsiSqlConnection? oCnn)
    {
        await _diario2Factory.DeleteAsync(operadorId, diario2.Id, oCnn);
    }

    public virtual async Task<FDiario2> WriteAsync(Models.Diario2 diario2, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (diario2.Id.IsEmptyIDNumber() ? _diario2Factory.CreateAsync() : _diario2Factory.CreateFromIdAsync(diario2.Id, oCnn));
        dbRec.FData = diario2.Data;
        dbRec.FHora = diario2.Hora;
        dbRec.FOperador = diario2.Operador;
        dbRec.FGUID = diario2.GUID;
        dbRec.FNome = diario2.Nome;
        dbRec.FOcorrencia = diario2.Ocorrencia;
        dbRec.FCliente = diario2.Cliente;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}