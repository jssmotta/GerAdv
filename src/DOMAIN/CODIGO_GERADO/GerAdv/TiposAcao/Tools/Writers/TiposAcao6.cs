// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITiposAcaoWriter
{
    Task<FTiposAcao> WriteAsync(Models.TiposAcao tiposacao, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(TiposAcaoResponse tiposacao, int operadorId, MsiSqlConnection oCnn);
}

public class TiposAcaoWriter(IFTiposAcaoFactory tiposacaoFactory) : ITiposAcaoWriter
{
    private readonly IFTiposAcaoFactory _tiposacaoFactory = tiposacaoFactory ?? throw new ArgumentNullException(nameof(tiposacaoFactory));
    public virtual async Task Delete(TiposAcaoResponse tiposacao, int operadorId, MsiSqlConnection oCnn)
    {
        await _tiposacaoFactory.DeleteAsync(operadorId, tiposacao.Id, oCnn);
    }

    public virtual async Task<FTiposAcao> WriteAsync(Models.TiposAcao tiposacao, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (tiposacao.Id.IsEmptyIDNumber() ? _tiposacaoFactory.CreateAsync() : _tiposacaoFactory.CreateFromIdAsync(tiposacao.Id, oCnn));
        dbRec.FNome = tiposacao.Nome;
        dbRec.FInativo = tiposacao.Inativo;
        dbRec.FGUID = tiposacao.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}