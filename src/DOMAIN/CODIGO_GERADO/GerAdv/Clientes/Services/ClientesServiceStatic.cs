// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ClientesService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterClientes filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.Empresa != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Empresa)}", filtro.Empresa));
        }

        if (filtro.Empresa_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Empresa)}_end", filtro.Empresa_end));
        }

        if (!string.IsNullOrEmpty(filtro.Icone))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Icone)}", ApplyWildCard(filtro.WildcardChar, filtro.Icone)));
        }

        if (!string.IsNullOrEmpty(filtro.NomeMae))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.NomeMae)}", ApplyWildCard(filtro.WildcardChar, filtro.NomeMae)));
        }

        if (!filtro.RGDataExp.IsEmpty())
        {
            if (DateTime.TryParse(filtro.RGDataExp, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesDicInfo.RGDataExp)}", dataParam));
        }

        if (!filtro.RGDataExp_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.RGDataExp_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesDicInfo.RGDataExp)}_end", dataParam));
        }

        if (filtro.Inativo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Inativo)}", filtro.Inativo));
        }

        if (!string.IsNullOrEmpty(filtro.QuemIndicou))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.QuemIndicou)}", ApplyWildCard(filtro.WildcardChar, filtro.QuemIndicou)));
        }

        if (filtro.SendEMail != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.SendEMail)}", filtro.SendEMail));
        }

        if (!string.IsNullOrEmpty(filtro.Nome))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Nome)}", ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Adv != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Adv)}", filtro.Adv));
        }

        if (filtro.Adv_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Adv)}_end", filtro.Adv_end));
        }

        if (filtro.IDRep != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.IDRep)}", filtro.IDRep));
        }

        if (filtro.IDRep_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.IDRep)}_end", filtro.IDRep_end));
        }

        if (filtro.Juridica != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Juridica)}", filtro.Juridica));
        }

        if (!string.IsNullOrEmpty(filtro.NomeFantasia))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.NomeFantasia)}", ApplyWildCard(filtro.WildcardChar, filtro.NomeFantasia)));
        }

        if (!string.IsNullOrEmpty(filtro.Class))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Class)}", ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!filtro.DtNasc.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesDicInfo.DtNasc)}", dataParam));
        }

        if (!filtro.DtNasc_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesDicInfo.DtNasc)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.InscEst))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.InscEst)}", ApplyWildCard(filtro.WildcardChar, filtro.InscEst)));
        }

        if (!string.IsNullOrEmpty(filtro.Qualificacao))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Qualificacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Qualificacao)));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Sexo)}", filtro.Sexo));
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Idade)}", filtro.Idade));
        }

        if (filtro.Idade_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Idade)}_end", filtro.Idade_end));
        }

        if (!string.IsNullOrEmpty(filtro.CNPJ))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CNPJ)}", ApplyWildCard(filtro.WildcardChar, filtro.CNPJ)));
        }

        if (!string.IsNullOrEmpty(filtro.CPF))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CPF)}", ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrEmpty(filtro.RG))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.RG)}", ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (filtro.TipoCaptacao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.TipoCaptacao)}", filtro.TipoCaptacao));
        }

        if (!string.IsNullOrEmpty(filtro.Observacao))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Observacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrEmpty(filtro.Endereco))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Endereco)}", ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrEmpty(filtro.Bairro))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Bairro)}", ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Cidade)}", filtro.Cidade));
        }

        if (!string.IsNullOrEmpty(filtro.CEP))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CEP)}", ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrEmpty(filtro.Fax))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Fax)}", ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrEmpty(filtro.Fone))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Fone)}", ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrEmpty(filtro.Data))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Data)}", ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (!string.IsNullOrEmpty(filtro.HomePage))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.HomePage)}", ApplyWildCard(filtro.WildcardChar, filtro.HomePage)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.EMail)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (filtro.Obito != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.Obito)}", filtro.Obito));
        }

        if (!string.IsNullOrEmpty(filtro.NomePai))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.NomePai)}", ApplyWildCard(filtro.WildcardChar, filtro.NomePai)));
        }

        if (!string.IsNullOrEmpty(filtro.RGOExpeditor))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.RGOExpeditor)}", ApplyWildCard(filtro.WildcardChar, filtro.RGOExpeditor)));
        }

        if (filtro.RegimeTributacao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.RegimeTributacao)}", filtro.RegimeTributacao));
        }

        if (filtro.EnquadramentoEmpresa != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.EnquadramentoEmpresa)}", filtro.EnquadramentoEmpresa));
        }

        if (filtro.ReportECBOnly != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.ReportECBOnly)}", filtro.ReportECBOnly));
        }

        if (filtro.ProBono != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.ProBono)}", filtro.ProBono));
        }

        if (!string.IsNullOrEmpty(filtro.CNH))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CNH)}", ApplyWildCard(filtro.WildcardChar, filtro.CNH)));
        }

        if (!string.IsNullOrEmpty(filtro.PessoaContato))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.PessoaContato)}", ApplyWildCard(filtro.WildcardChar, filtro.PessoaContato)));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.Empresa.IsEmpty() && filtro.Empresa_end.IsEmpty())
        {
            cWhere.Append(filtro.Empresa <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Empresa}] >= @{nameof(DBClientesDicInfo.Empresa)}");
        }
        else
        {
            cWhere.Append((filtro.Empresa <= 0 && filtro.Empresa_end <= 0) ? string.Empty : (!(filtro.Empresa <= 0) && !(filtro.Empresa_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Empresa} BETWEEN @{nameof(DBClientesDicInfo.Empresa)} AND @{nameof(DBClientesDicInfo.Empresa)}_end" : !(filtro.Empresa <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Empresa} = @{nameof(DBClientesDicInfo.Empresa)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Empresa} <= @{nameof(DBClientesDicInfo.Empresa)}_end");
        }

        cWhere.Append(filtro.Icone.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Icone}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Icone)}");
        cWhere.Append(filtro.NomeMae.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomeMae}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.NomeMae)}");
        if (!filtro.RGDataExp.IsEmpty() && filtro.RGDataExp_end.IsEmpty())
        {
            cWhere.Append(filtro.RGDataExp.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RGDataExp}], 103) >= CONVERT(DATE, @{nameof(DBClientesDicInfo.RGDataExp)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.RGDataExp.IsEmpty() && filtro.RGDataExp_end.IsEmpty()) ? string.Empty : (!(filtro.RGDataExp.IsEmpty()) && !(filtro.RGDataExp_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.RGDataExp} BETWEEN @{nameof(DBClientesDicInfo.RGDataExp)} AND @{nameof(DBClientesDicInfo.RGDataExp)}_end" : !(filtro.RGDataExp.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.RGDataExp} = @{nameof(DBClientesDicInfo.RGDataExp)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.RGDataExp} <= @{nameof(DBClientesDicInfo.RGDataExp)}_end");
        }

        cWhere.Append(filtro.Inativo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Inativo}] = @{nameof(DBClientesDicInfo.Inativo)}");
        cWhere.Append(filtro.QuemIndicou.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.QuemIndicou}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.QuemIndicou)}");
        cWhere.Append(filtro.SendEMail == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.SendEMail}] = @{nameof(DBClientesDicInfo.SendEMail)}");
        cWhere.Append(filtro.Nome.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Nome)}");
        if (!filtro.Adv.IsEmpty() && filtro.Adv_end.IsEmpty())
        {
            cWhere.Append(filtro.Adv <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Adv}] >= @{nameof(DBClientesDicInfo.Adv)}");
        }
        else
        {
            cWhere.Append((filtro.Adv <= 0 && filtro.Adv_end <= 0) ? string.Empty : (!(filtro.Adv <= 0) && !(filtro.Adv_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Adv} BETWEEN @{nameof(DBClientesDicInfo.Adv)} AND @{nameof(DBClientesDicInfo.Adv)}_end" : !(filtro.Adv <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Adv} = @{nameof(DBClientesDicInfo.Adv)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Adv} <= @{nameof(DBClientesDicInfo.Adv)}_end");
        }

        if (!filtro.IDRep.IsEmpty() && filtro.IDRep_end.IsEmpty())
        {
            cWhere.Append(filtro.IDRep <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.IDRep}] >= @{nameof(DBClientesDicInfo.IDRep)}");
        }
        else
        {
            cWhere.Append((filtro.IDRep <= 0 && filtro.IDRep_end <= 0) ? string.Empty : (!(filtro.IDRep <= 0) && !(filtro.IDRep_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.IDRep} BETWEEN @{nameof(DBClientesDicInfo.IDRep)} AND @{nameof(DBClientesDicInfo.IDRep)}_end" : !(filtro.IDRep <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.IDRep} = @{nameof(DBClientesDicInfo.IDRep)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.IDRep} <= @{nameof(DBClientesDicInfo.IDRep)}_end");
        }

        cWhere.Append(filtro.Juridica == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Juridica}] = @{nameof(DBClientesDicInfo.Juridica)}");
        cWhere.Append(filtro.NomeFantasia.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomeFantasia}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.NomeFantasia)}");
        cWhere.Append(filtro.Class.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Class)}");
        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Tipo}] = @{nameof(DBClientesDicInfo.Tipo)}");
        if (!filtro.DtNasc.IsEmpty() && filtro.DtNasc_end.IsEmpty())
        {
            cWhere.Append(filtro.DtNasc.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.DtNasc}], 103) >= CONVERT(DATE, @{nameof(DBClientesDicInfo.DtNasc)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DtNasc.IsEmpty() && filtro.DtNasc_end.IsEmpty()) ? string.Empty : (!(filtro.DtNasc.IsEmpty()) && !(filtro.DtNasc_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.DtNasc} BETWEEN @{nameof(DBClientesDicInfo.DtNasc)} AND @{nameof(DBClientesDicInfo.DtNasc)}_end" : !(filtro.DtNasc.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.DtNasc} = @{nameof(DBClientesDicInfo.DtNasc)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.DtNasc} <= @{nameof(DBClientesDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.InscEst.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.InscEst}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.InscEst)}");
        cWhere.Append(filtro.Qualificacao.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Qualificacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Qualificacao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Sexo}] = @{nameof(DBClientesDicInfo.Sexo)}");
        if (!filtro.Idade.IsEmpty() && filtro.Idade_end.IsEmpty())
        {
            cWhere.Append(filtro.Idade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Idade}] >= @{nameof(DBClientesDicInfo.Idade)}");
        }
        else
        {
            cWhere.Append((filtro.Idade <= 0 && filtro.Idade_end <= 0) ? string.Empty : (!(filtro.Idade <= 0) && !(filtro.Idade_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Idade} BETWEEN @{nameof(DBClientesDicInfo.Idade)} AND @{nameof(DBClientesDicInfo.Idade)}_end" : !(filtro.Idade <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Idade} = @{nameof(DBClientesDicInfo.Idade)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.Idade} <= @{nameof(DBClientesDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.CNPJ.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CNPJ}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.CNPJ)}");
        cWhere.Append(filtro.CPF.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.RG)}");
        cWhere.Append(filtro.TipoCaptacao == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.TipoCaptacao}] = @{nameof(DBClientesDicInfo.TipoCaptacao)}");
        cWhere.Append(filtro.Observacao.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Observacao)}");
        cWhere.Append(filtro.Endereco.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Bairro)}");
        cWhere.Append(filtro.Cidade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Cidade}] = @{nameof(DBClientesDicInfo.Cidade)}");
        cWhere.Append(filtro.CEP.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.CEP)}");
        cWhere.Append(filtro.Fax.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Fax)}");
        cWhere.Append(filtro.Fone.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Fone)}");
        cWhere.Append(filtro.Data.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.Data)}");
        cWhere.Append(filtro.HomePage.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.HomePage}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.HomePage)}");
        cWhere.Append(filtro.EMail.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.EMail)}");
        cWhere.Append(filtro.Obito == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Obito}] = @{nameof(DBClientesDicInfo.Obito)}");
        cWhere.Append(filtro.NomePai.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomePai}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.NomePai)}");
        cWhere.Append(filtro.RGOExpeditor.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RGOExpeditor}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.RGOExpeditor)}");
        cWhere.Append(filtro.RegimeTributacao <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RegimeTributacao}] = @{nameof(DBClientesDicInfo.RegimeTributacao)}");
        cWhere.Append(filtro.EnquadramentoEmpresa <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.EnquadramentoEmpresa}] = @{nameof(DBClientesDicInfo.EnquadramentoEmpresa)}");
        cWhere.Append(filtro.ReportECBOnly == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.ReportECBOnly}] = @{nameof(DBClientesDicInfo.ReportECBOnly)}");
        cWhere.Append(filtro.ProBono == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.ProBono}] = @{nameof(DBClientesDicInfo.ProBono)}");
        cWhere.Append(filtro.CNH.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CNH}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.CNH)}");
        cWhere.Append(filtro.PessoaContato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.PessoaContato}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.PessoaContato)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CampoCodigo}] >= @{nameof(DBClientesDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.CampoCodigo} BETWEEN @{nameof(DBClientesDicInfo.CampoCodigo)} AND @{nameof(DBClientesDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.CampoCodigo} = @{nameof(DBClientesDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBClientesDicInfo.CampoCodigo} <= @{nameof(DBClientesDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterClientes? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(uri, "", [], oCnn);
        var cacheKey = $"{uri}-Clientes-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBClientesDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ClientesResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}