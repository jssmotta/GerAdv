// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#if (!MenphisSI_SG_GerAdv_DicOff)
// ReSharper disable once CheckNamespace
namespace MenphisSI.SG.GerAdv.DicInfo;
[Serializable]
public partial class DBPrepostosODicInfo : IODicInfo
{
    public ImmutableArray<DBInfoSystem> IListFields() => List;
    public ImmutableArray<DBInfoSystem> IFieldsRaw() => ListWithoutAuditor;
    public ImmutableArray<DBInfoSystem> IPkFields() => ListPk();
    public ImmutableArray<DBInfoSystem> IPkIndicesFields() => ListPkIndices();
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITabelaNome() => DBPrepostosDicInfo.TabelaNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoCodigo() => DBPrepostosDicInfo.CampoCodigo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string IPrefixo() => DBPrepostosDicInfo.TablePrefix;
#pragma warning disable CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasAuditor() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasNameId() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IIsStoredProcedureOrView() => false;
#pragma warning restore CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoNome() => DBPrepostosDicInfo.CampoNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string NameSpace() => nameof(GerAdv);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool TemAuditor() => true;
    private static readonly FrozenDictionary<string, DBInfoSystem> _fieldLookup = List.ToFrozenDictionary(f => f.FNome, StringComparer.OrdinalIgnoreCase);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public DBInfoSystem? GetInfoSystemByNameField(string campo) => _fieldLookup.GetValueOrDefault(campo);
    public static string TCampoCodigo => DBPrepostosDicInfo.CampoCodigo;
    public static string TCampoNome => DBPrepostosDicInfo.CampoNome;
    public static string TTabelaNome => DBPrepostosDicInfo.TabelaNome;
    public static string TTablePrefix => DBPrepostosDicInfo.TablePrefix;
    public static ImmutableArray<DBInfoSystem> List => [DBPrepostosDicInfo.PreNome, DBPrepostosDicInfo.PreFuncao, DBPrepostosDicInfo.PreSetor, DBPrepostosDicInfo.PreDtNasc, DBPrepostosDicInfo.PreQualificacao, DBPrepostosDicInfo.PreSexo, DBPrepostosDicInfo.PreIdade, DBPrepostosDicInfo.PreCPF, DBPrepostosDicInfo.PreRG, DBPrepostosDicInfo.PrePeriodo_Ini, DBPrepostosDicInfo.PrePeriodo_Fim, DBPrepostosDicInfo.PreRegistro, DBPrepostosDicInfo.PreCTPSNumero, DBPrepostosDicInfo.PreCTPSSerie, DBPrepostosDicInfo.PreCTPSDtEmissao, DBPrepostosDicInfo.PrePIS, DBPrepostosDicInfo.PreSalario, DBPrepostosDicInfo.PreLiberaAgenda, DBPrepostosDicInfo.PreObservacao, DBPrepostosDicInfo.PreEndereco, DBPrepostosDicInfo.PreBairro, DBPrepostosDicInfo.PreCidade, DBPrepostosDicInfo.PreCEP, DBPrepostosDicInfo.PreFone, DBPrepostosDicInfo.PreFax, DBPrepostosDicInfo.PreEMail, DBPrepostosDicInfo.PrePai, DBPrepostosDicInfo.PreMae, DBPrepostosDicInfo.PreClass, DBPrepostosDicInfo.PreEtiqueta, DBPrepostosDicInfo.PreAni, DBPrepostosDicInfo.PreBold, DBPrepostosDicInfo.PreGUID, DBPrepostosDicInfo.PreQuemCad, DBPrepostosDicInfo.PreDtCad, DBPrepostosDicInfo.PreQuemAtu, DBPrepostosDicInfo.PreDtAtu, DBPrepostosDicInfo.PreVisto];
    public static ImmutableArray<DBInfoSystem> ListWithoutAuditor => [DBPrepostosDicInfo.PreNome, DBPrepostosDicInfo.PreFuncao, DBPrepostosDicInfo.PreSetor, DBPrepostosDicInfo.PreDtNasc, DBPrepostosDicInfo.PreQualificacao, DBPrepostosDicInfo.PreSexo, DBPrepostosDicInfo.PreIdade, DBPrepostosDicInfo.PreCPF, DBPrepostosDicInfo.PreRG, DBPrepostosDicInfo.PrePeriodo_Ini, DBPrepostosDicInfo.PrePeriodo_Fim, DBPrepostosDicInfo.PreRegistro, DBPrepostosDicInfo.PreCTPSNumero, DBPrepostosDicInfo.PreCTPSSerie, DBPrepostosDicInfo.PreCTPSDtEmissao, DBPrepostosDicInfo.PrePIS, DBPrepostosDicInfo.PreSalario, DBPrepostosDicInfo.PreLiberaAgenda, DBPrepostosDicInfo.PreObservacao, DBPrepostosDicInfo.PreEndereco, DBPrepostosDicInfo.PreBairro, DBPrepostosDicInfo.PreCidade, DBPrepostosDicInfo.PreCEP, DBPrepostosDicInfo.PreFone, DBPrepostosDicInfo.PreFax, DBPrepostosDicInfo.PreEMail, DBPrepostosDicInfo.PrePai, DBPrepostosDicInfo.PreMae, DBPrepostosDicInfo.PreClass, DBPrepostosDicInfo.PreGUID];

    public static ImmutableArray<DBInfoSystem> ListPk()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["preCodigo"]);
        var result = campos.Where(campo => !campo.Equals(DBPrepostosDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }

    public static ImmutableArray<DBInfoSystem> ListPkIndices()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["preCodigo"]);
        var result = campos.Where(campo => !campo.Equals(DBPrepostosDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }
}
#endif
