// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// ============================================
// ARQUIVO: DBUpdateTests.cs.txt (Principal)
// ============================================
namespace MenphisSI.GerAdv.Tests;
public class DBParceriaProcUpdate : IDisposable
{
    private readonly DBParceriaProc _instance;
    private readonly Mock<MsiSqlConnection> _mockConnection;
    public DBParceriaProcUpdate()
    {
        _instance = new DBParceriaProc();
        _mockConnection = new Mock<MsiSqlConnection>();
    }

    [Fact]
    public void DefaultConstructor_ShouldCreateInstance_WithDefaultValues()
    {
        // Act
        var parceriaproc = new DBParceriaProc();
        // Assert
        parceriaproc.Should().NotBeNull();
        parceriaproc.ITabelaName().Should().Be("ParceriaProc");
        parceriaproc.ID.Should().Be(0);
    }

    [Fact]
    public void AllProperties_WithValidValues_ShouldSetCorrectly()
    {
        // Arrange
        var parceriaproc = new DBParceriaProc
        {
            FGUID = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        };
    // Assert - All properties should be set parceriaproc.FGUID.Should().Be( "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
    }

    [Fact]
    public void StringProperties_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var parceriaproc = new DBParceriaProc();
        var longString = new string ('X', 300);
        parceriaproc.FGUID = longString; // MAX: 100
    // Assert - All properties should be set parceriaproc.FGUID.Should().HaveLength(100);
    }

#region Testes de GUID
    [Fact]
    public void GUID_DefaultValue_ShouldBeEmpty()
    {
        Assert.Equal(string.Empty, _instance.FGUID);
    }

    [Fact]
    public void GUID_SetValidGUID_ShouldStore()
    {
        var guid = Guid.NewGuid().ToString();
        _instance.FGUID = guid;
        Assert.Equal(guid, _instance.FGUID);
    }

#endregion
    [Fact]
    public void TabelaNome_Property_ShouldReturnCorrectTableName()
    {
        // Arrange
        var parceriaproc = new DBParceriaProc();
        // Act & Assert
        parceriaproc.TabelaNome.Should().Be("ParceriaProc");
    }

    public virtual void Dispose()
    {
    // Cleanup resources if needed
    }
}