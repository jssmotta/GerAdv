// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IViaRecebimentoWriter
{
    Task<FViaRecebimento> WriteAsync(Models.ViaRecebimento viarecebimento, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ViaRecebimentoResponse viarecebimento, int operadorId, MsiSqlConnection oCnn);
}

public class ViaRecebimentoWriter(IFViaRecebimentoFactory viarecebimentoFactory) : IViaRecebimentoWriter
{
    private readonly IFViaRecebimentoFactory _viarecebimentoFactory = viarecebimentoFactory ?? throw new ArgumentNullException(nameof(viarecebimentoFactory));
    public virtual async Task Delete(ViaRecebimentoResponse viarecebimento, int operadorId, MsiSqlConnection oCnn)
    {
        await _viarecebimentoFactory.DeleteAsync(operadorId, viarecebimento.Id, oCnn);
    }

    public virtual async Task<FViaRecebimento> WriteAsync(Models.ViaRecebimento viarecebimento, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (viarecebimento.Id.IsEmptyIDNumber() ? _viarecebimentoFactory.CreateAsync() : _viarecebimentoFactory.CreateFromIdAsync(viarecebimento.Id, oCnn));
        dbRec.FNome = viarecebimento.Nome;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}