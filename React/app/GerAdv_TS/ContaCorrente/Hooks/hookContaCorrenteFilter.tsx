// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterContaCorrente } from '@/app/GerAdv_TS/ContaCorrente/Filters/ContaCorrente';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
interface UseContaCorrenteFilterProps {
  handleFetchWithFilter: (filtro?: FilterContaCorrente | undefined | null) => Promise<void>;
}
interface UseContaCorrenteFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterContaCorrente;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterContaCorrente>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterContaCorrente) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterContaCorrente>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useContaCorrenteFilter = ({ handleFetchWithFilter }: UseContaCorrenteFilterProps): UseContaCorrenteFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterContaCorrente>({} as FilterContaCorrente);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterContaCorrente;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterContaCorrente) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('ContaCorrenteFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterContaCorrente>) => (
  <>
  <InputInput
  type='text'
  id='ciacordo'
  name='ciacordo'
  value={handlers.windowFilter?.ciacordo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CIAcordo'
  label='CIAcordo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ciacordo_end'
  name='ciacordo_end'
  value={handlers.windowFilter?.ciacordo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CIAcordo final'
  label='CIAcordo final'
  disabled={handlers.windowFilter?.ciacordo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='quitado'
  name='quitado'
  value={handlers.windowFilter?.quitado ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Quitado'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='idcontrato'
  name='idcontrato'
  value={handlers.windowFilter?.idcontrato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDContrato'
  label='IDContrato (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idcontrato_end'
  name='idcontrato_end'
  value={handlers.windowFilter?.idcontrato_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDContrato final'
  label='IDContrato final'
  disabled={handlers.windowFilter?.idcontrato ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quitadoid'
  name='quitadoid'
  value={handlers.windowFilter?.quitadoid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuitadoID'
  label='QuitadoID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quitadoid_end'
  name='quitadoid_end'
  value={handlers.windowFilter?.quitadoid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuitadoID final'
  label='QuitadoID final'
  disabled={handlers.windowFilter?.quitadoid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='debitoid'
  name='debitoid'
  value={handlers.windowFilter?.debitoid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe DebitoID'
  label='DebitoID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='debitoid_end'
  name='debitoid_end'
  value={handlers.windowFilter?.debitoid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe DebitoID final'
  label='DebitoID final'
  disabled={handlers.windowFilter?.debitoid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='livrocaixaid'
  name='livrocaixaid'
  value={handlers.windowFilter?.livrocaixaid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe LivroCaixaID'
  label='LivroCaixaID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='livrocaixaid_end'
  name='livrocaixaid_end'
  value={handlers.windowFilter?.livrocaixaid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe LivroCaixaID final'
  label='LivroCaixaID final'
  disabled={handlers.windowFilter?.livrocaixaid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='sucumbencia'
  name='sucumbencia'
  value={handlers.windowFilter?.sucumbencia ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Sucumbencia'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='distregra'
  name='distregra'
  value={handlers.windowFilter?.distregra ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='DistRegra'
  className='inputSearch inputSearchCheckbox'
  />
  <InputDate
  type='text'
  id='dtoriginal'
  label='DtOriginal (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dtoriginal'
  value={handlers.windowFilter?.dtoriginal ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dtoriginal', value)}
  />
  <InputDate
  type='text'
  id='dtoriginal_end'
  label='DtOriginal (final)'
  dataForm={null}
  className='inputSearch'
  name='dtoriginal_end'
  value={handlers.windowFilter?.dtoriginal_end ?? ''}
  disabled={handlers.windowFilter?.dtoriginal ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dtoriginal_end', value)}
  />
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <InputInput
  type='text'
  id='parcelax'
  name='parcelax'
  value={handlers.windowFilter?.parcelax ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ParcelaX'
  label='ParcelaX (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='parcelax_end'
  name='parcelax_end'
  value={handlers.windowFilter?.parcelax_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ParcelaX final'
  label='ParcelaX final'
  disabled={handlers.windowFilter?.parcelax ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valor'
  name='valor'
  value={handlers.windowFilter?.valor ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Valor (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valor_end'
  name='valor_end'
  value={handlers.windowFilter?.valor_end ?? 0}
  disabled={handlers.windowFilter?.valor != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Valor (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <ClientesComboBox
  name='cliente'
  dataForm={null}
  value={handlers.windowFilter?.cliente}
  setValue={(e:any) => handlers.handleComboChange(e, 'cliente')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <InputInput
  type='text'
  id='historico'
  name='historico'
  value={handlers.windowFilter?.historico ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Historico'
  label='Historico'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='contrato'
  name='contrato'
  value={handlers.windowFilter?.contrato ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Contrato'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='pago'
  name='pago'
  value={handlers.windowFilter?.pago ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Pago'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='distribuir'
  name='distribuir'
  value={handlers.windowFilter?.distribuir ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Distribuir'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='lc'
  name='lc'
  value={handlers.windowFilter?.lc ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='LC'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='idhtrab'
  name='idhtrab'
  value={handlers.windowFilter?.idhtrab ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHTrab'
  label='IDHTrab (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idhtrab_end'
  name='idhtrab_end'
  value={handlers.windowFilter?.idhtrab_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHTrab final'
  label='IDHTrab final'
  disabled={handlers.windowFilter?.idhtrab ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nroparcelas'
  name='nroparcelas'
  value={handlers.windowFilter?.nroparcelas ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NroParcelas'
  label='NroParcelas (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nroparcelas_end'
  name='nroparcelas_end'
  value={handlers.windowFilter?.nroparcelas_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NroParcelas final'
  label='NroParcelas final'
  disabled={handlers.windowFilter?.nroparcelas ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valorprincipal'
  name='valorprincipal'
  value={handlers.windowFilter?.valorprincipal ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorPrincipal (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorprincipal_end'
  name='valorprincipal_end'
  value={handlers.windowFilter?.valorprincipal_end ?? 0}
  disabled={handlers.windowFilter?.valorprincipal != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorPrincipal (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='parcelaprincipalid'
  name='parcelaprincipalid'
  value={handlers.windowFilter?.parcelaprincipalid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ParcelaPrincipalID'
  label='ParcelaPrincipalID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='parcelaprincipalid_end'
  name='parcelaprincipalid_end'
  value={handlers.windowFilter?.parcelaprincipalid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ParcelaPrincipalID final'
  label='ParcelaPrincipalID final'
  disabled={handlers.windowFilter?.parcelaprincipalid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='hide'
  name='hide'
  value={handlers.windowFilter?.hide ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Hide'
  className='inputSearch inputSearchCheckbox'
  />
  <InputDate
  type='text'
  id='datapgto'
  label='DataPgto (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datapgto'
  value={handlers.windowFilter?.datapgto ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datapgto', value)}
  />
  <InputDate
  type='text'
  id='datapgto_end'
  label='DataPgto (final)'
  dataForm={null}
  className='inputSearch'
  name='datapgto_end'
  value={handlers.windowFilter?.datapgto_end ?? ''}
  disabled={handlers.windowFilter?.datapgto ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datapgto_end', value)}
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};