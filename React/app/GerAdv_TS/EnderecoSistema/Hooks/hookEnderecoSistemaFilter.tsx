// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterEnderecoSistema } from '@/app/GerAdv_TS/EnderecoSistema/Filters/EnderecoSistema';
import TipoEnderecoSistemaComboBox from '@/app/GerAdv_TS/TipoEnderecoSistema/ComboBox/TipoEnderecoSistema';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import CidadeComboBox from '@/app/GerAdv_TS/Cidade/ComboBox/Cidade';
interface UseEnderecoSistemaFilterProps {
  handleFetchWithFilter: (filtro?: FilterEnderecoSistema | undefined | null) => Promise<void>;
}
interface UseEnderecoSistemaFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterEnderecoSistema;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterEnderecoSistema>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterEnderecoSistema) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterEnderecoSistema>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useEnderecoSistemaFilter = ({ handleFetchWithFilter }: UseEnderecoSistemaFilterProps): UseEnderecoSistemaFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterEnderecoSistema>({} as FilterEnderecoSistema);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterEnderecoSistema;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterEnderecoSistema) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('EnderecoSistemaFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterEnderecoSistema>) => (
  <>
  <InputInput
  type='text'
  id='cadastro'
  name='cadastro'
  value={handlers.windowFilter?.cadastro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Cadastro'
  label='Cadastro (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cadastro_end'
  name='cadastro_end'
  value={handlers.windowFilter?.cadastro_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Cadastro final'
  label='Cadastro final'
  disabled={handlers.windowFilter?.cadastro ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cadastroexcod'
  name='cadastroexcod'
  value={handlers.windowFilter?.cadastroexcod ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CadastroExCod'
  label='CadastroExCod (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cadastroexcod_end'
  name='cadastroexcod_end'
  value={handlers.windowFilter?.cadastroexcod_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CadastroExCod final'
  label='CadastroExCod final'
  disabled={handlers.windowFilter?.cadastroexcod ? false: true}
  className='inputIncNome inputSearch'
  />
  <TipoEnderecoSistemaComboBox
  name='tipoenderecosistema'
  dataForm={null}
  value={handlers.windowFilter?.tipoenderecosistema}
  setValue={(e:any) => handlers.handleComboChange(e, 'tipoenderecosistema')}
  className='inputSearch inputSearchComboboxTab'
  label='Tipo Endereco Sistema'
  />
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <InputInput
  type='text'
  id='motivo'
  name='motivo'
  value={handlers.windowFilter?.motivo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Motivo'
  label='Motivo'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='contatonolocal'
  name='contatonolocal'
  value={handlers.windowFilter?.contatonolocal ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ContatoNoLocal'
  label='ContatoNoLocal'
  className='inputIncNome inputSearch'
  />
  <CidadeComboBox
  name='cidade'
  dataForm={null}
  value={handlers.windowFilter?.cidade}
  setValue={(e:any) => handlers.handleComboChange(e, 'cidade')}
  className='inputSearch inputSearchComboboxTab'
  label='Cidade'
  />
  <InputInput
  type='text'
  id='endereco'
  name='endereco'
  value={handlers.windowFilter?.endereco ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Endereco'
  label='Endereco'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='bairro'
  name='bairro'
  value={handlers.windowFilter?.bairro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Bairro'
  label='Bairro'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cep'
  name='cep'
  value={handlers.windowFilter?.cep ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CEP'
  label='CEP'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fone'
  name='fone'
  value={handlers.windowFilter?.fone ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fone'
  label='Fone'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fax'
  name='fax'
  value={handlers.windowFilter?.fax ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fax'
  label='Fax'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='observacao'
  name='observacao'
  value={handlers.windowFilter?.observacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Observacao'
  label='Observacao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};