// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterAdvogados } from '@/app/GerAdv_TS/Advogados/Filters/Advogados';
import CargosComboBox from '@/app/GerAdv_TS/Cargos/ComboBox/Cargos';
import EscritoriosComboBox from '@/app/GerAdv_TS/Escritorios/ComboBox/Escritorios';
import CidadeComboBox from '@/app/GerAdv_TS/Cidade/ComboBox/Cidade';
interface UseAdvogadosFilterProps {
  handleFetchWithFilter: (filtro?: FilterAdvogados | undefined | null) => Promise<void>;
}
interface UseAdvogadosFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterAdvogados;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterAdvogados>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterAdvogados) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterAdvogados>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useAdvogadosFilter = ({ handleFetchWithFilter }: UseAdvogadosFilterProps): UseAdvogadosFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterAdvogados>({} as FilterAdvogados);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterAdvogados;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterAdvogados) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('AdvogadosFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterAdvogados>) => (
  <>
  <CargosComboBox
  name='cargo'
  dataForm={null}
  value={handlers.windowFilter?.cargo}
  setValue={(e:any) => handlers.handleComboChange(e, 'cargo')}
  className='inputSearch inputSearchComboboxTab'
  label='Cargos'
  />
  <InputInput
  type='text'
  id='emailpro'
  name='emailpro'
  value={handlers.windowFilter?.emailpro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMailPro'
  label='EMailPro'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cpf'
  name='cpf'
  value={handlers.windowFilter?.cpf ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CPF'
  label='CPF'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nome'
  name='nome'
  value={handlers.windowFilter?.nome ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nome'
  label='Nome'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='rg'
  name='rg'
  value={handlers.windowFilter?.rg ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe RG'
  label='RG'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='casa'
  name='casa'
  value={handlers.windowFilter?.casa ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Casa'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='nomemae'
  name='nomemae'
  value={handlers.windowFilter?.nomemae ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NomeMae'
  label='NomeMae'
  className='inputIncNome inputSearch'
  />
  <EscritoriosComboBox
  name='escritorio'
  dataForm={null}
  value={handlers.windowFilter?.escritorio}
  setValue={(e:any) => handlers.handleComboChange(e, 'escritorio')}
  className='inputSearch inputSearchComboboxTab'
  label='Escritorios'
  />
  <InputComboFilterYesNo
  type='text'
  id='estagiario'
  name='estagiario'
  value={handlers.windowFilter?.estagiario ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Estagiario'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='oab'
  name='oab'
  value={handlers.windowFilter?.oab ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe OAB'
  label='OAB'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nomecompleto'
  name='nomecompleto'
  value={handlers.windowFilter?.nomecompleto ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NomeCompleto'
  label='NomeCompleto'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='endereco'
  name='endereco'
  value={handlers.windowFilter?.endereco ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Endereco'
  label='Endereco'
  className='inputIncNome inputSearch'
  />
  <CidadeComboBox
  name='cidade'
  dataForm={null}
  value={handlers.windowFilter?.cidade}
  setValue={(e:any) => handlers.handleComboChange(e, 'cidade')}
  className='inputSearch inputSearchComboboxTab'
  label='Cidade'
  />
  <InputInput
  type='text'
  id='cep'
  name='cep'
  value={handlers.windowFilter?.cep ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CEP'
  label='CEP'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='sexo'
  name='sexo'
  value={handlers.windowFilter?.sexo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Sexo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='bairro'
  name='bairro'
  value={handlers.windowFilter?.bairro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Bairro'
  label='Bairro'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ctpsserie'
  name='ctpsserie'
  value={handlers.windowFilter?.ctpsserie ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CTPSSerie'
  label='CTPSSerie'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ctps'
  name='ctps'
  value={handlers.windowFilter?.ctps ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CTPS'
  label='CTPS'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fone'
  name='fone'
  value={handlers.windowFilter?.fone ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fone'
  label='Fone'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fax'
  name='fax'
  value={handlers.windowFilter?.fax ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fax'
  label='Fax'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='comissao'
  name='comissao'
  value={handlers.windowFilter?.comissao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Comissao'
  label='Comissao (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='comissao_end'
  name='comissao_end'
  value={handlers.windowFilter?.comissao_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Comissao final'
  label='Comissao final'
  disabled={handlers.windowFilter?.comissao ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='dtinicio'
  label='DtInicio (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dtinicio'
  value={handlers.windowFilter?.dtinicio ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dtinicio', value)}
  />
  <InputDate
  type='text'
  id='dtinicio_end'
  label='DtInicio (final)'
  dataForm={null}
  className='inputSearch'
  name='dtinicio_end'
  value={handlers.windowFilter?.dtinicio_end ?? ''}
  disabled={handlers.windowFilter?.dtinicio ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dtinicio_end', value)}
  />
  <InputDate
  type='text'
  id='dtfim'
  label='DtFim (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dtfim'
  value={handlers.windowFilter?.dtfim ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dtfim', value)}
  />
  <InputDate
  type='text'
  id='dtfim_end'
  label='DtFim (final)'
  dataForm={null}
  className='inputSearch'
  name='dtfim_end'
  value={handlers.windowFilter?.dtfim_end ?? ''}
  disabled={handlers.windowFilter?.dtfim ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dtfim_end', value)}
  />
  <InputDate
  type='text'
  id='dtnasc'
  label='DtNasc (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dtnasc'
  value={handlers.windowFilter?.dtnasc ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dtnasc', value)}
  />
  <InputDate
  type='text'
  id='dtnasc_end'
  label='DtNasc (final)'
  dataForm={null}
  className='inputSearch'
  name='dtnasc_end'
  value={handlers.windowFilter?.dtnasc_end ?? ''}
  disabled={handlers.windowFilter?.dtnasc ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dtnasc_end', value)}
  />
  <InputValor
  type='text'
  id='salario'
  name='salario'
  value={handlers.windowFilter?.salario ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Salario (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='salario_end'
  name='salario_end'
  value={handlers.windowFilter?.salario_end ?? 0}
  disabled={handlers.windowFilter?.salario != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Salario (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='secretaria'
  name='secretaria'
  value={handlers.windowFilter?.secretaria ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Secretaria'
  label='Secretaria'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='textoprocuracao'
  name='textoprocuracao'
  value={handlers.windowFilter?.textoprocuracao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe TextoProcuracao'
  label='TextoProcuracao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='email'
  name='email'
  value={handlers.windowFilter?.email ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail'
  label='EMail'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='especializacao'
  name='especializacao'
  value={handlers.windowFilter?.especializacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Especializacao'
  label='Especializacao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pasta'
  name='pasta'
  value={handlers.windowFilter?.pasta ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pasta'
  label='Pasta'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='observacao'
  name='observacao'
  value={handlers.windowFilter?.observacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Observacao'
  label='Observacao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='contabancaria'
  name='contabancaria'
  value={handlers.windowFilter?.contabancaria ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ContaBancaria'
  label='ContaBancaria'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='parctop'
  name='parctop'
  value={handlers.windowFilter?.parctop ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='ParcTop'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='class'
  name='class'
  value={handlers.windowFilter?.class ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Class'
  label='Class'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='top'
  name='top'
  value={handlers.windowFilter?.top ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Top'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};