// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IOponentesRepLegalWriter
{
    Task<FOponentesRepLegal> WriteAsync(Models.OponentesRepLegal oponentesreplegal, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(OponentesRepLegalResponse oponentesreplegal, int operadorId, MsiSqlConnection? oCnn);
}

public class OponentesRepLegalWriter(IFOponentesRepLegalFactory oponentesreplegalFactory) : IOponentesRepLegalWriter
{
    private readonly IFOponentesRepLegalFactory _oponentesreplegalFactory = oponentesreplegalFactory ?? throw new ArgumentNullException(nameof(oponentesreplegalFactory));
    public virtual async Task Delete(OponentesRepLegalResponse oponentesreplegal, int operadorId, MsiSqlConnection? oCnn)
    {
        await _oponentesreplegalFactory.DeleteAsync(operadorId, oponentesreplegal.Id, oCnn);
    }

    public virtual async Task<FOponentesRepLegal> WriteAsync(Models.OponentesRepLegal oponentesreplegal, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (oponentesreplegal.Id.IsEmptyIDNumber() ? _oponentesreplegalFactory.CreateAsync() : _oponentesreplegalFactory.CreateFromIdAsync(oponentesreplegal.Id, oCnn));
        dbRec.FNome = oponentesreplegal.Nome;
        dbRec.FFone = oponentesreplegal.Fone;
        dbRec.FOponente = oponentesreplegal.Oponente;
        dbRec.FSexo = oponentesreplegal.Sexo;
        dbRec.FCPF = oponentesreplegal.CPF.ClearInputCpf();
        dbRec.FRG = oponentesreplegal.RG;
        dbRec.FEndereco = oponentesreplegal.Endereco;
        dbRec.FBairro = oponentesreplegal.Bairro;
        dbRec.FCEP = oponentesreplegal.CEP.ClearInputCep();
        dbRec.FCidade = oponentesreplegal.Cidade;
        dbRec.FFax = oponentesreplegal.Fax;
        dbRec.FEMail = oponentesreplegal.EMail;
        dbRec.FSite = oponentesreplegal.Site;
        dbRec.FObservacao = oponentesreplegal.Observacao;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}