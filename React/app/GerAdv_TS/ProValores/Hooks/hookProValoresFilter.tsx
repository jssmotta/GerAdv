// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterProValores } from '@/app/GerAdv_TS/ProValores/Filters/ProValores';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import TipoValorProcessoComboBox from '@/app/GerAdv_TS/TipoValorProcesso/ComboBox/TipoValorProcesso';
interface UseProValoresFilterProps {
  handleFetchWithFilter: (filtro?: FilterProValores | undefined | null) => Promise<void>;
}
interface UseProValoresFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterProValores;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterProValores>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterProValores) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterProValores>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useProValoresFilter = ({ handleFetchWithFilter }: UseProValoresFilterProps): UseProValoresFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterProValores>({} as FilterProValores);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterProValores;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterProValores) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('ProValoresFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterProValores>) => (
  <>
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <TipoValorProcessoComboBox
  name='tipovalorprocesso'
  dataForm={null}
  value={handlers.windowFilter?.tipovalorprocesso}
  setValue={(e:any) => handlers.handleComboChange(e, 'tipovalorprocesso')}
  className='inputSearch inputSearchComboboxTab'
  label='Tipo Valor Processo'
  />
  <InputInput
  type='text'
  id='indice'
  name='indice'
  value={handlers.windowFilter?.indice ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Indice'
  label='Indice'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='ignorar'
  name='ignorar'
  value={handlers.windowFilter?.ignorar ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Ignorar'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valororiginal'
  name='valororiginal'
  value={handlers.windowFilter?.valororiginal ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorOriginal (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valororiginal_end'
  name='valororiginal_end'
  value={handlers.windowFilter?.valororiginal_end ?? 0}
  disabled={handlers.windowFilter?.valororiginal != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorOriginal (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='percmulta'
  name='percmulta'
  value={handlers.windowFilter?.percmulta ?? 0}
  onChange={handlers.handleInputValorChange}
  label='PercMulta (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='percmulta_end'
  name='percmulta_end'
  value={handlers.windowFilter?.percmulta_end ?? 0}
  disabled={handlers.windowFilter?.percmulta != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='PercMulta (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valormulta'
  name='valormulta'
  value={handlers.windowFilter?.valormulta ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorMulta (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valormulta_end'
  name='valormulta_end'
  value={handlers.windowFilter?.valormulta_end ?? 0}
  disabled={handlers.windowFilter?.valormulta != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorMulta (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='percjuros'
  name='percjuros'
  value={handlers.windowFilter?.percjuros ?? 0}
  onChange={handlers.handleInputValorChange}
  label='PercJuros (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='percjuros_end'
  name='percjuros_end'
  value={handlers.windowFilter?.percjuros_end ?? 0}
  disabled={handlers.windowFilter?.percjuros != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='PercJuros (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valororiginalcorrigidoindice'
  name='valororiginalcorrigidoindice'
  value={handlers.windowFilter?.valororiginalcorrigidoindice ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorOriginalCorrigidoIndice (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valororiginalcorrigidoindice_end'
  name='valororiginalcorrigidoindice_end'
  value={handlers.windowFilter?.valororiginalcorrigidoindice_end ?? 0}
  disabled={handlers.windowFilter?.valororiginalcorrigidoindice != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorOriginalCorrigidoIndice (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valormultacorrigido'
  name='valormultacorrigido'
  value={handlers.windowFilter?.valormultacorrigido ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorMultaCorrigido (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valormultacorrigido_end'
  name='valormultacorrigido_end'
  value={handlers.windowFilter?.valormultacorrigido_end ?? 0}
  disabled={handlers.windowFilter?.valormultacorrigido != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorMultaCorrigido (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valorjuroscorrigido'
  name='valorjuroscorrigido'
  value={handlers.windowFilter?.valorjuroscorrigido ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorJurosCorrigido (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorjuroscorrigido_end'
  name='valorjuroscorrigido_end'
  value={handlers.windowFilter?.valorjuroscorrigido_end ?? 0}
  disabled={handlers.windowFilter?.valorjuroscorrigido != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorJurosCorrigido (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valorfinal'
  name='valorfinal'
  value={handlers.windowFilter?.valorfinal ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorFinal (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorfinal_end'
  name='valorfinal_end'
  value={handlers.windowFilter?.valorfinal_end ?? 0}
  disabled={handlers.windowFilter?.valorfinal != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorFinal (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputDate
  type='text'
  id='dataultimacorrecao'
  label='DataUltimaCorrecao (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dataultimacorrecao'
  value={handlers.windowFilter?.dataultimacorrecao ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dataultimacorrecao', value)}
  />
  <InputDate
  type='text'
  id='dataultimacorrecao_end'
  label='DataUltimaCorrecao (final)'
  dataForm={null}
  className='inputSearch'
  name='dataultimacorrecao_end'
  value={handlers.windowFilter?.dataultimacorrecao_end ?? ''}
  disabled={handlers.windowFilter?.dataultimacorrecao ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dataultimacorrecao_end', value)}
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};