// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ContatoCRMService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterContatoCRM filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.AgeClienteAvisado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}", filtro.AgeClienteAvisado));
        }

        if (filtro.AgeClienteAvisado_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}_end", filtro.AgeClienteAvisado_end));
        }

        if (filtro.DocsViaRecebimento != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}", filtro.DocsViaRecebimento));
        }

        if (filtro.DocsViaRecebimento_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}_end", filtro.DocsViaRecebimento_end));
        }

        if (filtro.NaoPublicavel != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.NaoPublicavel)}", filtro.NaoPublicavel));
        }

        if (filtro.Notificar != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Notificar)}", filtro.Notificar));
        }

        if (filtro.Ocultar != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Ocultar)}", filtro.Ocultar));
        }

        if (!string.IsNullOrEmpty(filtro.Assunto))
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Assunto)}", ApplyWildCard(filtro.WildcardChar, filtro.Assunto)));
        }

        if (filtro.IsDocsRecebidos != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.IsDocsRecebidos)}", filtro.IsDocsRecebidos));
        }

        if (filtro.QuemNotificou != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.QuemNotificou)}", filtro.QuemNotificou));
        }

        if (filtro.QuemNotificou_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.QuemNotificou)}_end", filtro.QuemNotificou_end));
        }

        if (!filtro.DataNotificou.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataNotificou, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.DataNotificou)}", dataParam));
        }

        if (!filtro.DataNotificou_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataNotificou_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.DataNotificou)}_end", dataParam));
        }

        if (filtro.Operador != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Operador)}", filtro.Operador));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Cliente)}", filtro.Cliente));
        }

        if (!filtro.HoraNotificou.IsEmpty())
        {
            if (DateTime.TryParse(filtro.HoraNotificou, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.HoraNotificou)}", dataParam));
        }

        if (!filtro.HoraNotificou_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.HoraNotificou_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.HoraNotificou)}_end", dataParam));
        }

        if (filtro.ObjetoNotificou != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}", filtro.ObjetoNotificou));
        }

        if (filtro.ObjetoNotificou_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}_end", filtro.ObjetoNotificou_end));
        }

        if (!string.IsNullOrEmpty(filtro.PessoaContato))
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.PessoaContato)}", ApplyWildCard(filtro.WildcardChar, filtro.PessoaContato)));
        }

        if (!filtro.Data.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Data, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Data)}", dataParam));
        }

        if (!filtro.Data_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Data_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Data)}_end", dataParam));
        }

        if (filtro.Tempo != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Tempo)}", filtro.Tempo));
        }

        if (filtro.Tempo_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Tempo)}_end", filtro.Tempo_end));
        }

        if (!filtro.HoraInicial.IsEmpty())
        {
            if (DateTime.TryParse(filtro.HoraInicial, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.HoraInicial)}", dataParam));
        }

        if (!filtro.HoraInicial_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.HoraInicial_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.HoraInicial)}_end", dataParam));
        }

        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Processo)}", filtro.Processo));
        }

        if (filtro.Importante != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Importante)}", filtro.Importante));
        }

        if (filtro.Urgente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Urgente)}", filtro.Urgente));
        }

        if (filtro.GerarHoraTrabalhada != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.GerarHoraTrabalhada)}", filtro.GerarHoraTrabalhada));
        }

        if (filtro.ExibirNoTopo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.ExibirNoTopo)}", filtro.ExibirNoTopo));
        }

        if (filtro.TipoContatoCRM != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.TipoContatoCRM)}", filtro.TipoContatoCRM));
        }

        if (!string.IsNullOrEmpty(filtro.Contato))
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Contato)}", ApplyWildCard(filtro.WildcardChar, filtro.Contato)));
        }

        if (filtro.Emocao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Emocao)}", filtro.Emocao));
        }

        if (filtro.Emocao_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Emocao)}_end", filtro.Emocao_end));
        }

        if (filtro.Continuar != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.Continuar)}", filtro.Continuar));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContatoCRMDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.AgeClienteAvisado.IsEmpty() && filtro.AgeClienteAvisado_end.IsEmpty())
        {
            cWhere.Append(filtro.AgeClienteAvisado <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.AgeClienteAvisado}] >= @{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}");
        }
        else
        {
            cWhere.Append((filtro.AgeClienteAvisado <= 0 && filtro.AgeClienteAvisado_end <= 0) ? string.Empty : (!(filtro.AgeClienteAvisado <= 0) && !(filtro.AgeClienteAvisado_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.AgeClienteAvisado} BETWEEN @{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)} AND @{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}_end" : !(filtro.AgeClienteAvisado <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.AgeClienteAvisado} = @{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.AgeClienteAvisado} <= @{nameof(DBContatoCRMDicInfo.AgeClienteAvisado)}_end");
        }

        if (!filtro.DocsViaRecebimento.IsEmpty() && filtro.DocsViaRecebimento_end.IsEmpty())
        {
            cWhere.Append(filtro.DocsViaRecebimento <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.DocsViaRecebimento}] >= @{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}");
        }
        else
        {
            cWhere.Append((filtro.DocsViaRecebimento <= 0 && filtro.DocsViaRecebimento_end <= 0) ? string.Empty : (!(filtro.DocsViaRecebimento <= 0) && !(filtro.DocsViaRecebimento_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DocsViaRecebimento} BETWEEN @{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)} AND @{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}_end" : !(filtro.DocsViaRecebimento <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DocsViaRecebimento} = @{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DocsViaRecebimento} <= @{nameof(DBContatoCRMDicInfo.DocsViaRecebimento)}_end");
        }

        cWhere.Append(filtro.NaoPublicavel == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.NaoPublicavel}] = @{nameof(DBContatoCRMDicInfo.NaoPublicavel)}");
        cWhere.Append(filtro.Notificar == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Notificar}] = @{nameof(DBContatoCRMDicInfo.Notificar)}");
        cWhere.Append(filtro.Ocultar == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Ocultar}] = @{nameof(DBContatoCRMDicInfo.Ocultar)}");
        cWhere.Append(filtro.Assunto.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Assunto}]  {DevourerConsts.MsiCollate} like @{nameof(DBContatoCRMDicInfo.Assunto)}");
        cWhere.Append(filtro.IsDocsRecebidos == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.IsDocsRecebidos}] = @{nameof(DBContatoCRMDicInfo.IsDocsRecebidos)}");
        if (!filtro.QuemNotificou.IsEmpty() && filtro.QuemNotificou_end.IsEmpty())
        {
            cWhere.Append(filtro.QuemNotificou <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.QuemNotificou}] >= @{nameof(DBContatoCRMDicInfo.QuemNotificou)}");
        }
        else
        {
            cWhere.Append((filtro.QuemNotificou <= 0 && filtro.QuemNotificou_end <= 0) ? string.Empty : (!(filtro.QuemNotificou <= 0) && !(filtro.QuemNotificou_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.QuemNotificou} BETWEEN @{nameof(DBContatoCRMDicInfo.QuemNotificou)} AND @{nameof(DBContatoCRMDicInfo.QuemNotificou)}_end" : !(filtro.QuemNotificou <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.QuemNotificou} = @{nameof(DBContatoCRMDicInfo.QuemNotificou)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.QuemNotificou} <= @{nameof(DBContatoCRMDicInfo.QuemNotificou)}_end");
        }

        if (!filtro.DataNotificou.IsEmpty() && filtro.DataNotificou_end.IsEmpty())
        {
            cWhere.Append(filtro.DataNotificou.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.DataNotificou}], 103) >= CONVERT(DATE, @{nameof(DBContatoCRMDicInfo.DataNotificou)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DataNotificou.IsEmpty() && filtro.DataNotificou_end.IsEmpty()) ? string.Empty : (!(filtro.DataNotificou.IsEmpty()) && !(filtro.DataNotificou_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DataNotificou} BETWEEN @{nameof(DBContatoCRMDicInfo.DataNotificou)} AND @{nameof(DBContatoCRMDicInfo.DataNotificou)}_end" : !(filtro.DataNotificou.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DataNotificou} = @{nameof(DBContatoCRMDicInfo.DataNotificou)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.DataNotificou} <= @{nameof(DBContatoCRMDicInfo.DataNotificou)}_end");
        }

        cWhere.Append(filtro.Operador <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Operador}] = @{nameof(DBContatoCRMDicInfo.Operador)}");
        cWhere.Append(filtro.Cliente <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Cliente}] = @{nameof(DBContatoCRMDicInfo.Cliente)}");
        if (!filtro.HoraNotificou.IsEmpty() && filtro.HoraNotificou_end.IsEmpty())
        {
            cWhere.Append(filtro.HoraNotificou.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.HoraNotificou}], 103) >= CONVERT(DATE, @{nameof(DBContatoCRMDicInfo.HoraNotificou)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.HoraNotificou.IsEmpty() && filtro.HoraNotificou_end.IsEmpty()) ? string.Empty : (!(filtro.HoraNotificou.IsEmpty()) && !(filtro.HoraNotificou_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraNotificou} BETWEEN @{nameof(DBContatoCRMDicInfo.HoraNotificou)} AND @{nameof(DBContatoCRMDicInfo.HoraNotificou)}_end" : !(filtro.HoraNotificou.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraNotificou} = @{nameof(DBContatoCRMDicInfo.HoraNotificou)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraNotificou} <= @{nameof(DBContatoCRMDicInfo.HoraNotificou)}_end");
        }

        if (!filtro.ObjetoNotificou.IsEmpty() && filtro.ObjetoNotificou_end.IsEmpty())
        {
            cWhere.Append(filtro.ObjetoNotificou <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.ObjetoNotificou}] >= @{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}");
        }
        else
        {
            cWhere.Append((filtro.ObjetoNotificou <= 0 && filtro.ObjetoNotificou_end <= 0) ? string.Empty : (!(filtro.ObjetoNotificou <= 0) && !(filtro.ObjetoNotificou_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.ObjetoNotificou} BETWEEN @{nameof(DBContatoCRMDicInfo.ObjetoNotificou)} AND @{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}_end" : !(filtro.ObjetoNotificou <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.ObjetoNotificou} = @{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.ObjetoNotificou} <= @{nameof(DBContatoCRMDicInfo.ObjetoNotificou)}_end");
        }

        cWhere.Append(filtro.PessoaContato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.PessoaContato}]  {DevourerConsts.MsiCollate} like @{nameof(DBContatoCRMDicInfo.PessoaContato)}");
        if (!filtro.Data.IsEmpty() && filtro.Data_end.IsEmpty())
        {
            cWhere.Append(filtro.Data.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Data}], 103) >= CONVERT(DATE, @{nameof(DBContatoCRMDicInfo.Data)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.Data.IsEmpty() && filtro.Data_end.IsEmpty()) ? string.Empty : (!(filtro.Data.IsEmpty()) && !(filtro.Data_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Data} BETWEEN @{nameof(DBContatoCRMDicInfo.Data)} AND @{nameof(DBContatoCRMDicInfo.Data)}_end" : !(filtro.Data.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Data} = @{nameof(DBContatoCRMDicInfo.Data)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Data} <= @{nameof(DBContatoCRMDicInfo.Data)}_end");
        }

        if (!filtro.Tempo.IsEmpty() && filtro.Tempo_end.IsEmpty())
        {
            cWhere.Append(filtro.Tempo == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Tempo}] >= @{nameof(DBContatoCRMDicInfo.Tempo)}");
        }
        else
        {
            cWhere.Append((filtro.Tempo == decimal.MinValue && filtro.Tempo_end == decimal.MinValue) ? string.Empty : (!(filtro.Tempo == decimal.MinValue) && !(filtro.Tempo_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Tempo} BETWEEN @{nameof(DBContatoCRMDicInfo.Tempo)} AND @{nameof(DBContatoCRMDicInfo.Tempo)}_end" : !(filtro.Tempo == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Tempo} = @{nameof(DBContatoCRMDicInfo.Tempo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Tempo} <= @{nameof(DBContatoCRMDicInfo.Tempo)}_end");
        }

        if (!filtro.HoraInicial.IsEmpty() && filtro.HoraInicial_end.IsEmpty())
        {
            cWhere.Append(filtro.HoraInicial.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.HoraInicial}], 103) >= CONVERT(DATE, @{nameof(DBContatoCRMDicInfo.HoraInicial)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.HoraInicial.IsEmpty() && filtro.HoraInicial_end.IsEmpty()) ? string.Empty : (!(filtro.HoraInicial.IsEmpty()) && !(filtro.HoraInicial_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraInicial} BETWEEN @{nameof(DBContatoCRMDicInfo.HoraInicial)} AND @{nameof(DBContatoCRMDicInfo.HoraInicial)}_end" : !(filtro.HoraInicial.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraInicial} = @{nameof(DBContatoCRMDicInfo.HoraInicial)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.HoraInicial} <= @{nameof(DBContatoCRMDicInfo.HoraInicial)}_end");
        }

        cWhere.Append(filtro.Processo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Processo}] = @{nameof(DBContatoCRMDicInfo.Processo)}");
        cWhere.Append(filtro.Importante == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Importante}] = @{nameof(DBContatoCRMDicInfo.Importante)}");
        cWhere.Append(filtro.Urgente == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Urgente}] = @{nameof(DBContatoCRMDicInfo.Urgente)}");
        cWhere.Append(filtro.GerarHoraTrabalhada == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.GerarHoraTrabalhada}] = @{nameof(DBContatoCRMDicInfo.GerarHoraTrabalhada)}");
        cWhere.Append(filtro.ExibirNoTopo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.ExibirNoTopo}] = @{nameof(DBContatoCRMDicInfo.ExibirNoTopo)}");
        cWhere.Append(filtro.TipoContatoCRM <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.TipoContatoCRM}] = @{nameof(DBContatoCRMDicInfo.TipoContatoCRM)}");
        cWhere.Append(filtro.Contato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Contato}]  {DevourerConsts.MsiCollate} like @{nameof(DBContatoCRMDicInfo.Contato)}");
        if (!filtro.Emocao.IsEmpty() && filtro.Emocao_end.IsEmpty())
        {
            cWhere.Append(filtro.Emocao <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Emocao}] >= @{nameof(DBContatoCRMDicInfo.Emocao)}");
        }
        else
        {
            cWhere.Append((filtro.Emocao <= 0 && filtro.Emocao_end <= 0) ? string.Empty : (!(filtro.Emocao <= 0) && !(filtro.Emocao_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Emocao} BETWEEN @{nameof(DBContatoCRMDicInfo.Emocao)} AND @{nameof(DBContatoCRMDicInfo.Emocao)}_end" : !(filtro.Emocao <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Emocao} = @{nameof(DBContatoCRMDicInfo.Emocao)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.Emocao} <= @{nameof(DBContatoCRMDicInfo.Emocao)}_end");
        }

        cWhere.Append(filtro.Continuar == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.Continuar}] = @{nameof(DBContatoCRMDicInfo.Continuar)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBContatoCRMDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContatoCRMDicInfo.PTabelaNome}].[{DBContatoCRMDicInfo.CampoCodigo}] >= @{nameof(DBContatoCRMDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.CampoCodigo} BETWEEN @{nameof(DBContatoCRMDicInfo.CampoCodigo)} AND @{nameof(DBContatoCRMDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.CampoCodigo} = @{nameof(DBContatoCRMDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContatoCRMDicInfo.CampoCodigo} <= @{nameof(DBContatoCRMDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private async Task<IEnumerable<ContatoCRMResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}