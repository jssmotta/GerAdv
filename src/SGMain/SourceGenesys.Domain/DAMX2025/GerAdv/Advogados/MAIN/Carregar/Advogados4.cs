// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBAdvogados
{
    public DBAdvogados(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBAdvogados(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Advogados: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Cargo)))
                m_FCargo = Convert.ToInt32(getValue(DBAdvogadosDicInfo.Cargo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Casa)))
                m_FCasa = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Casa));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBAdvogadosDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Comissao)))
                m_FComissao = Convert.ToInt32(getValue(DBAdvogadosDicInfo.Comissao));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBAdvogadosDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBAdvogadosDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.DtFim)))
                m_FDtFim = Convert.ToDateTime(getValue(DBAdvogadosDicInfo.DtFim));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.DtInicio)))
                m_FDtInicio = Convert.ToDateTime(getValue(DBAdvogadosDicInfo.DtInicio));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBAdvogadosDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Escritorio)))
                m_FEscritorio = Convert.ToInt32(getValue(DBAdvogadosDicInfo.Escritorio));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Estagiario)))
                m_FEstagiario = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Estagiario));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.ParcTop)))
                m_FParcTop = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.ParcTop));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBAdvogadosDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBAdvogadosDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Salario)))
                m_FSalario = Convert.ToDecimal(getValue(DBAdvogadosDicInfo.Salario));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Top)))
                m_FTop = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Top));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAdvogadosDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBAdvogadosDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBAdvogadosDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBAdvogadosDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBAdvogadosDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FContaBancaria = getValue(DBAdvogadosDicInfo.ContaBancaria)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBAdvogadosDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCTPS = getValue(DBAdvogadosDicInfo.CTPS)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCTPSSerie = getValue(DBAdvogadosDicInfo.CTPSSerie)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBAdvogadosDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMailPro = getValue(DBAdvogadosDicInfo.EMailPro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBAdvogadosDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEspecializacao = getValue(DBAdvogadosDicInfo.Especializacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBAdvogadosDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBAdvogadosDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBAdvogadosDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBAdvogadosDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNomeCompleto = getValue(DBAdvogadosDicInfo.NomeCompleto)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNomeMae = getValue(DBAdvogadosDicInfo.NomeMae)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FOAB = getValue(DBAdvogadosDicInfo.OAB)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacao = getValue(DBAdvogadosDicInfo.Observacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FPasta = getValue(DBAdvogadosDicInfo.Pasta)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBAdvogadosDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSecretaria = getValue(DBAdvogadosDicInfo.Secretaria)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FTextoProcuracao = getValue(DBAdvogadosDicInfo.TextoProcuracao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Advogados: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Advogados: {ex.Message}", ex);
        }
    }
}