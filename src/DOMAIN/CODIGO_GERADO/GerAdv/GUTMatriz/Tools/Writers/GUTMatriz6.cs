// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTMatrizWriter
{
    Task<FGUTMatriz> WriteAsync(Models.GUTMatriz gutmatriz, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GUTMatrizResponse gutmatriz, int operadorId, MsiSqlConnection oCnn);
}

public class GUTMatrizWriter(IFGUTMatrizFactory gutmatrizFactory) : IGUTMatrizWriter
{
    private readonly IFGUTMatrizFactory _gutmatrizFactory = gutmatrizFactory ?? throw new ArgumentNullException(nameof(gutmatrizFactory));
    public virtual async Task Delete(GUTMatrizResponse gutmatriz, int operadorId, MsiSqlConnection oCnn)
    {
        await _gutmatrizFactory.DeleteAsync(operadorId, gutmatriz.Id, oCnn);
    }

    public virtual async Task<FGUTMatriz> WriteAsync(Models.GUTMatriz gutmatriz, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (gutmatriz.Id.IsEmptyIDNumber() ? _gutmatrizFactory.CreateAsync() : _gutmatrizFactory.CreateFromIdAsync(gutmatriz.Id, oCnn));
        dbRec.FDescricao = gutmatriz.Descricao;
        dbRec.FGUTTipo = gutmatriz.GUTTipo;
        dbRec.FValor = gutmatriz.Valor;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}