// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IDadosProcuracaoWriter
{
    Task<FDadosProcuracao> WriteAsync(Models.DadosProcuracao dadosprocuracao, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(DadosProcuracaoResponse dadosprocuracao, int operadorId, MsiSqlConnection oCnn);
}

public class DadosProcuracaoWriter(IFDadosProcuracaoFactory dadosprocuracaoFactory) : IDadosProcuracaoWriter
{
    private readonly IFDadosProcuracaoFactory _dadosprocuracaoFactory = dadosprocuracaoFactory;
    public async Task Delete(DadosProcuracaoResponse dadosprocuracao, int operadorId, MsiSqlConnection oCnn)
    {
        await _dadosprocuracaoFactory.DeleteAsync(operadorId, dadosprocuracao.Id, oCnn);
    }

    public async Task<FDadosProcuracao> WriteAsync(Models.DadosProcuracao dadosprocuracao, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (dadosprocuracao.Id.IsEmptyIDNumber() ? _dadosprocuracaoFactory.CreateAsync() : _dadosprocuracaoFactory.CreateFromIdAsync(dadosprocuracao.Id, oCnn));
        dbRec.FCliente = dadosprocuracao.Cliente;
        dbRec.FEstadoCivil = dadosprocuracao.EstadoCivil;
        dbRec.FNacionalidade = dadosprocuracao.Nacionalidade;
        dbRec.FProfissao = dadosprocuracao.Profissao;
        dbRec.FCTPS = dadosprocuracao.CTPS;
        dbRec.FPisPasep = dadosprocuracao.PisPasep;
        dbRec.FRemuneracao = dadosprocuracao.Remuneracao;
        dbRec.FObjeto = dadosprocuracao.Objeto;
        dbRec.FGUID = dadosprocuracao.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}