// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class PoderJudiciarioAssociadoService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterPoderJudiciarioAssociado? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Justica != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Justica)}", filtro.Justica));
            if (filtro.Justica_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Justica)}_end", filtro.Justica_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.JusticaNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.JusticaNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.JusticaNome)));
        }

        if (filtro.Area != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Area)}", filtro.Area));
            if (filtro.Area_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Area)}_end", filtro.Area_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.AreaNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.AreaNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.AreaNome)));
        }

        if (filtro.Tribunal != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Tribunal)}", filtro.Tribunal));
            if (filtro.Tribunal_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Tribunal)}_end", filtro.Tribunal_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.TribunalNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.TribunalNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.TribunalNome)));
        }

        if (filtro.Foro != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Foro)}", filtro.Foro));
            if (filtro.Foro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Foro)}_end", filtro.Foro_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.ForoNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.ForoNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.ForoNome)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.SubDivisaoNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.SubDivisaoNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.SubDivisaoNome)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CidadeNome))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.CidadeNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CidadeNome)));
        }

        if (filtro.SubDivisao != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.SubDivisao)}", filtro.SubDivisao));
            if (filtro.SubDivisao_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.SubDivisao)}_end", filtro.SubDivisao_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Tipo)}", filtro.Tipo));
            if (filtro.Tipo_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.Tipo)}_end", filtro.Tipo_end));
            }
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPoderJudiciarioAssociadoDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Justica.IsEmptyX()) && filtro.Justica_end.IsEmptyX())
        {
            cWhere.Append(filtro.Justica.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Justica}] = @{(DBPoderJudiciarioAssociadoDicInfo.Justica)}");
        }
        else if (!(filtro.Justica.IsEmptyX()) && !(filtro.Justica_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Justica} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Justica)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Justica)}_end");
        }

        cWhere.Append(filtro.JusticaNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.JusticaNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.JusticaNome)}");
        if (!(filtro.Area.IsEmptyX()) && filtro.Area_end.IsEmptyX())
        {
            cWhere.Append(filtro.Area.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Area}] = @{(DBPoderJudiciarioAssociadoDicInfo.Area)}");
        }
        else if (!(filtro.Area.IsEmptyX()) && !(filtro.Area_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Area} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Area)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Area)}_end");
        }

        cWhere.Append(filtro.AreaNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.AreaNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.AreaNome)}");
        if (!(filtro.Tribunal.IsEmptyX()) && filtro.Tribunal_end.IsEmptyX())
        {
            cWhere.Append(filtro.Tribunal.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Tribunal}] = @{(DBPoderJudiciarioAssociadoDicInfo.Tribunal)}");
        }
        else if (!(filtro.Tribunal.IsEmptyX()) && !(filtro.Tribunal_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Tribunal} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Tribunal)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Tribunal)}_end");
        }

        cWhere.Append(filtro.TribunalNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.TribunalNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.TribunalNome)}");
        if (!(filtro.Foro.IsEmptyX()) && filtro.Foro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Foro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Foro}] = @{(DBPoderJudiciarioAssociadoDicInfo.Foro)}");
        }
        else if (!(filtro.Foro.IsEmptyX()) && !(filtro.Foro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Foro} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Foro)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Foro)}_end");
        }

        cWhere.Append(filtro.ForoNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.ForoNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.ForoNome)}");
        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Cidade}] = @{(DBPoderJudiciarioAssociadoDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Cidade} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Cidade)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.SubDivisaoNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.SubDivisaoNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.SubDivisaoNome)}");
        cWhere.Append(filtro.CidadeNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.CidadeNome}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.CidadeNome)}");
        if (!(filtro.SubDivisao.IsEmptyX()) && filtro.SubDivisao_end.IsEmptyX())
        {
            cWhere.Append(filtro.SubDivisao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.SubDivisao}] = @{(DBPoderJudiciarioAssociadoDicInfo.SubDivisao)}");
        }
        else if (!(filtro.SubDivisao.IsEmptyX()) && !(filtro.SubDivisao_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.SubDivisao} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.SubDivisao)} AND @{(DBPoderJudiciarioAssociadoDicInfo.SubDivisao)}_end");
        }

        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBPoderJudiciarioAssociadoDicInfo.GUID)}");
        if (!(filtro.Tipo.IsEmptyX()) && filtro.Tipo_end.IsEmptyX())
        {
            cWhere.Append(filtro.Tipo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.Tipo}] = @{(DBPoderJudiciarioAssociadoDicInfo.Tipo)}");
        }
        else if (!(filtro.Tipo.IsEmptyX()) && !(filtro.Tipo_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.Tipo} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.Tipo)} AND @{(DBPoderJudiciarioAssociadoDicInfo.Tipo)}_end");
        }

        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].[{DBPoderJudiciarioAssociadoDicInfo.CampoCodigo}] = @{(DBPoderJudiciarioAssociadoDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPoderJudiciarioAssociadoDicInfo.PTabelaNome}].{DBPoderJudiciarioAssociadoDicInfo.CampoCodigo} BETWEEN @{(DBPoderJudiciarioAssociadoDicInfo.CampoCodigo)} AND @{(DBPoderJudiciarioAssociadoDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterPoderJudiciarioAssociado? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    private async Task<IEnumerable<PoderJudiciarioAssociadoResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}