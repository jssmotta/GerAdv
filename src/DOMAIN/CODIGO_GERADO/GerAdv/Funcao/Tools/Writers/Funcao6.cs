// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IFuncaoWriter
{
    Task<FFuncao> WriteAsync(Models.Funcao funcao, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(FuncaoResponse funcao, int operadorId, MsiSqlConnection oCnn);
}

public class FuncaoWriter(IFFuncaoFactory funcaoFactory) : IFuncaoWriter
{
    private readonly IFFuncaoFactory _funcaoFactory = funcaoFactory ?? throw new ArgumentNullException(nameof(funcaoFactory));
    public virtual async Task Delete(FuncaoResponse funcao, int operadorId, MsiSqlConnection oCnn)
    {
        await _funcaoFactory.DeleteAsync(operadorId, funcao.Id, oCnn);
    }

    public virtual async Task<FFuncao> WriteAsync(Models.Funcao funcao, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (funcao.Id.IsEmptyIDNumber() ? _funcaoFactory.CreateAsync() : _funcaoFactory.CreateFromIdAsync(funcao.Id, oCnn));
        dbRec.FDescricao = funcao.Descricao;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}