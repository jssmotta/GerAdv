// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ProcessosService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterProcessos filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.AdvParc != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AdvParc)}", filtro.AdvParc));
        }

        if (filtro.AdvParc_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AdvParc)}_end", filtro.AdvParc_end));
        }

        if (filtro.AJGPedidoNegado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGPedidoNegado)}", filtro.AJGPedidoNegado));
        }

        if (filtro.AJGCliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGCliente)}", filtro.AJGCliente));
        }

        if (filtro.AJGPedidoNegadoOPO != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGPedidoNegadoOPO)}", filtro.AJGPedidoNegadoOPO));
        }

        if (filtro.NotificarPOE != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NotificarPOE)}", filtro.NotificarPOE));
        }

        if (filtro.ValorProvisionado != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorProvisionado)}", filtro.ValorProvisionado));
        }

        if (filtro.ValorProvisionado_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorProvisionado)}_end", filtro.ValorProvisionado_end));
        }

        if (filtro.AJGOponente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGOponente)}", filtro.AJGOponente));
        }

        if (filtro.ValorCacheCalculo != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCacheCalculo)}", filtro.ValorCacheCalculo));
        }

        if (filtro.ValorCacheCalculo_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCacheCalculo)}_end", filtro.ValorCacheCalculo_end));
        }

        if (filtro.AJGPedidoOPO != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGPedidoOPO)}", filtro.AJGPedidoOPO));
        }

        if (filtro.ValorCacheCalculoProv != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}", filtro.ValorCacheCalculoProv));
        }

        if (filtro.ValorCacheCalculoProv_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}_end", filtro.ValorCacheCalculoProv_end));
        }

        if (filtro.ConsiderarParado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ConsiderarParado)}", filtro.ConsiderarParado));
        }

        if (filtro.ValorCalculado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCalculado)}", filtro.ValorCalculado));
        }

        if (filtro.AJGConcedidoOPO != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGConcedidoOPO)}", filtro.AJGConcedidoOPO));
        }

        if (filtro.Cobranca != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Cobranca)}", filtro.Cobranca));
        }

        if (!filtro.DataEntrada.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataEntrada, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.DataEntrada)}", dataParam));
        }

        if (!filtro.DataEntrada_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataEntrada_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.DataEntrada)}_end", dataParam));
        }

        if (filtro.Penhora != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Penhora)}", filtro.Penhora));
        }

        if (filtro.AJGPedido != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGPedido)}", filtro.AJGPedido));
        }

        if (filtro.TipoBaixa != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.TipoBaixa)}", filtro.TipoBaixa));
        }

        if (filtro.TipoBaixa_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.TipoBaixa)}_end", filtro.TipoBaixa_end));
        }

        if (filtro.ClassRisco != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ClassRisco)}", filtro.ClassRisco));
        }

        if (filtro.ClassRisco_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ClassRisco)}_end", filtro.ClassRisco_end));
        }

        if (filtro.IsApenso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.IsApenso)}", filtro.IsApenso));
        }

        if (filtro.ValorCausaInicial != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCausaInicial)}", filtro.ValorCausaInicial));
        }

        if (filtro.ValorCausaInicial_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCausaInicial)}_end", filtro.ValorCausaInicial_end));
        }

        if (filtro.AJGConcedido != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AJGConcedido)}", filtro.AJGConcedido));
        }

        if (!string.IsNullOrEmpty(filtro.ObsBCX))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ObsBCX)}", ApplyWildCard(filtro.WildcardChar, filtro.ObsBCX)));
        }

        if (filtro.ValorCausaDefinitivo != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}", filtro.ValorCausaDefinitivo));
        }

        if (filtro.ValorCausaDefinitivo_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}_end", filtro.ValorCausaDefinitivo_end));
        }

        if (filtro.PercProbExito != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.PercProbExito)}", filtro.PercProbExito));
        }

        if (filtro.PercProbExito_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.PercProbExito)}_end", filtro.PercProbExito_end));
        }

        if (filtro.MNA != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.MNA)}", filtro.MNA));
        }

        if (filtro.PercExito != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.PercExito)}", filtro.PercExito));
        }

        if (filtro.PercExito_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.PercExito)}_end", filtro.PercExito_end));
        }

        if (!string.IsNullOrEmpty(filtro.NroExtra))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NroExtra)}", ApplyWildCard(filtro.WildcardChar, filtro.NroExtra)));
        }

        if (filtro.AdvOpo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.AdvOpo)}", filtro.AdvOpo));
        }

        if (filtro.Extra != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Extra)}", filtro.Extra));
        }

        if (filtro.Justica != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Justica)}", filtro.Justica));
        }

        if (filtro.Advogado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Advogado)}", filtro.Advogado));
        }

        if (!string.IsNullOrEmpty(filtro.NroCaixa))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NroCaixa)}", ApplyWildCard(filtro.WildcardChar, filtro.NroCaixa)));
        }

        if (filtro.Preposto != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Preposto)}", filtro.Preposto));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Cliente)}", filtro.Cliente));
        }

        if (filtro.Oponente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Oponente)}", filtro.Oponente));
        }

        if (filtro.Area != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Area)}", filtro.Area));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Cidade)}", filtro.Cidade));
        }

        if (filtro.Situacao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Situacao)}", filtro.Situacao));
        }

        if (filtro.IDSituacao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.IDSituacao)}", filtro.IDSituacao));
        }

        if (filtro.Valor != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Valor)}", filtro.Valor));
        }

        if (filtro.Valor_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Valor)}_end", filtro.Valor_end));
        }

        if (filtro.Rito != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Rito)}", filtro.Rito));
        }

        if (!string.IsNullOrEmpty(filtro.Fato))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Fato)}", ApplyWildCard(filtro.WildcardChar, filtro.Fato)));
        }

        if (!string.IsNullOrEmpty(filtro.NroPasta))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NroPasta)}", ApplyWildCard(filtro.WildcardChar, filtro.NroPasta)));
        }

        if (filtro.Atividade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Atividade)}", filtro.Atividade));
        }

        if (!string.IsNullOrEmpty(filtro.CaixaMorto))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.CaixaMorto)}", ApplyWildCard(filtro.WildcardChar, filtro.CaixaMorto)));
        }

        if (filtro.Baixado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Baixado)}", filtro.Baixado));
        }

        if (!filtro.DtBaixa.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtBaixa, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.DtBaixa)}", dataParam));
        }

        if (!filtro.DtBaixa_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtBaixa_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.DtBaixa)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.MotivoBaixa))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.MotivoBaixa)}", ApplyWildCard(filtro.WildcardChar, filtro.MotivoBaixa)));
        }

        if (!string.IsNullOrEmpty(filtro.OBS))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.OBS)}", ApplyWildCard(filtro.WildcardChar, filtro.OBS)));
        }

        if (filtro.Printed != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Printed)}", filtro.Printed));
        }

        if (!string.IsNullOrEmpty(filtro.ZKey))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ZKey)}", ApplyWildCard(filtro.WildcardChar, filtro.ZKey)));
        }

        if (filtro.ZKeyQuem != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ZKeyQuem)}", filtro.ZKeyQuem));
        }

        if (filtro.ZKeyQuem_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ZKeyQuem)}_end", filtro.ZKeyQuem_end));
        }

        if (!filtro.ZKeyQuando.IsEmpty())
        {
            if (DateTime.TryParse(filtro.ZKeyQuando, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.ZKeyQuando)}", dataParam));
        }

        if (!filtro.ZKeyQuando_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.ZKeyQuando_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBProcessosDicInfo.ZKeyQuando)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.Resumo))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Resumo)}", ApplyWildCard(filtro.WildcardChar, filtro.Resumo)));
        }

        if (filtro.NaoImprimir != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NaoImprimir)}", filtro.NaoImprimir));
        }

        if (filtro.Eletronico != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.Eletronico)}", filtro.Eletronico));
        }

        if (!string.IsNullOrEmpty(filtro.NroContrato))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.NroContrato)}", ApplyWildCard(filtro.WildcardChar, filtro.NroContrato)));
        }

        if (!string.IsNullOrEmpty(filtro.PercProbExitoJustificativa))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.PercProbExitoJustificativa)}", ApplyWildCard(filtro.WildcardChar, filtro.PercProbExitoJustificativa)));
        }

        if (filtro.HonorarioValor != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioValor)}", filtro.HonorarioValor));
        }

        if (filtro.HonorarioValor_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioValor)}_end", filtro.HonorarioValor_end));
        }

        if (filtro.HonorarioPercentual != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioPercentual)}", filtro.HonorarioPercentual));
        }

        if (filtro.HonorarioPercentual_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioPercentual)}_end", filtro.HonorarioPercentual_end));
        }

        if (filtro.HonorarioSucumbencia != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}", filtro.HonorarioSucumbencia));
        }

        if (filtro.HonorarioSucumbencia_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}_end", filtro.HonorarioSucumbencia_end));
        }

        if (filtro.FaseAuditoria != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.FaseAuditoria)}", filtro.FaseAuditoria));
        }

        if (filtro.FaseAuditoria_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.FaseAuditoria)}_end", filtro.FaseAuditoria_end));
        }

        if (filtro.ValorCondenacao != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacao)}", filtro.ValorCondenacao));
        }

        if (filtro.ValorCondenacao_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacao)}_end", filtro.ValorCondenacao_end));
        }

        if (filtro.ValorCondenacaoCalculado != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}", filtro.ValorCondenacaoCalculado));
        }

        if (filtro.ValorCondenacaoCalculado_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}_end", filtro.ValorCondenacaoCalculado_end));
        }

        if (filtro.ValorCondenacaoProvisorio != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}", filtro.ValorCondenacaoProvisorio));
        }

        if (filtro.ValorCondenacaoProvisorio_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}_end", filtro.ValorCondenacaoProvisorio_end));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBProcessosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.AdvParc.IsEmpty() && filtro.AdvParc_end.IsEmpty())
        {
            cWhere.Append(filtro.AdvParc <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AdvParc}] >= @{nameof(DBProcessosDicInfo.AdvParc)}");
        }
        else
        {
            cWhere.Append((filtro.AdvParc <= 0 && filtro.AdvParc_end <= 0) ? string.Empty : (!(filtro.AdvParc <= 0) && !(filtro.AdvParc_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.AdvParc} BETWEEN @{nameof(DBProcessosDicInfo.AdvParc)} AND @{nameof(DBProcessosDicInfo.AdvParc)}_end" : !(filtro.AdvParc <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.AdvParc} = @{nameof(DBProcessosDicInfo.AdvParc)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.AdvParc} <= @{nameof(DBProcessosDicInfo.AdvParc)}_end");
        }

        cWhere.Append(filtro.AJGPedidoNegado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGPedidoNegado}] = @{nameof(DBProcessosDicInfo.AJGPedidoNegado)}");
        cWhere.Append(filtro.AJGCliente == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGCliente}] = @{nameof(DBProcessosDicInfo.AJGCliente)}");
        cWhere.Append(filtro.AJGPedidoNegadoOPO == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGPedidoNegadoOPO}] = @{nameof(DBProcessosDicInfo.AJGPedidoNegadoOPO)}");
        cWhere.Append(filtro.NotificarPOE == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NotificarPOE}] = @{nameof(DBProcessosDicInfo.NotificarPOE)}");
        if (!filtro.ValorProvisionado.IsEmpty() && filtro.ValorProvisionado_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorProvisionado == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorProvisionado}] >= @{nameof(DBProcessosDicInfo.ValorProvisionado)}");
        }
        else
        {
            cWhere.Append((filtro.ValorProvisionado == decimal.MinValue && filtro.ValorProvisionado_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorProvisionado == decimal.MinValue) && !(filtro.ValorProvisionado_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorProvisionado} BETWEEN @{nameof(DBProcessosDicInfo.ValorProvisionado)} AND @{nameof(DBProcessosDicInfo.ValorProvisionado)}_end" : !(filtro.ValorProvisionado == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorProvisionado} = @{nameof(DBProcessosDicInfo.ValorProvisionado)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorProvisionado} <= @{nameof(DBProcessosDicInfo.ValorProvisionado)}_end");
        }

        cWhere.Append(filtro.AJGOponente == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGOponente}] = @{nameof(DBProcessosDicInfo.AJGOponente)}");
        if (!filtro.ValorCacheCalculo.IsEmpty() && filtro.ValorCacheCalculo_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCacheCalculo == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCacheCalculo}] >= @{nameof(DBProcessosDicInfo.ValorCacheCalculo)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCacheCalculo == decimal.MinValue && filtro.ValorCacheCalculo_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCacheCalculo == decimal.MinValue) && !(filtro.ValorCacheCalculo_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculo} BETWEEN @{nameof(DBProcessosDicInfo.ValorCacheCalculo)} AND @{nameof(DBProcessosDicInfo.ValorCacheCalculo)}_end" : !(filtro.ValorCacheCalculo == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculo} = @{nameof(DBProcessosDicInfo.ValorCacheCalculo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculo} <= @{nameof(DBProcessosDicInfo.ValorCacheCalculo)}_end");
        }

        cWhere.Append(filtro.AJGPedidoOPO == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGPedidoOPO}] = @{nameof(DBProcessosDicInfo.AJGPedidoOPO)}");
        if (!filtro.ValorCacheCalculoProv.IsEmpty() && filtro.ValorCacheCalculoProv_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCacheCalculoProv == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCacheCalculoProv}] >= @{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCacheCalculoProv == decimal.MinValue && filtro.ValorCacheCalculoProv_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCacheCalculoProv == decimal.MinValue) && !(filtro.ValorCacheCalculoProv_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculoProv} BETWEEN @{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)} AND @{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}_end" : !(filtro.ValorCacheCalculoProv == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculoProv} = @{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCacheCalculoProv} <= @{nameof(DBProcessosDicInfo.ValorCacheCalculoProv)}_end");
        }

        cWhere.Append(filtro.ConsiderarParado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ConsiderarParado}] = @{nameof(DBProcessosDicInfo.ConsiderarParado)}");
        cWhere.Append(filtro.ValorCalculado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCalculado}] = @{nameof(DBProcessosDicInfo.ValorCalculado)}");
        cWhere.Append(filtro.AJGConcedidoOPO == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGConcedidoOPO}] = @{nameof(DBProcessosDicInfo.AJGConcedidoOPO)}");
        cWhere.Append(filtro.Cobranca == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Cobranca}] = @{nameof(DBProcessosDicInfo.Cobranca)}");
        if (!filtro.DataEntrada.IsEmpty() && filtro.DataEntrada_end.IsEmpty())
        {
            cWhere.Append(filtro.DataEntrada.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.DataEntrada}], 103) >= CONVERT(DATE, @{nameof(DBProcessosDicInfo.DataEntrada)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DataEntrada.IsEmpty() && filtro.DataEntrada_end.IsEmpty()) ? string.Empty : (!(filtro.DataEntrada.IsEmpty()) && !(filtro.DataEntrada_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DataEntrada} BETWEEN @{nameof(DBProcessosDicInfo.DataEntrada)} AND @{nameof(DBProcessosDicInfo.DataEntrada)}_end" : !(filtro.DataEntrada.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DataEntrada} = @{nameof(DBProcessosDicInfo.DataEntrada)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DataEntrada} <= @{nameof(DBProcessosDicInfo.DataEntrada)}_end");
        }

        cWhere.Append(filtro.Penhora == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Penhora}] = @{nameof(DBProcessosDicInfo.Penhora)}");
        cWhere.Append(filtro.AJGPedido == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGPedido}] = @{nameof(DBProcessosDicInfo.AJGPedido)}");
        if (!filtro.TipoBaixa.IsEmpty() && filtro.TipoBaixa_end.IsEmpty())
        {
            cWhere.Append(filtro.TipoBaixa <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.TipoBaixa}] >= @{nameof(DBProcessosDicInfo.TipoBaixa)}");
        }
        else
        {
            cWhere.Append((filtro.TipoBaixa <= 0 && filtro.TipoBaixa_end <= 0) ? string.Empty : (!(filtro.TipoBaixa <= 0) && !(filtro.TipoBaixa_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.TipoBaixa} BETWEEN @{nameof(DBProcessosDicInfo.TipoBaixa)} AND @{nameof(DBProcessosDicInfo.TipoBaixa)}_end" : !(filtro.TipoBaixa <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.TipoBaixa} = @{nameof(DBProcessosDicInfo.TipoBaixa)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.TipoBaixa} <= @{nameof(DBProcessosDicInfo.TipoBaixa)}_end");
        }

        if (!filtro.ClassRisco.IsEmpty() && filtro.ClassRisco_end.IsEmpty())
        {
            cWhere.Append(filtro.ClassRisco <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ClassRisco}] >= @{nameof(DBProcessosDicInfo.ClassRisco)}");
        }
        else
        {
            cWhere.Append((filtro.ClassRisco <= 0 && filtro.ClassRisco_end <= 0) ? string.Empty : (!(filtro.ClassRisco <= 0) && !(filtro.ClassRisco_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ClassRisco} BETWEEN @{nameof(DBProcessosDicInfo.ClassRisco)} AND @{nameof(DBProcessosDicInfo.ClassRisco)}_end" : !(filtro.ClassRisco <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ClassRisco} = @{nameof(DBProcessosDicInfo.ClassRisco)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ClassRisco} <= @{nameof(DBProcessosDicInfo.ClassRisco)}_end");
        }

        cWhere.Append(filtro.IsApenso == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.IsApenso}] = @{nameof(DBProcessosDicInfo.IsApenso)}");
        if (!filtro.ValorCausaInicial.IsEmpty() && filtro.ValorCausaInicial_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCausaInicial == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCausaInicial}] >= @{nameof(DBProcessosDicInfo.ValorCausaInicial)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCausaInicial == decimal.MinValue && filtro.ValorCausaInicial_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCausaInicial == decimal.MinValue) && !(filtro.ValorCausaInicial_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaInicial} BETWEEN @{nameof(DBProcessosDicInfo.ValorCausaInicial)} AND @{nameof(DBProcessosDicInfo.ValorCausaInicial)}_end" : !(filtro.ValorCausaInicial == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaInicial} = @{nameof(DBProcessosDicInfo.ValorCausaInicial)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaInicial} <= @{nameof(DBProcessosDicInfo.ValorCausaInicial)}_end");
        }

        cWhere.Append(filtro.AJGConcedido == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AJGConcedido}] = @{nameof(DBProcessosDicInfo.AJGConcedido)}");
        cWhere.Append(filtro.ObsBCX.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ObsBCX}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.ObsBCX)}");
        if (!filtro.ValorCausaDefinitivo.IsEmpty() && filtro.ValorCausaDefinitivo_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCausaDefinitivo == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCausaDefinitivo}] >= @{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCausaDefinitivo == decimal.MinValue && filtro.ValorCausaDefinitivo_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCausaDefinitivo == decimal.MinValue) && !(filtro.ValorCausaDefinitivo_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaDefinitivo} BETWEEN @{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)} AND @{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}_end" : !(filtro.ValorCausaDefinitivo == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaDefinitivo} = @{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCausaDefinitivo} <= @{nameof(DBProcessosDicInfo.ValorCausaDefinitivo)}_end");
        }

        if (!filtro.PercProbExito.IsEmpty() && filtro.PercProbExito_end.IsEmpty())
        {
            cWhere.Append(filtro.PercProbExito == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.PercProbExito}] >= @{nameof(DBProcessosDicInfo.PercProbExito)}");
        }
        else
        {
            cWhere.Append((filtro.PercProbExito == decimal.MinValue && filtro.PercProbExito_end == decimal.MinValue) ? string.Empty : (!(filtro.PercProbExito == decimal.MinValue) && !(filtro.PercProbExito_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercProbExito} BETWEEN @{nameof(DBProcessosDicInfo.PercProbExito)} AND @{nameof(DBProcessosDicInfo.PercProbExito)}_end" : !(filtro.PercProbExito == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercProbExito} = @{nameof(DBProcessosDicInfo.PercProbExito)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercProbExito} <= @{nameof(DBProcessosDicInfo.PercProbExito)}_end");
        }

        cWhere.Append(filtro.MNA == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.MNA}] = @{nameof(DBProcessosDicInfo.MNA)}");
        if (!filtro.PercExito.IsEmpty() && filtro.PercExito_end.IsEmpty())
        {
            cWhere.Append(filtro.PercExito == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.PercExito}] >= @{nameof(DBProcessosDicInfo.PercExito)}");
        }
        else
        {
            cWhere.Append((filtro.PercExito == decimal.MinValue && filtro.PercExito_end == decimal.MinValue) ? string.Empty : (!(filtro.PercExito == decimal.MinValue) && !(filtro.PercExito_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercExito} BETWEEN @{nameof(DBProcessosDicInfo.PercExito)} AND @{nameof(DBProcessosDicInfo.PercExito)}_end" : !(filtro.PercExito == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercExito} = @{nameof(DBProcessosDicInfo.PercExito)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.PercExito} <= @{nameof(DBProcessosDicInfo.PercExito)}_end");
        }

        cWhere.Append(filtro.NroExtra.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NroExtra}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.NroExtra)}");
        cWhere.Append(filtro.AdvOpo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.AdvOpo}] = @{nameof(DBProcessosDicInfo.AdvOpo)}");
        cWhere.Append(filtro.Extra == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Extra}] = @{nameof(DBProcessosDicInfo.Extra)}");
        cWhere.Append(filtro.Justica <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Justica}] = @{nameof(DBProcessosDicInfo.Justica)}");
        cWhere.Append(filtro.Advogado <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Advogado}] = @{nameof(DBProcessosDicInfo.Advogado)}");
        cWhere.Append(filtro.NroCaixa.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NroCaixa}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.NroCaixa)}");
        cWhere.Append(filtro.Preposto <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Preposto}] = @{nameof(DBProcessosDicInfo.Preposto)}");
        cWhere.Append(filtro.Cliente <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Cliente}] = @{nameof(DBProcessosDicInfo.Cliente)}");
        cWhere.Append(filtro.Oponente <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Oponente}] = @{nameof(DBProcessosDicInfo.Oponente)}");
        cWhere.Append(filtro.Area <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Area}] = @{nameof(DBProcessosDicInfo.Area)}");
        cWhere.Append(filtro.Cidade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Cidade}] = @{nameof(DBProcessosDicInfo.Cidade)}");
        cWhere.Append(filtro.Situacao <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Situacao}] = @{nameof(DBProcessosDicInfo.Situacao)}");
        cWhere.Append(filtro.IDSituacao == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.IDSituacao}] = @{nameof(DBProcessosDicInfo.IDSituacao)}");
        if (!filtro.Valor.IsEmpty() && filtro.Valor_end.IsEmpty())
        {
            cWhere.Append(filtro.Valor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Valor}] >= @{nameof(DBProcessosDicInfo.Valor)}");
        }
        else
        {
            cWhere.Append((filtro.Valor == decimal.MinValue && filtro.Valor_end == decimal.MinValue) ? string.Empty : (!(filtro.Valor == decimal.MinValue) && !(filtro.Valor_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.Valor} BETWEEN @{nameof(DBProcessosDicInfo.Valor)} AND @{nameof(DBProcessosDicInfo.Valor)}_end" : !(filtro.Valor == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.Valor} = @{nameof(DBProcessosDicInfo.Valor)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.Valor} <= @{nameof(DBProcessosDicInfo.Valor)}_end");
        }

        cWhere.Append(filtro.Rito <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Rito}] = @{nameof(DBProcessosDicInfo.Rito)}");
        cWhere.Append(filtro.Fato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Fato}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.Fato)}");
        cWhere.Append(filtro.NroPasta.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NroPasta}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.NroPasta)}");
        cWhere.Append(filtro.Atividade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Atividade}] = @{nameof(DBProcessosDicInfo.Atividade)}");
        cWhere.Append(filtro.CaixaMorto.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.CaixaMorto}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.CaixaMorto)}");
        cWhere.Append(filtro.Baixado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Baixado}] = @{nameof(DBProcessosDicInfo.Baixado)}");
        if (!filtro.DtBaixa.IsEmpty() && filtro.DtBaixa_end.IsEmpty())
        {
            cWhere.Append(filtro.DtBaixa.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.DtBaixa}], 103) >= CONVERT(DATE, @{nameof(DBProcessosDicInfo.DtBaixa)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DtBaixa.IsEmpty() && filtro.DtBaixa_end.IsEmpty()) ? string.Empty : (!(filtro.DtBaixa.IsEmpty()) && !(filtro.DtBaixa_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DtBaixa} BETWEEN @{nameof(DBProcessosDicInfo.DtBaixa)} AND @{nameof(DBProcessosDicInfo.DtBaixa)}_end" : !(filtro.DtBaixa.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DtBaixa} = @{nameof(DBProcessosDicInfo.DtBaixa)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.DtBaixa} <= @{nameof(DBProcessosDicInfo.DtBaixa)}_end");
        }

        cWhere.Append(filtro.MotivoBaixa.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.MotivoBaixa}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.MotivoBaixa)}");
        cWhere.Append(filtro.OBS.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.OBS}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.OBS)}");
        cWhere.Append(filtro.Printed == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Printed}] = @{nameof(DBProcessosDicInfo.Printed)}");
        cWhere.Append(filtro.ZKey.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ZKey}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.ZKey)}");
        if (!filtro.ZKeyQuem.IsEmpty() && filtro.ZKeyQuem_end.IsEmpty())
        {
            cWhere.Append(filtro.ZKeyQuem <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ZKeyQuem}] >= @{nameof(DBProcessosDicInfo.ZKeyQuem)}");
        }
        else
        {
            cWhere.Append((filtro.ZKeyQuem <= 0 && filtro.ZKeyQuem_end <= 0) ? string.Empty : (!(filtro.ZKeyQuem <= 0) && !(filtro.ZKeyQuem_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuem} BETWEEN @{nameof(DBProcessosDicInfo.ZKeyQuem)} AND @{nameof(DBProcessosDicInfo.ZKeyQuem)}_end" : !(filtro.ZKeyQuem <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuem} = @{nameof(DBProcessosDicInfo.ZKeyQuem)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuem} <= @{nameof(DBProcessosDicInfo.ZKeyQuem)}_end");
        }

        if (!filtro.ZKeyQuando.IsEmpty() && filtro.ZKeyQuando_end.IsEmpty())
        {
            cWhere.Append(filtro.ZKeyQuando.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ZKeyQuando}], 103) >= CONVERT(DATE, @{nameof(DBProcessosDicInfo.ZKeyQuando)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.ZKeyQuando.IsEmpty() && filtro.ZKeyQuando_end.IsEmpty()) ? string.Empty : (!(filtro.ZKeyQuando.IsEmpty()) && !(filtro.ZKeyQuando_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuando} BETWEEN @{nameof(DBProcessosDicInfo.ZKeyQuando)} AND @{nameof(DBProcessosDicInfo.ZKeyQuando)}_end" : !(filtro.ZKeyQuando.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuando} = @{nameof(DBProcessosDicInfo.ZKeyQuando)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ZKeyQuando} <= @{nameof(DBProcessosDicInfo.ZKeyQuando)}_end");
        }

        cWhere.Append(filtro.Resumo.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Resumo}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.Resumo)}");
        cWhere.Append(filtro.NaoImprimir == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NaoImprimir}] = @{nameof(DBProcessosDicInfo.NaoImprimir)}");
        cWhere.Append(filtro.Eletronico == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.Eletronico}] = @{nameof(DBProcessosDicInfo.Eletronico)}");
        cWhere.Append(filtro.NroContrato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.NroContrato}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.NroContrato)}");
        cWhere.Append(filtro.PercProbExitoJustificativa.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.PercProbExitoJustificativa}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.PercProbExitoJustificativa)}");
        if (!filtro.HonorarioValor.IsEmpty() && filtro.HonorarioValor_end.IsEmpty())
        {
            cWhere.Append(filtro.HonorarioValor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.HonorarioValor}] >= @{nameof(DBProcessosDicInfo.HonorarioValor)}");
        }
        else
        {
            cWhere.Append((filtro.HonorarioValor == decimal.MinValue && filtro.HonorarioValor_end == decimal.MinValue) ? string.Empty : (!(filtro.HonorarioValor == decimal.MinValue) && !(filtro.HonorarioValor_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioValor} BETWEEN @{nameof(DBProcessosDicInfo.HonorarioValor)} AND @{nameof(DBProcessosDicInfo.HonorarioValor)}_end" : !(filtro.HonorarioValor == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioValor} = @{nameof(DBProcessosDicInfo.HonorarioValor)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioValor} <= @{nameof(DBProcessosDicInfo.HonorarioValor)}_end");
        }

        if (!filtro.HonorarioPercentual.IsEmpty() && filtro.HonorarioPercentual_end.IsEmpty())
        {
            cWhere.Append(filtro.HonorarioPercentual == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.HonorarioPercentual}] >= @{nameof(DBProcessosDicInfo.HonorarioPercentual)}");
        }
        else
        {
            cWhere.Append((filtro.HonorarioPercentual == decimal.MinValue && filtro.HonorarioPercentual_end == decimal.MinValue) ? string.Empty : (!(filtro.HonorarioPercentual == decimal.MinValue) && !(filtro.HonorarioPercentual_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioPercentual} BETWEEN @{nameof(DBProcessosDicInfo.HonorarioPercentual)} AND @{nameof(DBProcessosDicInfo.HonorarioPercentual)}_end" : !(filtro.HonorarioPercentual == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioPercentual} = @{nameof(DBProcessosDicInfo.HonorarioPercentual)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioPercentual} <= @{nameof(DBProcessosDicInfo.HonorarioPercentual)}_end");
        }

        if (!filtro.HonorarioSucumbencia.IsEmpty() && filtro.HonorarioSucumbencia_end.IsEmpty())
        {
            cWhere.Append(filtro.HonorarioSucumbencia == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.HonorarioSucumbencia}] >= @{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}");
        }
        else
        {
            cWhere.Append((filtro.HonorarioSucumbencia == decimal.MinValue && filtro.HonorarioSucumbencia_end == decimal.MinValue) ? string.Empty : (!(filtro.HonorarioSucumbencia == decimal.MinValue) && !(filtro.HonorarioSucumbencia_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioSucumbencia} BETWEEN @{nameof(DBProcessosDicInfo.HonorarioSucumbencia)} AND @{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}_end" : !(filtro.HonorarioSucumbencia == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioSucumbencia} = @{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.HonorarioSucumbencia} <= @{nameof(DBProcessosDicInfo.HonorarioSucumbencia)}_end");
        }

        if (!filtro.FaseAuditoria.IsEmpty() && filtro.FaseAuditoria_end.IsEmpty())
        {
            cWhere.Append(filtro.FaseAuditoria <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.FaseAuditoria}] >= @{nameof(DBProcessosDicInfo.FaseAuditoria)}");
        }
        else
        {
            cWhere.Append((filtro.FaseAuditoria <= 0 && filtro.FaseAuditoria_end <= 0) ? string.Empty : (!(filtro.FaseAuditoria <= 0) && !(filtro.FaseAuditoria_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.FaseAuditoria} BETWEEN @{nameof(DBProcessosDicInfo.FaseAuditoria)} AND @{nameof(DBProcessosDicInfo.FaseAuditoria)}_end" : !(filtro.FaseAuditoria <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.FaseAuditoria} = @{nameof(DBProcessosDicInfo.FaseAuditoria)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.FaseAuditoria} <= @{nameof(DBProcessosDicInfo.FaseAuditoria)}_end");
        }

        if (!filtro.ValorCondenacao.IsEmpty() && filtro.ValorCondenacao_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCondenacao == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCondenacao}] >= @{nameof(DBProcessosDicInfo.ValorCondenacao)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCondenacao == decimal.MinValue && filtro.ValorCondenacao_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCondenacao == decimal.MinValue) && !(filtro.ValorCondenacao_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacao} BETWEEN @{nameof(DBProcessosDicInfo.ValorCondenacao)} AND @{nameof(DBProcessosDicInfo.ValorCondenacao)}_end" : !(filtro.ValorCondenacao == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacao} = @{nameof(DBProcessosDicInfo.ValorCondenacao)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacao} <= @{nameof(DBProcessosDicInfo.ValorCondenacao)}_end");
        }

        if (!filtro.ValorCondenacaoCalculado.IsEmpty() && filtro.ValorCondenacaoCalculado_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCondenacaoCalculado == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCondenacaoCalculado}] >= @{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCondenacaoCalculado == decimal.MinValue && filtro.ValorCondenacaoCalculado_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorCondenacaoCalculado == decimal.MinValue) && !(filtro.ValorCondenacaoCalculado_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoCalculado} BETWEEN @{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)} AND @{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}_end" : !(filtro.ValorCondenacaoCalculado == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoCalculado} = @{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoCalculado} <= @{nameof(DBProcessosDicInfo.ValorCondenacaoCalculado)}_end");
        }

        if (!filtro.ValorCondenacaoProvisorio.IsEmpty() && filtro.ValorCondenacaoProvisorio_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorCondenacaoProvisorio <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.ValorCondenacaoProvisorio}] >= @{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}");
        }
        else
        {
            cWhere.Append((filtro.ValorCondenacaoProvisorio <= 0 && filtro.ValorCondenacaoProvisorio_end <= 0) ? string.Empty : (!(filtro.ValorCondenacaoProvisorio <= 0) && !(filtro.ValorCondenacaoProvisorio_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoProvisorio} BETWEEN @{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)} AND @{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}_end" : !(filtro.ValorCondenacaoProvisorio <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoProvisorio} = @{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.ValorCondenacaoProvisorio} <= @{nameof(DBProcessosDicInfo.ValorCondenacaoProvisorio)}_end");
        }

        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBProcessosDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBProcessosDicInfo.PTabelaNome}].[{DBProcessosDicInfo.CampoCodigo}] >= @{nameof(DBProcessosDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.CampoCodigo} BETWEEN @{nameof(DBProcessosDicInfo.CampoCodigo)} AND @{nameof(DBProcessosDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.CampoCodigo} = @{nameof(DBProcessosDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBProcessosDicInfo.CampoCodigo} <= @{nameof(DBProcessosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterProcessos? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(uri, "", [], oCnn);
        var cacheKey = $"{uri}-Processos-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBProcessosDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ProcessosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}