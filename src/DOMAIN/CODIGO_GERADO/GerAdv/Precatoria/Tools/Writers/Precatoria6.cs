// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPrecatoriaWriter
{
    Task<FPrecatoria> WriteAsync(Models.Precatoria precatoria, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(PrecatoriaResponse precatoria, int operadorId, MsiSqlConnection oCnn);
}

public class PrecatoriaWriter(IFPrecatoriaFactory precatoriaFactory) : IPrecatoriaWriter
{
    private readonly IFPrecatoriaFactory _precatoriaFactory = precatoriaFactory;
    public async Task Delete(PrecatoriaResponse precatoria, int operadorId, MsiSqlConnection oCnn)
    {
        await _precatoriaFactory.DeleteAsync(operadorId, precatoria.Id, oCnn);
    }

    public async Task<FPrecatoria> WriteAsync(Models.Precatoria precatoria, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (precatoria.Id.IsEmptyIDNumber() ? _precatoriaFactory.CreateAsync() : _precatoriaFactory.CreateFromIdAsync(precatoria.Id, oCnn));
        if (precatoria.DtDist != null)
            dbRec.FDtDist = precatoria.DtDist.ToString();
        dbRec.FProcesso = precatoria.Processo;
        dbRec.FPrecatoria = precatoria.PrecatoriaX;
        dbRec.FDeprecante = precatoria.Deprecante;
        dbRec.FDeprecado = precatoria.Deprecado;
        dbRec.FOBS = precatoria.OBS;
        dbRec.FGUID = precatoria.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}