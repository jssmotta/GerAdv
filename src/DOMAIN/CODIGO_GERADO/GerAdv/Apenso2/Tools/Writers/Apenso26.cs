// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IApenso2Writer
{
    Task<FApenso2> WriteAsync(Models.Apenso2 apenso2, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(Apenso2Response apenso2, int operadorId, MsiSqlConnection oCnn);
}

public class Apenso2Writer(IFApenso2Factory apenso2Factory) : IApenso2Writer
{
    private readonly IFApenso2Factory _apenso2Factory = apenso2Factory;
    public async Task Delete(Apenso2Response apenso2, int operadorId, MsiSqlConnection oCnn)
    {
        await _apenso2Factory.DeleteAsync(operadorId, apenso2.Id, oCnn);
    }

    public async Task<FApenso2> WriteAsync(Models.Apenso2 apenso2, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (apenso2.Id.IsEmptyIDNumber() ? _apenso2Factory.CreateAsync() : _apenso2Factory.CreateFromIdAsync(apenso2.Id, oCnn));
        dbRec.FProcesso = apenso2.Processo;
        dbRec.FApensado = apenso2.Apensado;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}