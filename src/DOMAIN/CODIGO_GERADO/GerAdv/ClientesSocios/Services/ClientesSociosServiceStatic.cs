// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ClientesSociosService
{
    private (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterClientesSocios filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.SomenteRepresentante != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.SomenteRepresentante)}", filtro.SomenteRepresentante));
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Idade)}", filtro.Idade));
        }

        if (filtro.Idade_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Idade)}_end", filtro.Idade_end));
        }

        if (filtro.IsRepresentanteLegal != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.IsRepresentanteLegal)}", filtro.IsRepresentanteLegal));
        }

        if (!string.IsNullOrEmpty(filtro.Qualificacao))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Qualificacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Qualificacao)));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Sexo)}", filtro.Sexo));
        }

        if (!filtro.DtNasc.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.DtNasc)}", dataParam));
        }

        if (!filtro.DtNasc_end.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.DtNasc)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.Nome))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Nome)}", ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (!string.IsNullOrEmpty(filtro.Site))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Site)}", ApplyWildCard(filtro.WildcardChar, filtro.Site)));
        }

        if (!string.IsNullOrEmpty(filtro.RepresentanteLegal))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.RepresentanteLegal)}", ApplyWildCard(filtro.WildcardChar, filtro.RepresentanteLegal)));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Cliente)}", filtro.Cliente));
        }

        if (!string.IsNullOrEmpty(filtro.Endereco))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Endereco)}", ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrEmpty(filtro.Bairro))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Bairro)}", ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (!string.IsNullOrEmpty(filtro.CEP))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CEP)}", ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Cidade)}", filtro.Cidade));
        }

        if (!string.IsNullOrEmpty(filtro.RG))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.RG)}", ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (!string.IsNullOrEmpty(filtro.CPF))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CPF)}", ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrEmpty(filtro.Fone))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Fone)}", ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrEmpty(filtro.Participacao))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Participacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Participacao)));
        }

        if (!string.IsNullOrEmpty(filtro.Cargo))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Cargo)}", ApplyWildCard(filtro.WildcardChar, filtro.Cargo)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.EMail)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!string.IsNullOrEmpty(filtro.Obs))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Obs)}", ApplyWildCard(filtro.WildcardChar, filtro.Obs)));
        }

        if (!string.IsNullOrEmpty(filtro.CNH))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CNH)}", ApplyWildCard(filtro.WildcardChar, filtro.CNH)));
        }

        if (!filtro.DataContrato.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DataContrato, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.DataContrato)}", dataParam));
        }

        if (!filtro.DataContrato_end.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DataContrato_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.DataContrato)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.CNPJ))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CNPJ)}", ApplyWildCard(filtro.WildcardChar, filtro.CNPJ)));
        }

        if (!string.IsNullOrEmpty(filtro.InscEst))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.InscEst)}", ApplyWildCard(filtro.WildcardChar, filtro.InscEst)));
        }

        if (!string.IsNullOrEmpty(filtro.SocioEmpresaAdminNome))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.SocioEmpresaAdminNome)}", ApplyWildCard(filtro.WildcardChar, filtro.SocioEmpresaAdminNome)));
        }

        if (!string.IsNullOrEmpty(filtro.EnderecoSocio))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.EnderecoSocio)}", ApplyWildCard(filtro.WildcardChar, filtro.EnderecoSocio)));
        }

        if (!string.IsNullOrEmpty(filtro.BairroSocio))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.BairroSocio)}", ApplyWildCard(filtro.WildcardChar, filtro.BairroSocio)));
        }

        if (!string.IsNullOrEmpty(filtro.CEPSocio))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CEPSocio)}", ApplyWildCard(filtro.WildcardChar, filtro.CEPSocio)));
        }

        if (filtro.CidadeSocio != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CidadeSocio)}", filtro.CidadeSocio));
        }

        if (filtro.CidadeSocio_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CidadeSocio)}_end", filtro.CidadeSocio_end));
        }

        if (!filtro.RGDataExp.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.RGDataExp, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.RGDataExp)}", dataParam));
        }

        if (!filtro.RGDataExp_end.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.RGDataExp_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.RGDataExp)}_end", dataParam));
        }

        if (filtro.SocioEmpresaAdminSomente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.SocioEmpresaAdminSomente)}", filtro.SocioEmpresaAdminSomente));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!string.IsNullOrEmpty(filtro.Fax))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Fax)}", ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrEmpty(filtro.Class))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.Class)}", ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBClientesSociosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.SomenteRepresentante == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.SomenteRepresentante}] = @{nameof(DBClientesSociosDicInfo.SomenteRepresentante)}");
        if (!(filtro.Idade.IsEmptyX()) && filtro.Idade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Idade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Idade}] = @{nameof(DBClientesSociosDicInfo.Idade)}");
        }
        else if (!(filtro.Idade.IsEmptyX()) && !(filtro.Idade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.Idade} BETWEEN @{nameof(DBClientesSociosDicInfo.Idade)} AND @{nameof(DBClientesSociosDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.IsRepresentanteLegal == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.IsRepresentanteLegal}] = @{nameof(DBClientesSociosDicInfo.IsRepresentanteLegal)}");
        cWhere.Append(filtro.Qualificacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Qualificacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Qualificacao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Sexo}] = @{nameof(DBClientesSociosDicInfo.Sexo)}");
        if (!(filtro.DtNasc.IsEmptyDX()) && filtro.DtNasc_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DtNasc.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.DtNasc}], 103) = CONVERT(DATE, @{nameof(DBClientesSociosDicInfo.DtNasc)}, 103)");
        }
        else if (!(filtro.DtNasc.IsEmptyDX()) && !(filtro.DtNasc_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.DtNasc} BETWEEN @{nameof(DBClientesSociosDicInfo.DtNasc)} AND @{nameof(DBClientesSociosDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Nome)}");
        cWhere.Append(filtro.Site.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Site}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Site)}");
        cWhere.Append(filtro.RepresentanteLegal.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.RepresentanteLegal}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.RepresentanteLegal)}");
        cWhere.Append(filtro.Cliente.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Cliente}] = @{nameof(DBClientesSociosDicInfo.Cliente)}");
        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Bairro)}");
        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.CEP)}");
        cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Cidade}] = @{nameof(DBClientesSociosDicInfo.Cidade)}");
        cWhere.Append(filtro.RG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.RG)}");
        cWhere.Append(filtro.CPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.CPF)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Fone)}");
        cWhere.Append(filtro.Participacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Participacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Participacao)}");
        cWhere.Append(filtro.Cargo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Cargo}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Cargo)}");
        cWhere.Append(filtro.EMail.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.EMail)}");
        cWhere.Append(filtro.Obs.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Obs}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Obs)}");
        cWhere.Append(filtro.CNH.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CNH}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.CNH)}");
        if (!(filtro.DataContrato.IsEmptyDX()) && filtro.DataContrato_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DataContrato.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.DataContrato}], 103) = CONVERT(DATE, @{nameof(DBClientesSociosDicInfo.DataContrato)}, 103)");
        }
        else if (!(filtro.DataContrato.IsEmptyDX()) && !(filtro.DataContrato_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.DataContrato} BETWEEN @{nameof(DBClientesSociosDicInfo.DataContrato)} AND @{nameof(DBClientesSociosDicInfo.DataContrato)}_end");
        }

        cWhere.Append(filtro.CNPJ.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CNPJ}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.CNPJ)}");
        cWhere.Append(filtro.InscEst.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.InscEst}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.InscEst)}");
        cWhere.Append(filtro.SocioEmpresaAdminNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.SocioEmpresaAdminNome}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.SocioEmpresaAdminNome)}");
        cWhere.Append(filtro.EnderecoSocio.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.EnderecoSocio}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.EnderecoSocio)}");
        cWhere.Append(filtro.BairroSocio.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.BairroSocio}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.BairroSocio)}");
        cWhere.Append(filtro.CEPSocio.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CEPSocio}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.CEPSocio)}");
        if (!(filtro.CidadeSocio.IsEmptyX()) && filtro.CidadeSocio_end.IsEmptyX())
        {
            cWhere.Append(filtro.CidadeSocio.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CidadeSocio}] = @{nameof(DBClientesSociosDicInfo.CidadeSocio)}");
        }
        else if (!(filtro.CidadeSocio.IsEmptyX()) && !(filtro.CidadeSocio_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.CidadeSocio} BETWEEN @{nameof(DBClientesSociosDicInfo.CidadeSocio)} AND @{nameof(DBClientesSociosDicInfo.CidadeSocio)}_end");
        }

        if (!(filtro.RGDataExp.IsEmptyDX()) && filtro.RGDataExp_end.IsEmptyDX())
        {
            cWhere.Append(filtro.RGDataExp.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.RGDataExp}], 103) = CONVERT(DATE, @{nameof(DBClientesSociosDicInfo.RGDataExp)}, 103)");
        }
        else if (!(filtro.RGDataExp.IsEmptyDX()) && !(filtro.RGDataExp_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.RGDataExp} BETWEEN @{nameof(DBClientesSociosDicInfo.RGDataExp)} AND @{nameof(DBClientesSociosDicInfo.RGDataExp)}_end");
        }

        cWhere.Append(filtro.SocioEmpresaAdminSomente == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.SocioEmpresaAdminSomente}] = @{nameof(DBClientesSociosDicInfo.SocioEmpresaAdminSomente)}");
        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Tipo}] = @{nameof(DBClientesSociosDicInfo.Tipo)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Fax)}");
        cWhere.Append(filtro.Class.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.Class)}");
        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBClientesSociosDicInfo.GUID)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].[{DBClientesSociosDicInfo.CampoCodigo}] = @{nameof(DBClientesSociosDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesSociosDicInfo.PTabelaNome}].{DBClientesSociosDicInfo.CampoCodigo} BETWEEN @{nameof(DBClientesSociosDicInfo.CampoCodigo)} AND @{nameof(DBClientesSociosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private string GetFilterHash(Filters.FilterClientesSocios? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterClientesSocios? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-ClientesSocios-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBClientesSociosDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ClientesSociosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}