// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ColaboradoresService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterColaboradores? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Cargo != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Cargo)}", filtro.Cargo));
            if (filtro.Cargo_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBColaboradoresDicInfo.Cargo)}_end", filtro.Cargo_end));
            }
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Cliente)}", filtro.Cliente));
            if (filtro.Cliente_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBColaboradoresDicInfo.Cliente)}_end", filtro.Cliente_end));
            }
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Sexo)}", filtro.Sexo));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Nome))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Nome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CPF))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.CPF)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.RG))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.RG)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (!filtro.DtNasc.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam1))
                parameters.Add(new($"@{(DBColaboradoresDicInfo.DtNasc)}", dataParam1));
            if (!filtro.DtNasc_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam2))
                    parameters.Add(new($"@{(DBColaboradoresDicInfo.DtNasc)}_end", dataParam2));
            }
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Idade)}", filtro.Idade));
            if (filtro.Idade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBColaboradoresDicInfo.Idade)}_end", filtro.Idade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Endereco))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Endereco)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Bairro))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Bairro)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CEP))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.CEP)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBColaboradoresDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fone))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Fone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Observacao))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Observacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.EMail)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CNH))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.CNH)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CNH)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Class))
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.Class)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBColaboradoresDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBColaboradoresDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Cargo.IsEmptyX()) && filtro.Cargo_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cargo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Cargo}] = @{(DBColaboradoresDicInfo.Cargo)}");
        }
        else if (!(filtro.Cargo.IsEmptyX()) && !(filtro.Cargo_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.Cargo} BETWEEN @{(DBColaboradoresDicInfo.Cargo)} AND @{(DBColaboradoresDicInfo.Cargo)}_end");
        }

        if (!(filtro.Cliente.IsEmptyX()) && filtro.Cliente_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cliente.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Cliente}] = @{(DBColaboradoresDicInfo.Cliente)}");
        }
        else if (!(filtro.Cliente.IsEmptyX()) && !(filtro.Cliente_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.Cliente} BETWEEN @{(DBColaboradoresDicInfo.Cliente)} AND @{(DBColaboradoresDicInfo.Cliente)}_end");
        }

        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Sexo}] = @{(DBColaboradoresDicInfo.Sexo)}");
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Nome)}");
        cWhere.Append(filtro.CPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.RG)}");
        if (!(filtro.DtNasc.IsEmptyDX()) && filtro.DtNasc_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DtNasc.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.DtNasc}], 103) = CONVERT(DATE, @{(DBColaboradoresDicInfo.DtNasc)}, 103)");
        }
        else if (!(filtro.DtNasc.IsEmptyDX()) && !(filtro.DtNasc_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.DtNasc} BETWEEN @{(DBColaboradoresDicInfo.DtNasc)} AND @{(DBColaboradoresDicInfo.DtNasc)}_end");
        }

        if (!(filtro.Idade.IsEmptyX()) && filtro.Idade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Idade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Idade}] = @{(DBColaboradoresDicInfo.Idade)}");
        }
        else if (!(filtro.Idade.IsEmptyX()) && !(filtro.Idade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.Idade} BETWEEN @{(DBColaboradoresDicInfo.Idade)} AND @{(DBColaboradoresDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Bairro)}");
        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.CEP)}");
        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Cidade}] = @{(DBColaboradoresDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.Cidade} BETWEEN @{(DBColaboradoresDicInfo.Cidade)} AND @{(DBColaboradoresDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Fone)}");
        cWhere.Append(filtro.Observacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Observacao)}");
        cWhere.Append(filtro.EMail.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.EMail)}");
        cWhere.Append(filtro.CNH.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.CNH}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.CNH)}");
        cWhere.Append(filtro.Class.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{(DBColaboradoresDicInfo.Class)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].[{DBColaboradoresDicInfo.CampoCodigo}] = @{(DBColaboradoresDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBColaboradoresDicInfo.PTabelaNome}].{DBColaboradoresDicInfo.CampoCodigo} BETWEEN @{(DBColaboradoresDicInfo.CampoCodigo)} AND @{(DBColaboradoresDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterColaboradores? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterColaboradores? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-Colaboradores-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBColaboradoresDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ColaboradoresResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}