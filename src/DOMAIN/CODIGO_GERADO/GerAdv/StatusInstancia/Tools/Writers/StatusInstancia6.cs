// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IStatusInstanciaWriter
{
    Task<FStatusInstancia> WriteAsync(Models.StatusInstancia statusinstancia, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(StatusInstanciaResponse statusinstancia, int operadorId, MsiSqlConnection? oCnn);
}

public class StatusInstanciaWriter(IFStatusInstanciaFactory statusinstanciaFactory) : IStatusInstanciaWriter
{
    private readonly IFStatusInstanciaFactory _statusinstanciaFactory = statusinstanciaFactory ?? throw new ArgumentNullException(nameof(statusinstanciaFactory));
    public virtual async Task Delete(StatusInstanciaResponse statusinstancia, int operadorId, MsiSqlConnection? oCnn)
    {
        await _statusinstanciaFactory.DeleteAsync(operadorId, statusinstancia.Id, oCnn);
    }

    public virtual async Task<FStatusInstancia> WriteAsync(Models.StatusInstancia statusinstancia, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (statusinstancia.Id.IsEmptyIDNumber() ? _statusinstanciaFactory.CreateAsync() : _statusinstanciaFactory.CreateFromIdAsync(statusinstancia.Id, oCnn));
        dbRec.FNome = statusinstancia.Nome;
        dbRec.FGUID = statusinstancia.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}