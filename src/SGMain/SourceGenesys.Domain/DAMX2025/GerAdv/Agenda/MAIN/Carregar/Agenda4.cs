// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBAgenda
{
    public DBAgenda(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBAgenda(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Agenda: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Advogado)))
                m_FAdvogado = Convert.ToInt32(getValue(DBAgendaDicInfo.Advogado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Area)))
                m_FArea = Convert.ToInt32(getValue(DBAgendaDicInfo.Area));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.CartaPrecatoria)))
                m_FCartaPrecatoria = Convert.ToInt32(getValue(DBAgendaDicInfo.CartaPrecatoria));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBAgendaDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Cliente)))
                m_FCliente = Convert.ToInt32(getValue(DBAgendaDicInfo.Cliente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.ClienteAvisado)))
                m_FClienteAvisado = Convert.ToBoolean(getValue(DBAgendaDicInfo.ClienteAvisado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Concluido)))
                m_FConcluido = Convert.ToBoolean(getValue(DBAgendaDicInfo.Concluido));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Data)))
                m_FData = Convert.ToDateTime(getValue(DBAgendaDicInfo.Data));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.DataInicioPrazo)))
                m_FDataInicioPrazo = Convert.ToDateTime(getValue(DBAgendaDicInfo.DataInicioPrazo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBAgendaDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBAgendaDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.EventoData)))
                m_FEventoData = Convert.ToDateTime(getValue(DBAgendaDicInfo.EventoData));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.EventoGerador)))
                m_FEventoGerador = Convert.ToInt32(getValue(DBAgendaDicInfo.EventoGerador));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.EventoPrazo)))
                m_FEventoPrazo = Convert.ToInt32(getValue(DBAgendaDicInfo.EventoPrazo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Funcionario)))
                m_FFuncionario = Convert.ToInt32(getValue(DBAgendaDicInfo.Funcionario));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Hora)))
                m_FHora = Convert.ToDateTime(getValue(DBAgendaDicInfo.Hora));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.HrFinal)))
                m_FHrFinal = Convert.ToDateTime(getValue(DBAgendaDicInfo.HrFinal));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.IDCOB)))
                m_FIDCOB = Convert.ToInt32(getValue(DBAgendaDicInfo.IDCOB));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.IDHistorico)))
                m_FIDHistorico = Convert.ToInt32(getValue(DBAgendaDicInfo.IDHistorico));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.IDInsProcesso)))
                m_FIDInsProcesso = Convert.ToInt32(getValue(DBAgendaDicInfo.IDInsProcesso));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.IDNE)))
                m_FIDNE = Convert.ToInt32(getValue(DBAgendaDicInfo.IDNE));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Importante)))
                m_FImportante = Convert.ToBoolean(getValue(DBAgendaDicInfo.Importante));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Justica)))
                m_FJustica = Convert.ToInt32(getValue(DBAgendaDicInfo.Justica));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Liberado)))
                m_FLiberado = Convert.ToBoolean(getValue(DBAgendaDicInfo.Liberado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Oculto)))
                m_FOculto = Convert.ToInt32(getValue(DBAgendaDicInfo.Oculto));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.PrazoDias)))
                m_FPrazoDias = Convert.ToInt32(getValue(DBAgendaDicInfo.PrazoDias));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Preposto)))
                m_FPreposto = Convert.ToInt32(getValue(DBAgendaDicInfo.Preposto));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Processo)))
                m_FProcesso = Convert.ToInt32(getValue(DBAgendaDicInfo.Processo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.ProtocoloIntegrado)))
                m_FProtocoloIntegrado = Convert.ToInt32(getValue(DBAgendaDicInfo.ProtocoloIntegrado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBAgendaDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBAgendaDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.QuemCodigo)))
                m_FQuemCodigo = Convert.ToInt32(getValue(DBAgendaDicInfo.QuemCodigo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.QuemID)))
                m_FQuemID = Convert.ToInt32(getValue(DBAgendaDicInfo.QuemID));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Revisar)))
                m_FRevisar = Convert.ToBoolean(getValue(DBAgendaDicInfo.Revisar));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.RevisarP2)))
                m_FRevisarP2 = Convert.ToBoolean(getValue(DBAgendaDicInfo.RevisarP2));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Sempre)))
                m_FSempre = Convert.ToInt32(getValue(DBAgendaDicInfo.Sempre));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.TipoCompromisso)))
                m_FTipoCompromisso = Convert.ToInt32(getValue(DBAgendaDicInfo.TipoCompromisso));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Usuario)))
                m_FUsuario = Convert.ToInt32(getValue(DBAgendaDicInfo.Usuario));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.UsuarioCiente)))
                m_FUsuarioCiente = Convert.ToBoolean(getValue(DBAgendaDicInfo.UsuarioCiente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Valor)))
                m_FValor = Convert.ToDecimal(getValue(DBAgendaDicInfo.Valor));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBAgendaDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBAgendaDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FCompromisso = getValue(DBAgendaDicInfo.Compromisso)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FDecisao = getValue(DBAgendaDicInfo.Decisao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBAgendaDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FStatus = getValue(DBAgendaDicInfo.Status)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Agenda: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Agenda: {ex.Message}", ex);
        }
    }
}