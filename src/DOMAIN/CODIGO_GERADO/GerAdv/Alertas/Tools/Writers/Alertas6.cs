// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAlertasWriter
{
    Task<FAlertas> WriteAsync(Models.Alertas alertas, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(AlertasResponse alertas, int operadorId, MsiSqlConnection oCnn);
}

public class AlertasWriter(IFAlertasFactory alertasFactory) : IAlertasWriter
{
    private readonly IFAlertasFactory _alertasFactory = alertasFactory;
    public async Task Delete(AlertasResponse alertas, int operadorId, MsiSqlConnection oCnn)
    {
        await _alertasFactory.DeleteAsync(operadorId, alertas.Id, oCnn);
    }

    public async Task<FAlertas> WriteAsync(Models.Alertas alertas, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (alertas.Id.IsEmptyIDNumber() ? _alertasFactory.CreateAsync() : _alertasFactory.CreateFromIdAsync(alertas.Id, oCnn));
        dbRec.FNome = alertas.Nome;
        dbRec.FData = alertas.Data;
        dbRec.FOperador = alertas.Operador;
        if (alertas.DataAte != null)
            dbRec.FDataAte = alertas.DataAte.ToString();
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}