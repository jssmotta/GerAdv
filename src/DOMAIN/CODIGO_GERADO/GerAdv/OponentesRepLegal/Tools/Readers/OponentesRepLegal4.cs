// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.GerAdv.Readers;
public partial class OponentesRepLegalReader(IFOponentesRepLegalFactory oponentesreplegalFactory) : IOponentesRepLegalReader
{
    private readonly IFOponentesRepLegalFactory _oponentesreplegalFactory = oponentesreplegalFactory ?? throw new ArgumentNullException();
    public async Task<IEnumerable<DBNomeID>> ListarN(int max, string uri, string cWhere, List<SqlParameter> parameters, string order) => await DevourerSqlData.ListarNomeID(BuildSqlQuery("oprCodigo, oprNome", cWhere, order, max), parameters, uri, caching: DevourerOne.PCachingDefault, max: max);
    public async Task<IEnumerable<OponentesRepLegalResponseAll>> Listar(int max, string uri, string cWhere, List<SqlParameter> parameters, string order, CancellationToken cancellationToken) => await ListarTabela(BuildSqlQuery(DBOponentesRepLegal.CamposSqlX, cWhere, order, max), parameters, uri, caching: DevourerOne.PCachingDefault, max: max, cancellationToken: cancellationToken);
    private async Task<IEnumerable<OponentesRepLegalResponseAll>> ListarTabela(string sql, List<SqlParameter> parameters, string uri, bool caching = DevourerOne.PCachingDefault, int max = 200, CancellationToken cancellationToken = default)
    {
        var result = new List<OponentesRepLegalResponseAll>(max);
        await using var connection = Configuracoes.GetConnectionByUri(uri);
        await using var cmd = new SqlCommand(cmdText: ConfiguracoesDBT.CmdSql(sql), connection: connection?.InnerConnection)
        {
            CommandTimeout = 30
        };
        foreach (var param in parameters)
        {
            if (!cmd.Parameters.Contains(param.ParameterName))
            {
                var newParam = new SqlParameter(param.ParameterName, param.Value)
                {
                    SqlDbType = param.SqlDbType,
                    Direction = param.Direction,
                    Size = param.Size,
                    Precision = param.Precision,
                    Scale = param.Scale
                };
                cmd.Parameters.Add(newParam);
            }
        }

        await using var reader = await cmd.ExecuteReaderAsync(CommandBehavior.SingleResult);
        while (await reader.ReadAsync())
        {
            if (cancellationToken.IsCancellationRequested)
                return result;
            result.Add(ReadAll(_oponentesreplegalFactory.CreateFromReader(reader), reader)!);
        }

        return result;
    }

    public async Task<OponentesRepLegalResponse?> Read(int id, MsiSqlConnection oCnn)
    {
        using var dbRec = await _oponentesreplegalFactory.CreateFromIdAsync(id, oCnn);
        return dbRec.ID.IsEmptyIDNumber() ? null : Read(dbRec);
    }

    public async Task<Models.OponentesRepLegal?> ReadM(int id, MsiSqlConnection oCnn)
    {
        using var dbRec = await _oponentesreplegalFactory.CreateFromIdAsync(id, oCnn);
        var oponentesreplegal = new Models.OponentesRepLegal
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Oponente = dbRec.FOponente,
            Sexo = dbRec.FSexo,
            CPF = dbRec.FCPF?.MaskCpf() ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            CEP = dbRec.FCEP?.MaskCep() ?? string.Empty,
            Cidade = dbRec.FCidade,
            Fax = dbRec.FFax ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Site = dbRec.FSite ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
        };
        return oponentesreplegal;
    }

    public OponentesRepLegalResponse? Read(FOponentesRepLegal dbRec, MsiSqlConnection oCnn)
    {
        return Read(dbRec);
    }

    public OponentesRepLegalResponse? Read(string where, List<SqlParameter> parameters, MsiSqlConnection oCnn)
    {
        using var dbRec = _oponentesreplegalFactory.CreateFromParameters(parameters, oCnn, sqlWhere: where);
        return dbRec.ID.IsEmptyIDNumber() ? null : Read(dbRec);
    }

    public OponentesRepLegalResponse? Read(FOponentesRepLegal dbRec) // Track 001.16072025
    {
        if (dbRec == null)
        {
            return null;
        }

        var oponentesreplegal = new OponentesRepLegalResponse
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Oponente = dbRec.FOponente,
            Sexo = dbRec.FSexo,
            CPF = dbRec.FCPF?.MaskCpf() ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            CEP = dbRec.FCEP?.MaskCep() ?? string.Empty,
            Cidade = dbRec.FCidade,
            Fax = dbRec.FFax ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Site = dbRec.FSite ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
        };
        return oponentesreplegal;
    }

    public OponentesRepLegalResponse? Read(SG.GerAdv.DBOponentesRepLegal dbRec) // Track 002.16072025
    {
        if (dbRec == null)
        {
            return null;
        }

        var oponentesreplegal = new OponentesRepLegalResponse
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Oponente = dbRec.FOponente,
            Sexo = dbRec.FSexo,
            CPF = dbRec.FCPF?.MaskCpf() ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            CEP = dbRec.FCEP?.MaskCep() ?? string.Empty,
            Cidade = dbRec.FCidade,
            Fax = dbRec.FFax ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Site = dbRec.FSite ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
        };
        return oponentesreplegal;
    }

    public OponentesRepLegalResponseAll? ReadAll(FOponentesRepLegal dbRec, IDataRecord dr)
    {
        if (dbRec == null)
        {
            return null;
        }

        var oponentesreplegal = new OponentesRepLegalResponseAll
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Oponente = dbRec.FOponente,
            Sexo = dbRec.FSexo,
            CPF = dbRec.FCPF?.MaskCpf() ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            CEP = dbRec.FCEP?.MaskCep() ?? string.Empty,
            Cidade = dbRec.FCidade,
            Fax = dbRec.FFax ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Site = dbRec.FSite ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
        };
        try
        {
            oponentesreplegal.NomeOponentes = dr[DBOponentesDicInfo.CampoNome]?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            oponentesreplegal.NomeCidade = dr[DBCidadeDicInfo.CampoNome]?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        return oponentesreplegal;
    }

    public OponentesRepLegalResponseAll? ReadAll(SG.GerAdv.DBOponentesRepLegal dbRec, DataRow dr)
    {
        if (dbRec == null)
        {
            return null;
        }

        var oponentesreplegal = new OponentesRepLegalResponseAll
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Oponente = dbRec.FOponente,
            Sexo = dbRec.FSexo,
            CPF = dbRec.FCPF?.MaskCpf() ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            CEP = dbRec.FCEP?.MaskCep() ?? string.Empty,
            Cidade = dbRec.FCidade,
            Fax = dbRec.FFax ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Site = dbRec.FSite ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
        };
        try
        {
            oponentesreplegal.NomeOponentes = dr[DBOponentesDicInfo.CampoNome]?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            oponentesreplegal.NomeCidade = dr[DBCidadeDicInfo.CampoNome]?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        return oponentesreplegal;
    }
}