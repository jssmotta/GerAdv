#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public static class AddServices
{
    public static void Add(WebApplicationBuilder builder)
    {
        builder.Services.AddScoped<IAcaoWriter, Acao>();
        builder.Services.AddScoped<IAdvogadosWriter, Advogados>();
        builder.Services.AddScoped<IAgendaWriter, Agenda>();
        builder.Services.AddScoped<IAgenda2AgendaWriter, Agenda2Agenda>();
        builder.Services.AddScoped<IAgendaFinanceiroWriter, AgendaFinanceiro>();
        builder.Services.AddScoped<IAgendaQuemWriter, AgendaQuem>();
        builder.Services.AddScoped<IAgendaRecordsWriter, AgendaRecords>();
        builder.Services.AddScoped<IAgendaRepetirWriter, AgendaRepetir>();
        builder.Services.AddScoped<IAgendaRepetirDiasWriter, AgendaRepetirDias>();
        builder.Services.AddScoped<IAgendaStatusWriter, AgendaStatus>();
        builder.Services.AddScoped<IAlarmSMSWriter, AlarmSMS>();
        builder.Services.AddScoped<IAlertasWriter, Alertas>();
        builder.Services.AddScoped<IAlertasEnviadosWriter, AlertasEnviados>();
        builder.Services.AddScoped<IAndamentosMDWriter, AndamentosMD>();
        builder.Services.AddScoped<IAndCompWriter, AndComp>();
        builder.Services.AddScoped<IAnexamentoRegistrosWriter, AnexamentoRegistros>();
        builder.Services.AddScoped<IApensoWriter, Apenso>();
        builder.Services.AddScoped<IApenso2Writer, Apenso2>();
        builder.Services.AddScoped<IAreaWriter, Area>();
        builder.Services.AddScoped<IAreasJusticaWriter, AreasJustica>();
        builder.Services.AddScoped<IAtividadesWriter, Atividades>();
        builder.Services.AddScoped<IAuditor4KWriter, Auditor4K>();
        builder.Services.AddScoped<IBensClassificacaoWriter, BensClassificacao>();
        builder.Services.AddScoped<IBensMateriaisWriter, BensMateriais>();
        builder.Services.AddScoped<ICargosWriter, Cargos>();
        builder.Services.AddScoped<ICargosEscWriter, CargosEsc>();
        builder.Services.AddScoped<ICargosEscClassWriter, CargosEscClass>();
        builder.Services.AddScoped<ICidadeWriter, Cidade>();
        builder.Services.AddScoped<IClientesWriter, Clientes>();
        builder.Services.AddScoped<IClientesSociosWriter, ClientesSocios>();
        builder.Services.AddScoped<IColaboradoresWriter, Colaboradores>();
        builder.Services.AddScoped<IContaCorrenteWriter, ContaCorrente>();
        builder.Services.AddScoped<IContatoCRMWriter, ContatoCRM>();
        builder.Services.AddScoped<IContatoCRMOperadorWriter, ContatoCRMOperador>();
        builder.Services.AddScoped<IContatoCRMViewWriter, ContatoCRMView>();
        builder.Services.AddScoped<IContratosWriter, Contratos>();
        builder.Services.AddScoped<IDadosProcuracaoWriter, DadosProcuracao>();
        builder.Services.AddScoped<IDiario2Writer, Diario2>();
        builder.Services.AddScoped<IDivisaoTribunalWriter, DivisaoTribunal>();
        builder.Services.AddScoped<IDocsRecebidosItensWriter, DocsRecebidosItens>();
        builder.Services.AddScoped<IDocumentosWriter, Documentos>();
        builder.Services.AddScoped<IEMPClassRiscosWriter, EMPClassRiscos>();
        builder.Services.AddScoped<IEnderecosWriter, Enderecos>();
        builder.Services.AddScoped<IEnderecoSistemaWriter, EnderecoSistema>();
        builder.Services.AddScoped<IEndTitWriter, EndTit>();
        builder.Services.AddScoped<IEnquadramentoEmpresaWriter, EnquadramentoEmpresa>();
        builder.Services.AddScoped<IEscritoriosWriter, Escritorios>();
        builder.Services.AddScoped<IEventoPrazoAgendaWriter, EventoPrazoAgenda>();
        builder.Services.AddScoped<IFaseWriter, Fase>();
        builder.Services.AddScoped<IFornecedoresWriter, Fornecedores>();
        builder.Services.AddScoped<IForoWriter, Foro>();
        builder.Services.AddScoped<IFuncaoWriter, Funcao>();
        builder.Services.AddScoped<IFuncionariosWriter, Funcionarios>();
        builder.Services.AddScoped<IGraphWriter, Graph>();
        builder.Services.AddScoped<IGruposEmpresasWriter, GruposEmpresas>();
        builder.Services.AddScoped<IGruposEmpresasCliWriter, GruposEmpresasCli>();
        builder.Services.AddScoped<IGUTAtividadesWriter, GUTAtividades>();
        builder.Services.AddScoped<IGUTAtividadesMatrizWriter, GUTAtividadesMatriz>();
        builder.Services.AddScoped<IGUTMatrizWriter, GUTMatriz>();
        builder.Services.AddScoped<IGUTPeriodicidadeWriter, GUTPeriodicidade>();
        builder.Services.AddScoped<IGUTPeriodicidadeStatusWriter, GUTPeriodicidadeStatus>();
        builder.Services.AddScoped<IGUTTipoWriter, GUTTipo>();
        builder.Services.AddScoped<IHistoricoWriter, Historico>();
        builder.Services.AddScoped<IHonorariosDadosContratoWriter, HonorariosDadosContrato>();
        builder.Services.AddScoped<IHorasTrabWriter, HorasTrab>();
        builder.Services.AddScoped<IInstanciaWriter, Instancia>();
        builder.Services.AddScoped<IJusticaWriter, Justica>();
        builder.Services.AddScoped<ILigacoesWriter, Ligacoes>();
        builder.Services.AddScoped<ILivroCaixaWriter, LivroCaixa>();
        builder.Services.AddScoped<ILivroCaixaClientesWriter, LivroCaixaClientes>();
        builder.Services.AddScoped<IModelosDocumentosWriter, ModelosDocumentos>();
        builder.Services.AddScoped<INECompromissosWriter, NECompromissos>();
        builder.Services.AddScoped<INENotasWriter, NENotas>();
        builder.Services.AddScoped<INEPalavrasChavesWriter, NEPalavrasChaves>();
        builder.Services.AddScoped<IObjetosWriter, Objetos>();
        builder.Services.AddScoped<IOperadorWriter, Operador>();
        builder.Services.AddScoped<IOperadorEMailPopupWriter, OperadorEMailPopup>();
        builder.Services.AddScoped<IOperadoresWriter, Operadores>();
        builder.Services.AddScoped<IOperadorGrupoWriter, OperadorGrupo>();
        builder.Services.AddScoped<IOperadorGruposWriter, OperadorGrupos>();
        builder.Services.AddScoped<IOperadorGruposAgendaWriter, OperadorGruposAgenda>();
        builder.Services.AddScoped<IOperadorGruposAgendaOperadoresWriter, OperadorGruposAgendaOperadores>();
        builder.Services.AddScoped<IOponentesWriter, Oponentes>();
        builder.Services.AddScoped<IOponentesRepLegalWriter, OponentesRepLegal>();
        builder.Services.AddScoped<IOutrasPartesClienteWriter, OutrasPartesCliente>();
        builder.Services.AddScoped<IPaisesWriter, Paises>();
        builder.Services.AddScoped<IParceriaProcWriter, ParceriaProc>();
        builder.Services.AddScoped<IParteClienteOutrasWriter, ParteClienteOutras>();
        builder.Services.AddScoped<IPenhoraWriter, Penhora>();
        builder.Services.AddScoped<IPenhoraStatusWriter, PenhoraStatus>();
        builder.Services.AddScoped<IPoderJudiciarioAssociadoWriter, PoderJudiciarioAssociado>();
        builder.Services.AddScoped<IPontoVirtualWriter, PontoVirtual>();
        builder.Services.AddScoped<IPontoVirtualAcessosWriter, PontoVirtualAcessos>();
        builder.Services.AddScoped<IPosicaoOutrasPartesWriter, PosicaoOutrasPartes>();
        builder.Services.AddScoped<IPrecatoriaWriter, Precatoria>();
        builder.Services.AddScoped<IPreClientesWriter, PreClientes>();
        builder.Services.AddScoped<IPrepostosWriter, Prepostos>();
        builder.Services.AddScoped<IProCDAWriter, ProCDA>();
        builder.Services.AddScoped<IProcessosWriter, Processos>();
        builder.Services.AddScoped<IProcessosObsReportWriter, ProcessosObsReport>();
        builder.Services.AddScoped<IProcessosParadosWriter, ProcessosParados>();
        builder.Services.AddScoped<IProcessOutputEngineWriter, ProcessOutputEngine>();
        builder.Services.AddScoped<IProcessOutPutIDsWriter, ProcessOutPutIDs>();
        builder.Services.AddScoped<IProcessOutputRequestWriter, ProcessOutputRequest>();
        builder.Services.AddScoped<IProcessOutputSourcesWriter, ProcessOutputSources>();
        builder.Services.AddScoped<IProDepositosWriter, ProDepositos>();
        builder.Services.AddScoped<IProDespesasWriter, ProDespesas>();
        builder.Services.AddScoped<IProObservacoesWriter, ProObservacoes>();
        builder.Services.AddScoped<IProPartesWriter, ProPartes>();
        builder.Services.AddScoped<IProProcuradoresWriter, ProProcuradores>();
        builder.Services.AddScoped<IProResumosWriter, ProResumos>();
        builder.Services.AddScoped<IProSucumbenciaWriter, ProSucumbencia>();
        builder.Services.AddScoped<IProTipoBaixaWriter, ProTipoBaixa>();
        builder.Services.AddScoped<IProValoresWriter, ProValores>();
        builder.Services.AddScoped<IRamalWriter, Ramal>();
        builder.Services.AddScoped<IRecadosWriter, Recados>();
        builder.Services.AddScoped<IRegimeTributacaoWriter, RegimeTributacao>();
        builder.Services.AddScoped<IReuniaoWriter, Reuniao>();
        builder.Services.AddScoped<IReuniaoPessoasWriter, ReuniaoPessoas>();
        builder.Services.AddScoped<IRitoWriter, Rito>();
        builder.Services.AddScoped<IServicosWriter, Servicos>();
        builder.Services.AddScoped<ISetorWriter, Setor>();
        builder.Services.AddScoped<ISituacaoWriter, Situacao>();
        builder.Services.AddScoped<ISMSAliceWriter, SMSAlice>();
        builder.Services.AddScoped<IStatusAndamentoWriter, StatusAndamento>();
        builder.Services.AddScoped<IStatusBiuWriter, StatusBiu>();
        builder.Services.AddScoped<IStatusHTrabWriter, StatusHTrab>();
        builder.Services.AddScoped<IStatusInstanciaWriter, StatusInstancia>();
        builder.Services.AddScoped<IStatusTarefasWriter, StatusTarefas>();
        builder.Services.AddScoped<ITerceirosWriter, Terceiros>();
        builder.Services.AddScoped<ITipoCompromissoWriter, TipoCompromisso>();
        builder.Services.AddScoped<ITipoContatoCRMWriter, TipoContatoCRM>();
        builder.Services.AddScoped<ITipoEMailWriter, TipoEMail>();
        builder.Services.AddScoped<ITipoEnderecoWriter, TipoEndereco>();
        builder.Services.AddScoped<ITipoEnderecoSistemaWriter, TipoEnderecoSistema>();
        builder.Services.AddScoped<ITipoModeloDocumentoWriter, TipoModeloDocumento>();
        builder.Services.AddScoped<ITipoOrigemSucumbenciaWriter, TipoOrigemSucumbencia>();
        builder.Services.AddScoped<ITipoProDespositoWriter, TipoProDesposito>();
        builder.Services.AddScoped<ITipoRecursoWriter, TipoRecurso>();
        builder.Services.AddScoped<ITiposAcaoWriter, TiposAcao>();
        builder.Services.AddScoped<ITipoStatusBiuWriter, TipoStatusBiu>();
        builder.Services.AddScoped<ITipoValorProcessoWriter, TipoValorProcesso>();
        builder.Services.AddScoped<ITribEnderecosWriter, TribEnderecos>();
        builder.Services.AddScoped<ITribunalWriter, Tribunal>();
        builder.Services.AddScoped<IUFWriter, UF>();
        builder.Services.AddScoped<IUltimosProcessosWriter, UltimosProcessos>();
        builder.Services.AddScoped<IViaRecebimentoWriter, ViaRecebimento>();
    }
}