// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#if (!MenphisSI_SG_GerAdv_DicOff)
// ReSharper disable once CheckNamespace
namespace MenphisSI.SG.GerAdv.DicInfo;
[Serializable]
public partial class DBOutrasPartesClienteODicInfo : IODicInfo
{
    public ImmutableArray<DBInfoSystem> IListFields() => List;
    public ImmutableArray<DBInfoSystem> IFieldsRaw() => ListWithoutAuditor;
    public ImmutableArray<DBInfoSystem> IPkFields() => ListPk();
    public ImmutableArray<DBInfoSystem> IPkIndicesFields() => ListPkIndices();
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITabelaNome() => DBOutrasPartesClienteDicInfo.TabelaNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoCodigo() => DBOutrasPartesClienteDicInfo.CampoCodigo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string IPrefixo() => DBOutrasPartesClienteDicInfo.TablePrefix;
#pragma warning disable CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasAuditor() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasNameId() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IIsStoredProcedureOrView() => false;
#pragma warning restore CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoNome() => DBOutrasPartesClienteDicInfo.CampoNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string NameSpace() => nameof(GerAdv);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool TemAuditor() => true;
    private static readonly FrozenDictionary<string, DBInfoSystem> _fieldLookup = List.ToFrozenDictionary(f => f.FNome, StringComparer.OrdinalIgnoreCase);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public DBInfoSystem? GetInfoSystemByNameField(string campo) => _fieldLookup.GetValueOrDefault(campo);
    public static string TCampoCodigo => DBOutrasPartesClienteDicInfo.CampoCodigo;
    public static string TCampoNome => DBOutrasPartesClienteDicInfo.CampoNome;
    public static string TTabelaNome => DBOutrasPartesClienteDicInfo.TabelaNome;
    public static string TTablePrefix => DBOutrasPartesClienteDicInfo.TablePrefix;
    public static ImmutableArray<DBInfoSystem> List => [DBOutrasPartesClienteDicInfo.OpcNome, DBOutrasPartesClienteDicInfo.OpcTerceirizado, DBOutrasPartesClienteDicInfo.OpcClientePrincipal, DBOutrasPartesClienteDicInfo.OpcTipo, DBOutrasPartesClienteDicInfo.OpcSexo, DBOutrasPartesClienteDicInfo.OpcDtNasc, DBOutrasPartesClienteDicInfo.OpcCPF, DBOutrasPartesClienteDicInfo.OpcRG, DBOutrasPartesClienteDicInfo.OpcCNPJ, DBOutrasPartesClienteDicInfo.OpcInscEst, DBOutrasPartesClienteDicInfo.OpcNomeFantasia, DBOutrasPartesClienteDicInfo.OpcEndereco, DBOutrasPartesClienteDicInfo.OpcCidade, DBOutrasPartesClienteDicInfo.OpcCEP, DBOutrasPartesClienteDicInfo.OpcBairro, DBOutrasPartesClienteDicInfo.OpcFone, DBOutrasPartesClienteDicInfo.OpcFax, DBOutrasPartesClienteDicInfo.OpcEMail, DBOutrasPartesClienteDicInfo.OpcSite, DBOutrasPartesClienteDicInfo.OpcClass, DBOutrasPartesClienteDicInfo.OpcEtiqueta, DBOutrasPartesClienteDicInfo.OpcAni, DBOutrasPartesClienteDicInfo.OpcBold, DBOutrasPartesClienteDicInfo.OpcGUID, DBOutrasPartesClienteDicInfo.OpcQuemCad, DBOutrasPartesClienteDicInfo.OpcDtCad, DBOutrasPartesClienteDicInfo.OpcQuemAtu, DBOutrasPartesClienteDicInfo.OpcDtAtu, DBOutrasPartesClienteDicInfo.OpcVisto];
    public static ImmutableArray<DBInfoSystem> ListWithoutAuditor => [DBOutrasPartesClienteDicInfo.OpcNome, DBOutrasPartesClienteDicInfo.OpcTerceirizado, DBOutrasPartesClienteDicInfo.OpcClientePrincipal, DBOutrasPartesClienteDicInfo.OpcTipo, DBOutrasPartesClienteDicInfo.OpcSexo, DBOutrasPartesClienteDicInfo.OpcDtNasc, DBOutrasPartesClienteDicInfo.OpcCPF, DBOutrasPartesClienteDicInfo.OpcRG, DBOutrasPartesClienteDicInfo.OpcCNPJ, DBOutrasPartesClienteDicInfo.OpcInscEst, DBOutrasPartesClienteDicInfo.OpcNomeFantasia, DBOutrasPartesClienteDicInfo.OpcEndereco, DBOutrasPartesClienteDicInfo.OpcCidade, DBOutrasPartesClienteDicInfo.OpcCEP, DBOutrasPartesClienteDicInfo.OpcBairro, DBOutrasPartesClienteDicInfo.OpcFone, DBOutrasPartesClienteDicInfo.OpcFax, DBOutrasPartesClienteDicInfo.OpcEMail, DBOutrasPartesClienteDicInfo.OpcSite, DBOutrasPartesClienteDicInfo.OpcClass, DBOutrasPartesClienteDicInfo.OpcGUID];

    public static ImmutableArray<DBInfoSystem> ListPk()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["opcCodigo"]);
        var result = campos.Where(campo => !campo.Equals(DBOutrasPartesClienteDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }

    public static ImmutableArray<DBInfoSystem> ListPkIndices()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["opcCodigo"]);
        var result = campos.Where(campo => !campo.Equals(DBOutrasPartesClienteDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }
}
#endif
