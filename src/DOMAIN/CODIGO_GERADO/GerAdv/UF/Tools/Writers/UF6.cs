// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IUFWriter
{
    Task<FUF> WriteAsync(Models.UF uf, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(UFResponse uf, int operadorId, MsiSqlConnection oCnn);
}

public class UFWriter(IFUFFactory ufFactory) : IUFWriter
{
    private readonly IFUFFactory _ufFactory = ufFactory ?? throw new ArgumentNullException(nameof(ufFactory));
    public virtual async Task Delete(UFResponse uf, int operadorId, MsiSqlConnection oCnn)
    {
        await _ufFactory.DeleteAsync(operadorId, uf.Id, oCnn);
    }

    public virtual async Task<FUF> WriteAsync(Models.UF uf, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (uf.Id.IsEmptyIDNumber() ? _ufFactory.CreateAsync() : _ufFactory.CreateFromIdAsync(uf.Id, oCnn));
        dbRec.FDDD = uf.DDD;
        dbRec.FID = uf.IdUF;
        dbRec.FPais = uf.Pais;
        dbRec.FTop = uf.Top;
        dbRec.FDescricao = uf.Descricao;
        dbRec.FGUID = uf.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}