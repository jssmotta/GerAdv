// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITipoStatusBiuWriter
{
    Task<FTipoStatusBiu> WriteAsync(Models.TipoStatusBiu tipostatusbiu, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(TipoStatusBiuResponse tipostatusbiu, int operadorId, MsiSqlConnection? oCnn);
}

public class TipoStatusBiuWriter(IFTipoStatusBiuFactory tipostatusbiuFactory) : ITipoStatusBiuWriter
{
    private readonly IFTipoStatusBiuFactory _tipostatusbiuFactory = tipostatusbiuFactory ?? throw new ArgumentNullException(nameof(tipostatusbiuFactory));
    public virtual async Task Delete(TipoStatusBiuResponse tipostatusbiu, int operadorId, MsiSqlConnection? oCnn)
    {
        await _tipostatusbiuFactory.DeleteAsync(operadorId, tipostatusbiu.Id, oCnn);
    }

    public virtual async Task<FTipoStatusBiu> WriteAsync(Models.TipoStatusBiu tipostatusbiu, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (tipostatusbiu.Id.IsEmptyIDNumber() ? _tipostatusbiuFactory.CreateAsync() : _tipostatusbiuFactory.CreateFromIdAsync(tipostatusbiu.Id, oCnn));
        dbRec.FNome = tipostatusbiu.Nome;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}