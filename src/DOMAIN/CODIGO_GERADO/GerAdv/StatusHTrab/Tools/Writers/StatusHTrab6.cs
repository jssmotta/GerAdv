// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IStatusHTrabWriter
{
    Task<FStatusHTrab> WriteAsync(Models.StatusHTrab statushtrab, MsiSqlConnection oCnn);
    Task Delete(StatusHTrabResponse statushtrab, int operadorId, MsiSqlConnection oCnn);
}

public class StatusHTrabWriter(IFStatusHTrabFactory statushtrabFactory) : IStatusHTrabWriter
{
    private readonly IFStatusHTrabFactory _statushtrabFactory = statushtrabFactory ?? throw new ArgumentNullException(nameof(statushtrabFactory));
    public virtual async Task Delete(StatusHTrabResponse statushtrab, int operadorId, MsiSqlConnection oCnn)
    {
        await _statushtrabFactory.DeleteAsync(operadorId, statushtrab.Id, oCnn);
    }

    public virtual async Task<FStatusHTrab> WriteAsync(Models.StatusHTrab statushtrab, MsiSqlConnection oCnn)
    {
        using var dbRec = await (statushtrab.Id.IsEmptyIDNumber() ? _statushtrabFactory.CreateAsync() : _statushtrabFactory.CreateFromIdAsync(statushtrab.Id, oCnn));
        dbRec.FDescricao = statushtrab.Descricao;
        dbRec.FResID = statushtrab.ResID;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}