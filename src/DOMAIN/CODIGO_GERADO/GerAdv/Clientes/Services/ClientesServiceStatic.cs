// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ClientesService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterClientes? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Empresa != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Empresa)}", filtro.Empresa));
            if (filtro.Empresa_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.Empresa)}_end", filtro.Empresa_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Icone))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Icone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Icone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.NomeMae))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.NomeMae)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.NomeMae)));
        }

        if (!filtro.RGDataExp.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.RGDataExp, out var dataParam1))
                parameters.Add(new($"@{(DBClientesDicInfo.RGDataExp)}", dataParam1));
            if (!filtro.RGDataExp_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.RGDataExp_end, out var dataParam2))
                    parameters.Add(new($"@{(DBClientesDicInfo.RGDataExp)}_end", dataParam2));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Inativo != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Inativo)}", filtro.Inativo));
        }

        if (!string.IsNullOrWhiteSpace(filtro.QuemIndicou))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.QuemIndicou)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.QuemIndicou)));
        }

        if (filtro.SendEMail != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.SendEMail)}", filtro.SendEMail));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Nome))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Nome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Adv != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Adv)}", filtro.Adv));
            if (filtro.Adv_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.Adv)}_end", filtro.Adv_end));
            }
        }

        if (filtro.IDRep != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.IDRep)}", filtro.IDRep));
            if (filtro.IDRep_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.IDRep)}_end", filtro.IDRep_end));
            }
        }

        if (filtro.Juridica != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Juridica)}", filtro.Juridica));
        }

        if (!string.IsNullOrWhiteSpace(filtro.NomeFantasia))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.NomeFantasia)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.NomeFantasia)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Class))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Class)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!filtro.DtNasc.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam3))
                parameters.Add(new($"@{(DBClientesDicInfo.DtNasc)}", dataParam3));
            if (!filtro.DtNasc_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam4))
                    parameters.Add(new($"@{(DBClientesDicInfo.DtNasc)}_end", dataParam4));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.InscEst))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.InscEst)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.InscEst)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Qualificacao))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Qualificacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Qualificacao)));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Sexo)}", filtro.Sexo));
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Idade)}", filtro.Idade));
            if (filtro.Idade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.Idade)}_end", filtro.Idade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.CNPJ))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.CNPJ)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CNPJ)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CPF))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.CPF)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.RG))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.RG)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (filtro.TipoCaptacao != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.TipoCaptacao)}", filtro.TipoCaptacao));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Observacao))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Observacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Endereco))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Endereco)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Bairro))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Bairro)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.CEP))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.CEP)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fax))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Fax)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fone))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Fone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Data))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Data)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.HomePage))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.HomePage)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.HomePage)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.EMail)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (filtro.Obito != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.Obito)}", filtro.Obito));
        }

        if (!string.IsNullOrWhiteSpace(filtro.NomePai))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.NomePai)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.NomePai)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.RGOExpeditor))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.RGOExpeditor)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.RGOExpeditor)));
        }

        if (filtro.RegimeTributacao != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.RegimeTributacao)}", filtro.RegimeTributacao));
            if (filtro.RegimeTributacao_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.RegimeTributacao)}_end", filtro.RegimeTributacao_end));
            }
        }

        if (filtro.EnquadramentoEmpresa != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.EnquadramentoEmpresa)}", filtro.EnquadramentoEmpresa));
            if (filtro.EnquadramentoEmpresa_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.EnquadramentoEmpresa)}_end", filtro.EnquadramentoEmpresa_end));
            }
        }

        if (filtro.ReportECBOnly != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.ReportECBOnly)}", filtro.ReportECBOnly));
        }

        if (filtro.ProBono != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.ProBono)}", filtro.ProBono));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CNH))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.CNH)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CNH)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.PessoaContato))
        {
            parameters.Add(new($"@{(DBClientesDicInfo.PessoaContato)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.PessoaContato)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBClientesDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBClientesDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Empresa.IsEmptyX()) && filtro.Empresa_end.IsEmptyX())
        {
            cWhere.Append(filtro.Empresa.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Empresa}] = @{(DBClientesDicInfo.Empresa)}");
        }
        else if (!(filtro.Empresa.IsEmptyX()) && !(filtro.Empresa_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.Empresa} BETWEEN @{(DBClientesDicInfo.Empresa)} AND @{(DBClientesDicInfo.Empresa)}_end");
        }

        cWhere.Append(filtro.Icone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Icone}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Icone)}");
        cWhere.Append(filtro.NomeMae.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomeMae}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.NomeMae)}");
        if (!(filtro.RGDataExp.IsEmptyDX()) && filtro.RGDataExp_end.IsEmptyDX())
        {
            cWhere.Append(filtro.RGDataExp.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RGDataExp}], 103) = CONVERT(DATE, @{(DBClientesDicInfo.RGDataExp)}, 103)");
        }
        else if (!(filtro.RGDataExp.IsEmptyDX()) && !(filtro.RGDataExp_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.RGDataExp} BETWEEN @{(DBClientesDicInfo.RGDataExp)} AND @{(DBClientesDicInfo.RGDataExp)}_end");
        }

        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.GUID)}");
        cWhere.Append(filtro.Inativo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Inativo}] = @{(DBClientesDicInfo.Inativo)}");
        cWhere.Append(filtro.QuemIndicou.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.QuemIndicou}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.QuemIndicou)}");
        cWhere.Append(filtro.SendEMail == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.SendEMail}] = @{(DBClientesDicInfo.SendEMail)}");
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Nome)}");
        if (!(filtro.Adv.IsEmptyX()) && filtro.Adv_end.IsEmptyX())
        {
            cWhere.Append(filtro.Adv.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Adv}] = @{(DBClientesDicInfo.Adv)}");
        }
        else if (!(filtro.Adv.IsEmptyX()) && !(filtro.Adv_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.Adv} BETWEEN @{(DBClientesDicInfo.Adv)} AND @{(DBClientesDicInfo.Adv)}_end");
        }

        if (!(filtro.IDRep.IsEmptyX()) && filtro.IDRep_end.IsEmptyX())
        {
            cWhere.Append(filtro.IDRep.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.IDRep}] = @{(DBClientesDicInfo.IDRep)}");
        }
        else if (!(filtro.IDRep.IsEmptyX()) && !(filtro.IDRep_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.IDRep} BETWEEN @{(DBClientesDicInfo.IDRep)} AND @{(DBClientesDicInfo.IDRep)}_end");
        }

        cWhere.Append(filtro.Juridica == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Juridica}] = @{(DBClientesDicInfo.Juridica)}");
        cWhere.Append(filtro.NomeFantasia.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomeFantasia}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.NomeFantasia)}");
        cWhere.Append(filtro.Class.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Class)}");
        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Tipo}] = @{(DBClientesDicInfo.Tipo)}");
        if (!(filtro.DtNasc.IsEmptyDX()) && filtro.DtNasc_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DtNasc.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.DtNasc}], 103) = CONVERT(DATE, @{(DBClientesDicInfo.DtNasc)}, 103)");
        }
        else if (!(filtro.DtNasc.IsEmptyDX()) && !(filtro.DtNasc_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.DtNasc} BETWEEN @{(DBClientesDicInfo.DtNasc)} AND @{(DBClientesDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.InscEst.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.InscEst}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.InscEst)}");
        cWhere.Append(filtro.Qualificacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Qualificacao}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Qualificacao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Sexo}] = @{(DBClientesDicInfo.Sexo)}");
        if (!(filtro.Idade.IsEmptyX()) && filtro.Idade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Idade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Idade}] = @{(DBClientesDicInfo.Idade)}");
        }
        else if (!(filtro.Idade.IsEmptyX()) && !(filtro.Idade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.Idade} BETWEEN @{(DBClientesDicInfo.Idade)} AND @{(DBClientesDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.CNPJ.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CNPJ}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.CNPJ)}");
        cWhere.Append(filtro.CPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.RG)}");
        cWhere.Append(filtro.TipoCaptacao == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.TipoCaptacao}] = @{(DBClientesDicInfo.TipoCaptacao)}");
        cWhere.Append(filtro.Observacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Observacao)}");
        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Bairro)}");
        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Cidade}] = @{(DBClientesDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.Cidade} BETWEEN @{(DBClientesDicInfo.Cidade)} AND @{(DBClientesDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.CEP)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Fax)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Fone)}");
        cWhere.Append(filtro.Data.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.Data)}");
        cWhere.Append(filtro.HomePage.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.HomePage}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.HomePage)}");
        cWhere.Append(filtro.EMail.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.EMail)}");
        cWhere.Append(filtro.Obito == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.Obito}] = @{(DBClientesDicInfo.Obito)}");
        cWhere.Append(filtro.NomePai.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.NomePai}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.NomePai)}");
        cWhere.Append(filtro.RGOExpeditor.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RGOExpeditor}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.RGOExpeditor)}");
        if (!(filtro.RegimeTributacao.IsEmptyX()) && filtro.RegimeTributacao_end.IsEmptyX())
        {
            cWhere.Append(filtro.RegimeTributacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.RegimeTributacao}] = @{(DBClientesDicInfo.RegimeTributacao)}");
        }
        else if (!(filtro.RegimeTributacao.IsEmptyX()) && !(filtro.RegimeTributacao_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.RegimeTributacao} BETWEEN @{(DBClientesDicInfo.RegimeTributacao)} AND @{(DBClientesDicInfo.RegimeTributacao)}_end");
        }

        if (!(filtro.EnquadramentoEmpresa.IsEmptyX()) && filtro.EnquadramentoEmpresa_end.IsEmptyX())
        {
            cWhere.Append(filtro.EnquadramentoEmpresa.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.EnquadramentoEmpresa}] = @{(DBClientesDicInfo.EnquadramentoEmpresa)}");
        }
        else if (!(filtro.EnquadramentoEmpresa.IsEmptyX()) && !(filtro.EnquadramentoEmpresa_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.EnquadramentoEmpresa} BETWEEN @{(DBClientesDicInfo.EnquadramentoEmpresa)} AND @{(DBClientesDicInfo.EnquadramentoEmpresa)}_end");
        }

        cWhere.Append(filtro.ReportECBOnly == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.ReportECBOnly}] = @{(DBClientesDicInfo.ReportECBOnly)}");
        cWhere.Append(filtro.ProBono == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.ProBono}] = @{(DBClientesDicInfo.ProBono)}");
        cWhere.Append(filtro.CNH.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CNH}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.CNH)}");
        cWhere.Append(filtro.PessoaContato.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.PessoaContato}]  {DevourerConsts.MsiCollate} like @{(DBClientesDicInfo.PessoaContato)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].[{DBClientesDicInfo.CampoCodigo}] = @{(DBClientesDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBClientesDicInfo.PTabelaNome}].{DBClientesDicInfo.CampoCodigo} BETWEEN @{(DBClientesDicInfo.CampoCodigo)} AND @{(DBClientesDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterClientes? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterClientes? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter>? parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-Clientes-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter>? parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBClientesDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ClientesResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter>? parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}