// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IFaseWriter
{
    Task<FFase> WriteAsync(Models.Fase fase, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(FaseResponse fase, int operadorId, MsiSqlConnection? oCnn);
}

public class FaseWriter(IFFaseFactory faseFactory) : IFaseWriter
{
    private readonly IFFaseFactory _faseFactory = faseFactory ?? throw new ArgumentNullException(nameof(faseFactory));
    public virtual async Task Delete(FaseResponse fase, int operadorId, MsiSqlConnection? oCnn)
    {
        await _faseFactory.DeleteAsync(operadorId, fase.Id, oCnn);
    }

    public virtual async Task<FFase> WriteAsync(Models.Fase fase, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (fase.Id.IsEmptyIDNumber() ? _faseFactory.CreateAsync() : _faseFactory.CreateFromIdAsync(fase.Id, oCnn));
        dbRec.FDescricao = fase.Descricao;
        dbRec.FGUID = fase.GUID;
        dbRec.FJustica = fase.Justica;
        dbRec.FArea = fase.Area;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}