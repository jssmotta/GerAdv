// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterHistorico } from '@/app/GerAdv_TS/Historico/Filters/Historico';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import PrecatoriaComboBox from '@/app/GerAdv_TS/Precatoria/ComboBox/Precatoria';
import ApensoComboBox from '@/app/GerAdv_TS/Apenso/ComboBox/Apenso';
import FaseComboBox from '@/app/GerAdv_TS/Fase/ComboBox/Fase';
import StatusAndamentoComboBox from '@/app/GerAdv_TS/StatusAndamento/ComboBox/StatusAndamento';
interface UseHistoricoFilterProps {
  handleFetchWithFilter: (filtro?: FilterHistorico | undefined | null) => Promise<void>;
}
interface UseHistoricoFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterHistorico;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterHistorico>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterHistorico) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterHistorico>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useHistoricoFilter = ({ handleFetchWithFilter }: UseHistoricoFilterProps): UseHistoricoFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterHistorico>({} as FilterHistorico);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterHistorico;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterHistorico) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('HistoricoFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterHistorico>) => (
  <>
  <InputInput
  type='text'
  id='extraid'
  name='extraid'
  value={handlers.windowFilter?.extraid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ExtraID'
  label='ExtraID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='extraid_end'
  name='extraid_end'
  value={handlers.windowFilter?.extraid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ExtraID final'
  label='ExtraID final'
  disabled={handlers.windowFilter?.extraid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idne'
  name='idne'
  value={handlers.windowFilter?.idne ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDNE'
  label='IDNE (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idne_end'
  name='idne_end'
  value={handlers.windowFilter?.idne_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDNE final'
  label='IDNE final'
  disabled={handlers.windowFilter?.idne ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='extraguid'
  name='extraguid'
  value={handlers.windowFilter?.extraguid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ExtraGUID'
  label='ExtraGUID'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='liminarorigem'
  name='liminarorigem'
  value={handlers.windowFilter?.liminarorigem ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe LiminarOrigem'
  label='LiminarOrigem (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='liminarorigem_end'
  name='liminarorigem_end'
  value={handlers.windowFilter?.liminarorigem_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe LiminarOrigem final'
  label='LiminarOrigem final'
  disabled={handlers.windowFilter?.liminarorigem ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='naopublicavel'
  name='naopublicavel'
  value={handlers.windowFilter?.naopublicavel ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='NaoPublicavel'
  className='inputSearch inputSearchCheckbox'
  />
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <PrecatoriaComboBox
  name='precatoria'
  dataForm={null}
  value={handlers.windowFilter?.precatoria}
  setValue={(e:any) => handlers.handleComboChange(e, 'precatoria')}
  className='inputSearch inputSearchComboboxTab'
  label='Precatoria'
  />
  <ApensoComboBox
  name='apenso'
  dataForm={null}
  value={handlers.windowFilter?.apenso}
  setValue={(e:any) => handlers.handleComboChange(e, 'apenso')}
  className='inputSearch inputSearchComboboxTab'
  label='Apenso'
  />
  <InputInput
  type='text'
  id='idinstprocesso'
  name='idinstprocesso'
  value={handlers.windowFilter?.idinstprocesso ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDInstProcesso'
  label='IDInstProcesso (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idinstprocesso_end'
  name='idinstprocesso_end'
  value={handlers.windowFilter?.idinstprocesso_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDInstProcesso final'
  label='IDInstProcesso final'
  disabled={handlers.windowFilter?.idinstprocesso ? false: true}
  className='inputIncNome inputSearch'
  />
  <FaseComboBox
  name='fase'
  dataForm={null}
  value={handlers.windowFilter?.fase}
  setValue={(e:any) => handlers.handleComboChange(e, 'fase')}
  className='inputSearch inputSearchComboboxTab'
  label='Fase'
  />
  <InputDate
  type='text'
  id='data'
  label='Data (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={(value: string) => handlers.handleDateChange('data', value)}
  />
  <InputDate
  type='text'
  id='data_end'
  label='Data (final)'
  dataForm={null}
  className='inputSearch'
  name='data_end'
  value={handlers.windowFilter?.data_end ?? ''}
  disabled={handlers.windowFilter?.data ? false: true}
  onChange={(value: string) => handlers.handleDateChange('data_end', value)}
  />
  <InputInput
  type='text'
  id='observacao'
  name='observacao'
  value={handlers.windowFilter?.observacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Observacao'
  label='Observacao'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='agendado'
  name='agendado'
  value={handlers.windowFilter?.agendado ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Agendado'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='concluido'
  name='concluido'
  value={handlers.windowFilter?.concluido ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Concluido'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='mesmaagenda'
  name='mesmaagenda'
  value={handlers.windowFilter?.mesmaagenda ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='MesmaAgenda'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='sad'
  name='sad'
  value={handlers.windowFilter?.sad ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe SAD'
  label='SAD (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='sad_end'
  name='sad_end'
  value={handlers.windowFilter?.sad_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe SAD final'
  label='SAD final'
  disabled={handlers.windowFilter?.sad ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='resumido'
  name='resumido'
  value={handlers.windowFilter?.resumido ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Resumido'
  className='inputSearch inputSearchCheckbox'
  />
  <StatusAndamentoComboBox
  name='statusandamento'
  dataForm={null}
  value={handlers.windowFilter?.statusandamento}
  setValue={(e:any) => handlers.handleComboChange(e, 'statusandamento')}
  className='inputSearch inputSearchComboboxTab'
  label='Status Andamento'
  />
  <InputComboFilterYesNo
  type='text'
  id='top'
  name='top'
  value={handlers.windowFilter?.top ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Top'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};