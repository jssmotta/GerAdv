// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    // GridsDesktop.tsx - Versão Refatorada
'use client';
import React, { useMemo, useCallback, useState } from 'react';
import {
  Grid, 
  GridColumn, 
  GridSortChangeEvent, 
} from '@progress/kendo-react-grid';
import { useSystemContext } from '@/app/context/SystemContext';
import { IProcessos } from '../../Interfaces/interface.Processos';
import { useRouter } from 'next/navigation';
import { applyFilter, CRUD_CONSTANTS, formatCurrency, formatDateBrowser } from '@/app/tools/crud';
import { SvgIcon } from '@progress/kendo-react-common';
import { useHiddenColumns } from '@/app/hooks/useHiddenColumns';
import { GridColumnMenu } from '@/app/components/Cruds/GridColumnMenu';
import { useGridFilter } from '@/app/hooks/useGridFilter';
import { useGridPagination } from '@/app/hooks/useGridPagination';
import { getExportColumns, useExportToExcel } from '@/app/hooks/useExportToExcel';
import { getExportColumnsPdf, useExportToPdf } from '@/app/hooks/useExportToPdf';
import { fileExcelIcon, filePdfIcon, pencilIcon, trashIcon, searchIcon } from '@progress/kendo-svg-icons';
import { orderBy, SortDescriptor } from '@progress/kendo-data-query';
import { Button } from '@progress/kendo-react-buttons';
import { ExportButtons } from '@/app/components/Cruds/ExportButtons';
interface ProcessosGridProps {
  data: IProcessos[];
  onRowClick: (processos: IProcessos) => void;
  onDeleteClick: (e: any) => void;
  setSelectedId: (id: number | null) => void;
}
export const ProcessosGridDesktopComponent = React.memo(
({
  data, 
  onRowClick, 
  onDeleteClick, 
  setSelectedId, 

}: ProcessosGridProps) => {
const router = useRouter();
const { systemContext } = useSystemContext();
const RowNumberCell = (props: any) => <td>{props.dataIndex + 1}</td>;
// Hook para paginação
const { page, handlePageChange } = useGridPagination({
  initialSkip: 0, 
  initialTake: 10, 
});
// Configuração dos filtros iniciais
const initialFilters = {
  nropasta: '',
};
// Lógica de filtro customizada usando useCallback
const filterLogic = useCallback((data: IProcessos, filters: Record<string, any>) => {
  const nropastaMatches = applyFilter(data, 'nropasta', filters.nropasta);
  return nropastaMatches
  ;
}, []);
// Hook para filtros
const { columnFilters, filteredData, handleFilterChange } = useGridFilter({
  data, 
  initialFilters, 
  filterLogic, 
});
const initialSort: SortDescriptor[] = [{ field: 'nome', dir: 'asc' }];
const [sort, setSort] = useState<SortDescriptor[]>(initialSort);
// Direct use of Kendo orderBy with native Date objects
const sortedData = orderBy(filteredData, sort);
const handleSortChange = (event: GridSortChangeEvent) => {
  setSort(event.sort);
};
const handleRowClick = (e: any) => {
  onRowClick(e.dataItem);
};

const openSearchCellAgenda = (id: number) => {
  router.push(`/pages/agenda/?processos=${id}`);
};
const SearchFromCellAgenda = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAgenda(props.dataItem.id)}><span title='Pesquisar relacionados em Compromisso'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellAgendaFinanceiro = (id: number) => {
  router.push(`/pages/agendafinanceiro/?processos=${id}`);
};
const SearchFromCellAgendaFinanceiro = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAgendaFinanceiro(props.dataItem.id)}><span title='Pesquisar relacionados em Agenda Financeiro'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellAgendaRepetir = (id: number) => {
  router.push(`/pages/agendarepetir/?processos=${id}`);
};
const SearchFromCellAgendaRepetir = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAgendaRepetir(props.dataItem.id)}><span title='Pesquisar relacionados em Agenda Repetir'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellAndamentosMD = (id: number) => {
  router.push(`/pages/andamentosmd/?processos=${id}`);
};
const SearchFromCellAndamentosMD = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAndamentosMD(props.dataItem.id)}><span title='Pesquisar relacionados em Andamentos M D'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellApenso = (id: number) => {
  router.push(`/pages/apenso/?processos=${id}`);
};
const SearchFromCellApenso = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellApenso(props.dataItem.id)}><span title='Pesquisar relacionados em Apenso'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellApenso2 = (id: number) => {
  router.push(`/pages/apenso2/?processos=${id}`);
};
const SearchFromCellApenso2 = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellApenso2(props.dataItem.id)}><span title='Pesquisar relacionados em Apenso2'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellContaCorrente = (id: number) => {
  router.push(`/pages/contacorrente/?processos=${id}`);
};
const SearchFromCellContaCorrente = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellContaCorrente(props.dataItem.id)}><span title='Pesquisar relacionados em Conta Corrente'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellContatoCRM = (id: number) => {
  router.push(`/pages/contatocrm/?processos=${id}`);
};
const SearchFromCellContatoCRM = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellContatoCRM(props.dataItem.id)}><span title='Pesquisar relacionados em Contato C R M'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellContratos = (id: number) => {
  router.push(`/pages/contratos/?processos=${id}`);
};
const SearchFromCellContratos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellContratos(props.dataItem.id)}><span title='Pesquisar relacionados em Contratos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellDocumentos = (id: number) => {
  router.push(`/pages/documentos/?processos=${id}`);
};
const SearchFromCellDocumentos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellDocumentos(props.dataItem.id)}><span title='Pesquisar relacionados em Documentos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellEnderecoSistema = (id: number) => {
  router.push(`/pages/enderecosistema/?processos=${id}`);
};
const SearchFromCellEnderecoSistema = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellEnderecoSistema(props.dataItem.id)}><span title='Pesquisar relacionados em Endereco Sistema'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellHistorico = (id: number) => {
  router.push(`/pages/historico/?processos=${id}`);
};
const SearchFromCellHistorico = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellHistorico(props.dataItem.id)}><span title='Pesquisar relacionados em Historico'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellHonorariosDadosContrato = (id: number) => {
  router.push(`/pages/honorariosdadoscontrato/?processos=${id}`);
};
const SearchFromCellHonorariosDadosContrato = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellHonorariosDadosContrato(props.dataItem.id)}><span title='Pesquisar relacionados em Honorarios Dados Contrato'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellHorasTrab = (id: number) => {
  router.push(`/pages/horastrab/?processos=${id}`);
};
const SearchFromCellHorasTrab = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellHorasTrab(props.dataItem.id)}><span title='Pesquisar relacionados em Horas Trab'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellInstancia = (id: number) => {
  router.push(`/pages/instancia/?processos=${id}`);
};
const SearchFromCellInstancia = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellInstancia(props.dataItem.id)}><span title='Pesquisar relacionados em Instancia'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellLigacoes = (id: number) => {
  router.push(`/pages/ligacoes/?processos=${id}`);
};
const SearchFromCellLigacoes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellLigacoes(props.dataItem.id)}><span title='Pesquisar relacionados em Ligacoes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellLivroCaixa = (id: number) => {
  router.push(`/pages/livrocaixa/?processos=${id}`);
};
const SearchFromCellLivroCaixa = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellLivroCaixa(props.dataItem.id)}><span title='Pesquisar relacionados em Livro Caixa'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellNENotas = (id: number) => {
  router.push(`/pages/nenotas/?processos=${id}`);
};
const SearchFromCellNENotas = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellNENotas(props.dataItem.id)}><span title='Pesquisar relacionados em N E Notas'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellParceriaProc = (id: number) => {
  router.push(`/pages/parceriaproc/?processos=${id}`);
};
const SearchFromCellParceriaProc = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellParceriaProc(props.dataItem.id)}><span title='Pesquisar relacionados em Parceria Proc'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellParteClienteOutras = (id: number) => {
  router.push(`/pages/parteclienteoutras/?processos=${id}`);
};
const SearchFromCellParteClienteOutras = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellParteClienteOutras(props.dataItem.id)}><span title='Pesquisar relacionados em Parte Cliente Outras'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPenhora = (id: number) => {
  router.push(`/pages/penhora/?processos=${id}`);
};
const SearchFromCellPenhora = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPenhora(props.dataItem.id)}><span title='Pesquisar relacionados em Penhora'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPrecatoria = (id: number) => {
  router.push(`/pages/precatoria/?processos=${id}`);
};
const SearchFromCellPrecatoria = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPrecatoria(props.dataItem.id)}><span title='Pesquisar relacionados em Precatoria'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProCDA = (id: number) => {
  router.push(`/pages/procda/?processos=${id}`);
};
const SearchFromCellProCDA = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProCDA(props.dataItem.id)}><span title='Pesquisar relacionados em Pro C D A'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProcessosObsReport = (id: number) => {
  router.push(`/pages/processosobsreport/?processos=${id}`);
};
const SearchFromCellProcessosObsReport = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProcessosObsReport(props.dataItem.id)}><span title='Pesquisar relacionados em Processos Obs Report'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProcessosParados = (id: number) => {
  router.push(`/pages/processosparados/?processos=${id}`);
};
const SearchFromCellProcessosParados = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProcessosParados(props.dataItem.id)}><span title='Pesquisar relacionados em Processos Parados'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProcessOutputRequest = (id: number) => {
  router.push(`/pages/processoutputrequest/?processos=${id}`);
};
const SearchFromCellProcessOutputRequest = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProcessOutputRequest(props.dataItem.id)}><span title='Pesquisar relacionados em Process Output Request'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProDepositos = (id: number) => {
  router.push(`/pages/prodepositos/?processos=${id}`);
};
const SearchFromCellProDepositos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProDepositos(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Depositos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProDespesas = (id: number) => {
  router.push(`/pages/prodespesas/?processos=${id}`);
};
const SearchFromCellProDespesas = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProDespesas(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Despesas'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProObservacoes = (id: number) => {
  router.push(`/pages/proobservacoes/?processos=${id}`);
};
const SearchFromCellProObservacoes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProObservacoes(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Observacoes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProPartes = (id: number) => {
  router.push(`/pages/propartes/?processos=${id}`);
};
const SearchFromCellProPartes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProPartes(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Partes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProProcuradores = (id: number) => {
  router.push(`/pages/proprocuradores/?processos=${id}`);
};
const SearchFromCellProProcuradores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProProcuradores(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Procuradores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProResumos = (id: number) => {
  router.push(`/pages/proresumos/?processos=${id}`);
};
const SearchFromCellProResumos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProResumos(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Resumos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProSucumbencia = (id: number) => {
  router.push(`/pages/prosucumbencia/?processos=${id}`);
};
const SearchFromCellProSucumbencia = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProSucumbencia(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Sucumbencia'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProValores = (id: number) => {
  router.push(`/pages/provalores/?processos=${id}`);
};
const SearchFromCellProValores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProValores(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Valores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellRecados = (id: number) => {
  router.push(`/pages/recados/?processos=${id}`);
};
const SearchFromCellRecados = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellRecados(props.dataItem.id)}><span title='Pesquisar relacionados em Recados'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellTerceiros = (id: number) => {
  router.push(`/pages/terceiros/?processos=${id}`);
};
const SearchFromCellTerceiros = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellTerceiros(props.dataItem.id)}><span title='Pesquisar relacionados em Terceiros'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellUltimosProcessos = (id: number) => {
  router.push(`/pages/ultimosprocessos/?processos=${id}`);
};
const SearchFromCellUltimosProcessos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellUltimosProcessos(props.dataItem.id)}><span title='Pesquisar relacionados em Ultimos Processos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};

const DeleteRow = (e: any) => {
  return (
  <td>
    <span onClick={() => onDeleteClick(e) } title='Excluit item' ><SvgIcon icon={trashIcon} /></span>
  </td>
);
};
const EditRow = (e: any) => {
  return (
  <td>
    <span onClick={() => handleRowClick(e)} title='Editar item' ><SvgIcon icon={pencilIcon} /></span>
  </td>
);
};
const gridColumns = useMemo(() => [
  <GridColumn format='{0:n0}' field='index' title='#' sortable={false} filterable={false} width='55px' cells={{ data: RowNumberCell }} />,
  <GridColumn format='{0:n0}' hidden={true}  field='id' title='Código' sortable={true} filterable={true} width='55px' />,
  <GridColumn field='nropasta' title='NroPasta' sortable={true} filterable={true} />, /* Track G.02 */
  <GridColumn
  field='id_edit_Agenda'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Compromisso'
  cells={{ data: SearchFromCellAgenda }}
  />, 
  <GridColumn
  field='id_edit_AgendaFinanceiro'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Agenda Financeiro'
  cells={{ data: SearchFromCellAgendaFinanceiro }}
  />, 
  <GridColumn
  field='id_edit_AgendaRepetir'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Agenda Repetir'
  cells={{ data: SearchFromCellAgendaRepetir }}
  />, 
  <GridColumn
  field='id_edit_AndamentosMD'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Andamentos M D'
  cells={{ data: SearchFromCellAndamentosMD }}
  />, 
  <GridColumn
  field='id_edit_Apenso'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Apenso'
  cells={{ data: SearchFromCellApenso }}
  />, 
  <GridColumn
  field='id_edit_Apenso2'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Apenso2'
  cells={{ data: SearchFromCellApenso2 }}
  />, 
  <GridColumn
  field='id_edit_ContaCorrente'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Conta Corrente'
  cells={{ data: SearchFromCellContaCorrente }}
  />, 
  <GridColumn
  field='id_edit_ContatoCRM'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Contato C R M'
  cells={{ data: SearchFromCellContatoCRM }}
  />, 
  <GridColumn
  field='id_edit_Contratos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Contratos'
  cells={{ data: SearchFromCellContratos }}
  />, 
  <GridColumn
  field='id_edit_Documentos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Documentos'
  cells={{ data: SearchFromCellDocumentos }}
  />, 
  <GridColumn
  field='id_edit_EnderecoSistema'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Endereco Sistema'
  cells={{ data: SearchFromCellEnderecoSistema }}
  />, 
  <GridColumn
  field='id_edit_Historico'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Historico'
  cells={{ data: SearchFromCellHistorico }}
  />, 
  <GridColumn
  field='id_edit_HonorariosDadosContrato'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Honorarios Dados Contrato'
  cells={{ data: SearchFromCellHonorariosDadosContrato }}
  />, 
  <GridColumn
  field='id_edit_HorasTrab'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Horas Trab'
  cells={{ data: SearchFromCellHorasTrab }}
  />, 
  <GridColumn
  field='id_edit_Instancia'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Instancia'
  cells={{ data: SearchFromCellInstancia }}
  />, 
  <GridColumn
  field='id_edit_Ligacoes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Ligacoes'
  cells={{ data: SearchFromCellLigacoes }}
  />, 
  <GridColumn
  field='id_edit_LivroCaixa'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Livro Caixa'
  cells={{ data: SearchFromCellLivroCaixa }}
  />, 
  <GridColumn
  field='id_edit_NENotas'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='N E Notas'
  cells={{ data: SearchFromCellNENotas }}
  />, 
  <GridColumn
  field='id_edit_ParceriaProc'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Parceria Proc'
  cells={{ data: SearchFromCellParceriaProc }}
  />, 
  <GridColumn
  field='id_edit_ParteClienteOutras'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Parte Cliente Outras'
  cells={{ data: SearchFromCellParteClienteOutras }}
  />, 
  <GridColumn
  field='id_edit_Penhora'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Penhora'
  cells={{ data: SearchFromCellPenhora }}
  />, 
  <GridColumn
  field='id_edit_Precatoria'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Precatoria'
  cells={{ data: SearchFromCellPrecatoria }}
  />, 
  <GridColumn
  field='id_edit_ProCDA'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro C D A'
  cells={{ data: SearchFromCellProCDA }}
  />, 
  <GridColumn
  field='id_edit_ProcessosObsReport'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Processos Obs Report'
  cells={{ data: SearchFromCellProcessosObsReport }}
  />, 
  <GridColumn
  field='id_edit_ProcessosParados'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Processos Parados'
  cells={{ data: SearchFromCellProcessosParados }}
  />, 
  <GridColumn
  field='id_edit_ProcessOutputRequest'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Process Output Request'
  cells={{ data: SearchFromCellProcessOutputRequest }}
  />, 
  <GridColumn
  field='id_edit_ProDepositos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Depositos'
  cells={{ data: SearchFromCellProDepositos }}
  />, 
  <GridColumn
  field='id_edit_ProDespesas'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Despesas'
  cells={{ data: SearchFromCellProDespesas }}
  />, 
  <GridColumn
  field='id_edit_ProObservacoes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Observacoes'
  cells={{ data: SearchFromCellProObservacoes }}
  />, 
  <GridColumn
  field='id_edit_ProPartes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Partes'
  cells={{ data: SearchFromCellProPartes }}
  />, 
  <GridColumn
  field='id_edit_ProProcuradores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Procuradores'
  cells={{ data: SearchFromCellProProcuradores }}
  />, 
  <GridColumn
  field='id_edit_ProResumos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Resumos'
  cells={{ data: SearchFromCellProResumos }}
  />, 
  <GridColumn
  field='id_edit_ProSucumbencia'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Sucumbencia'
  cells={{ data: SearchFromCellProSucumbencia }}
  />, 
  <GridColumn
  field='id_edit_ProValores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Valores'
  cells={{ data: SearchFromCellProValores }}
  />, 
  <GridColumn
  field='id_edit_Recados'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Recados'
  cells={{ data: SearchFromCellRecados }}
  />, 
  <GridColumn
  field='id_edit_Terceiros'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Terceiros'
  cells={{ data: SearchFromCellTerceiros }}
  />, 
  <GridColumn
  field='id_edit_UltimosProcessos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Ultimos Processos'
  cells={{ data: SearchFromCellUltimosProcessos }}
  />, 
  <GridColumn field='nomeadvogados' title='Advogados' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='nomeprepostos' title='Prepostos' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='nomeclientes' title='Clientes' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='nomejustica' title='Justiça' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='nomeoponentes' title='Oponentes' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='descricaoarea' title='Área' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='nomecidade' title='Cidade' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='descricaorito' title='Rito' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn field='descricaoatividades' title='Atividades' sortable={false} filterable={false} />, /* Track G.01 */

  <GridColumn
  field='id_edit_row'
  width={'55px'}
  title='Editar registro'
  sortable={false} filterable={false}
  cells={{ data: EditRow }} />, 
  <GridColumn
  field='id_delete_row'
  width={'55px'}
  title='Excluir registro'
  sortable={false} filterable={false}
  cells={{ data: DeleteRow }} />
  ], []);
  // Hook customizado para gerenciar colunas ocultas
  const {
    columnsState, 
    syncedGridColumns, 
    initialized, 
    handleColumnsStateChange
  } = useHiddenColumns({
  gridColumns, 
  systemContextId: systemContext?.Id, 
  tableName: 'processos'
});
// Componente do menu de colunas
const columnMenuComponent = GridColumnMenu({
  columnsState, 
  onColumnsStateChange: handleColumnsStateChange
});

return (
<>
{initialized && (
  <Grid
  columnMenu={columnMenuComponent}
  columnsState={columnsState}
  className='grid-desktop-crud grid-desktop-processos'
  data={sortedData.slice(page.skip, page.skip + page.take)}
  skip={page.skip}
  take={page.take}
  total={sortedData.length}
  pageable={{
    pageSizes: Array.from(CRUD_CONSTANTS.PAGINATION.PAGE_SIZES), 
    buttonCount: CRUD_CONSTANTS.PAGINATION.BUTTON_COUNT, 
  }}
  onPageChange={handlePageChange}
  rowReorderable={true}
  sortable={true}
  sort={sort}
  onSortChange={handleSortChange}
  resizable={true}
  reorderable={true}
  filterable={true}
  onFilterChange={handleFilterChange}
  onRowDoubleClick={(e) => handleRowClick(e)}>
  {syncedGridColumns}
</Grid>
)}
<div style={{ marginTop: '10px' }}>

</div>
</>
);
}
);