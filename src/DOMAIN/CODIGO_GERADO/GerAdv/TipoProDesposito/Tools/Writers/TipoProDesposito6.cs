// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITipoProDespositoWriter
{
    Task<FTipoProDesposito> WriteAsync(Models.TipoProDesposito tipoprodesposito, MsiSqlConnection oCnn);
    Task Delete(TipoProDespositoResponse tipoprodesposito, int operadorId, MsiSqlConnection oCnn);
}

public class TipoProDespositoWriter(IFTipoProDespositoFactory tipoprodespositoFactory) : ITipoProDespositoWriter
{
    private readonly IFTipoProDespositoFactory _tipoprodespositoFactory = tipoprodespositoFactory;
    public async Task Delete(TipoProDespositoResponse tipoprodesposito, int operadorId, MsiSqlConnection oCnn)
    {
        await _tipoprodespositoFactory.DeleteAsync(operadorId, tipoprodesposito.Id, oCnn);
    }

    public async Task<FTipoProDesposito> WriteAsync(Models.TipoProDesposito tipoprodesposito, MsiSqlConnection oCnn)
    {
        using var dbRec = await (tipoprodesposito.Id.IsEmptyIDNumber() ? _tipoprodespositoFactory.CreateAsync() : _tipoprodespositoFactory.CreateFromIdAsync(tipoprodesposito.Id, oCnn));
        dbRec.FNome = tipoprodesposito.Nome;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}