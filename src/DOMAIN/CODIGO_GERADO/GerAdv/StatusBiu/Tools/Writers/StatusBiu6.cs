// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IStatusBiuWriter
{
    Task<FStatusBiu> WriteAsync(Models.StatusBiu statusbiu, MsiSqlConnection oCnn);
    Task Delete(StatusBiuResponse statusbiu, int operadorId, MsiSqlConnection oCnn);
}

public class StatusBiuWriter(IFStatusBiuFactory statusbiuFactory) : IStatusBiuWriter
{
    private readonly IFStatusBiuFactory _statusbiuFactory = statusbiuFactory;
    public async Task Delete(StatusBiuResponse statusbiu, int operadorId, MsiSqlConnection oCnn)
    {
        await _statusbiuFactory.DeleteAsync(operadorId, statusbiu.Id, oCnn);
    }

    public async Task<FStatusBiu> WriteAsync(Models.StatusBiu statusbiu, MsiSqlConnection oCnn)
    {
        using var dbRec = await (statusbiu.Id.IsEmptyIDNumber() ? _statusbiuFactory.CreateAsync() : _statusbiuFactory.CreateFromIdAsync(statusbiu.Id, oCnn));
        dbRec.FNome = statusbiu.Nome;
        dbRec.FTipoStatusBiu = statusbiu.TipoStatusBiu;
        dbRec.FOperador = statusbiu.Operador;
        dbRec.FIcone = statusbiu.Icone;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}