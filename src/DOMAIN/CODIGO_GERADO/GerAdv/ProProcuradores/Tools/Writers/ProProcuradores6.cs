// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProProcuradoresWriter
{
    Task<FProProcuradores> WriteAsync(Models.ProProcuradores proprocuradores, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(ProProcuradoresResponse proprocuradores, int operadorId, MsiSqlConnection? oCnn);
}

public class ProProcuradoresWriter(IFProProcuradoresFactory proprocuradoresFactory) : IProProcuradoresWriter
{
    private readonly IFProProcuradoresFactory _proprocuradoresFactory = proprocuradoresFactory ?? throw new ArgumentNullException(nameof(proprocuradoresFactory));
    public virtual async Task Delete(ProProcuradoresResponse proprocuradores, int operadorId, MsiSqlConnection? oCnn)
    {
        await _proprocuradoresFactory.DeleteAsync(operadorId, proprocuradores.Id, oCnn);
    }

    public virtual async Task<FProProcuradores> WriteAsync(Models.ProProcuradores proprocuradores, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (proprocuradores.Id.IsEmptyIDNumber() ? _proprocuradoresFactory.CreateAsync() : _proprocuradoresFactory.CreateFromIdAsync(proprocuradores.Id, oCnn));
        dbRec.FAdvogado = proprocuradores.Advogado;
        dbRec.FNome = proprocuradores.Nome;
        dbRec.FProcesso = proprocuradores.Processo;
        dbRec.FData = proprocuradores.Data;
        dbRec.FSubstabelecimento = proprocuradores.Substabelecimento;
        dbRec.FProcuracao = proprocuradores.Procuracao;
        dbRec.FGUID = proprocuradores.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}