// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterOperador } from '@/app/GerAdv_TS/Operador/Filters/Operador';
import StatusBiuComboBox from '@/app/GerAdv_TS/StatusBiu/ComboBox/StatusBiu';
interface UseOperadorFilterProps {
  handleFetchWithFilter: (filtro?: FilterOperador | undefined | null) => Promise<void>;
}
interface UseOperadorFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterOperador;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterOperador>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterOperador) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterOperador>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useOperadorFilter = ({ handleFetchWithFilter }: UseOperadorFilterProps): UseOperadorFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterOperador>({} as FilterOperador);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterOperador;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterOperador) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('OperadorFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterOperador>) => (
  <>
  <InputInput
  type='text'
  id='email'
  name='email'
  value={handlers.windowFilter?.email ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail'
  label='EMail'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pasta'
  name='pasta'
  value={handlers.windowFilter?.pasta ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pasta'
  label='Pasta'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='telefonista'
  name='telefonista'
  value={handlers.windowFilter?.telefonista ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Telefonista'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='master'
  name='master'
  value={handlers.windowFilter?.master ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Master'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='nome'
  name='nome'
  value={handlers.windowFilter?.nome ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nome'
  label='Nome'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nick'
  name='nick'
  value={handlers.windowFilter?.nick ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nick'
  label='Nick'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='excluido'
  name='excluido'
  value={handlers.windowFilter?.excluido ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Excluido'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='situacao'
  name='situacao'
  value={handlers.windowFilter?.situacao ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Situacao'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='minhadescricao'
  name='minhadescricao'
  value={handlers.windowFilter?.minhadescricao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe MinhaDescricao'
  label='MinhaDescricao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='emailnet'
  name='emailnet'
  value={handlers.windowFilter?.emailnet ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMailNet'
  label='EMailNet'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='online'
  name='online'
  value={handlers.windowFilter?.online ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='OnLine'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='sysop'
  name='sysop'
  value={handlers.windowFilter?.sysop ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='SysOp'
  className='inputSearch inputSearchCheckbox'
  />
  <StatusBiuComboBox
  name='statusid'
  dataForm={null}
  value={handlers.windowFilter?.statusid}
  setValue={(e:any) => handlers.handleComboChange(e, 'statusid')}
  className='inputSearch inputSearchComboboxTab'
  label='Status Biu'
  />
  <InputComboFilterYesNo
  type='text'
  id='isfinanceiro'
  name='isfinanceiro'
  value={handlers.windowFilter?.isfinanceiro ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='IsFinanceiro'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='top'
  name='top'
  value={handlers.windowFilter?.top ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Top'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='sexo'
  name='sexo'
  value={handlers.windowFilter?.sexo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Sexo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='basico'
  name='basico'
  value={handlers.windowFilter?.basico ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Basico'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='externo'
  name='externo'
  value={handlers.windowFilter?.externo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Externo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='senha256'
  name='senha256'
  value={handlers.windowFilter?.senha256 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Senha256'
  label='Senha256'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='emailconfirmado'
  name='emailconfirmado'
  value={handlers.windowFilter?.emailconfirmado ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='EMailConfirmado'
  className='inputSearch inputSearchCheckbox'
  />
  <InputDate
  type='text'
  id='datalimitereset'
  label='DataLimiteReset (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datalimitereset'
  value={handlers.windowFilter?.datalimitereset ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datalimitereset', value)}
  />
  <InputDate
  type='text'
  id='datalimitereset_end'
  label='DataLimiteReset (final)'
  dataForm={null}
  className='inputSearch'
  name='datalimitereset_end'
  value={handlers.windowFilter?.datalimitereset_end ?? ''}
  disabled={handlers.windowFilter?.datalimitereset ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datalimitereset_end', value)}
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};