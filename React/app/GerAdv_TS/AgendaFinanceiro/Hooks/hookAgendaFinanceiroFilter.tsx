// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterAgendaFinanceiro } from '@/app/GerAdv_TS/AgendaFinanceiro/Filters/AgendaFinanceiro';
import CidadeComboBox from '@/app/GerAdv_TS/Cidade/ComboBox/Cidade';
import AdvogadosComboBox from '@/app/GerAdv_TS/Advogados/ComboBox/Advogados';
import FuncionariosComboBox from '@/app/GerAdv_TS/Funcionarios/ComboBox/Funcionarios';
import TipoCompromissoComboBox from '@/app/GerAdv_TS/TipoCompromisso/ComboBox/TipoCompromisso';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
import AreaComboBox from '@/app/GerAdv_TS/Area/ComboBox/Area';
import JusticaComboBox from '@/app/GerAdv_TS/Justica/ComboBox/Justica';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import OperadorComboBox from '@/app/GerAdv_TS/Operador/ComboBox/Operador';
import PrepostosComboBox from '@/app/GerAdv_TS/Prepostos/ComboBox/Prepostos';
interface UseAgendaFinanceiroFilterProps {
  handleFetchWithFilter: (filtro?: FilterAgendaFinanceiro | undefined | null) => Promise<void>;
}
interface UseAgendaFinanceiroFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterAgendaFinanceiro;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterAgendaFinanceiro>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterAgendaFinanceiro) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterAgendaFinanceiro>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useAgendaFinanceiroFilter = ({ handleFetchWithFilter }: UseAgendaFinanceiroFilterProps): UseAgendaFinanceiroFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterAgendaFinanceiro>({} as FilterAgendaFinanceiro);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterAgendaFinanceiro;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterAgendaFinanceiro) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('AgendaFinanceiroFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterAgendaFinanceiro>) => (
  <>
  <InputInput
  type='text'
  id='idcob'
  name='idcob'
  value={handlers.windowFilter?.idcob ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDCOB'
  label='IDCOB (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idcob_end'
  name='idcob_end'
  value={handlers.windowFilter?.idcob_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDCOB final'
  label='IDCOB final'
  disabled={handlers.windowFilter?.idcob ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idne'
  name='idne'
  value={handlers.windowFilter?.idne ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDNE'
  label='IDNE (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idne_end'
  name='idne_end'
  value={handlers.windowFilter?.idne_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDNE final'
  label='IDNE final'
  disabled={handlers.windowFilter?.idne ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='prazoprovisionado'
  name='prazoprovisionado'
  value={handlers.windowFilter?.prazoprovisionado ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe PrazoProvisionado'
  label='PrazoProvisionado (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='prazoprovisionado_end'
  name='prazoprovisionado_end'
  value={handlers.windowFilter?.prazoprovisionado_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe PrazoProvisionado final'
  label='PrazoProvisionado final'
  disabled={handlers.windowFilter?.prazoprovisionado ? false: true}
  className='inputIncNome inputSearch'
  />
  <CidadeComboBox
  name='cidade'
  dataForm={null}
  value={handlers.windowFilter?.cidade}
  setValue={(e:any) => handlers.handleComboChange(e, 'cidade')}
  className='inputSearch inputSearchComboboxTab'
  label='Cidade'
  />
  <InputInput
  type='text'
  id='oculto'
  name='oculto'
  value={handlers.windowFilter?.oculto ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Oculto'
  label='Oculto (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='oculto_end'
  name='oculto_end'
  value={handlers.windowFilter?.oculto_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Oculto final'
  label='Oculto final'
  disabled={handlers.windowFilter?.oculto ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cartaprecatoria'
  name='cartaprecatoria'
  value={handlers.windowFilter?.cartaprecatoria ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CartaPrecatoria'
  label='CartaPrecatoria (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cartaprecatoria_end'
  name='cartaprecatoria_end'
  value={handlers.windowFilter?.cartaprecatoria_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CartaPrecatoria final'
  label='CartaPrecatoria final'
  disabled={handlers.windowFilter?.cartaprecatoria ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='repetirdias'
  name='repetirdias'
  value={handlers.windowFilter?.repetirdias ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe RepetirDias'
  label='RepetirDias (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='repetirdias_end'
  name='repetirdias_end'
  value={handlers.windowFilter?.repetirdias_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe RepetirDias final'
  label='RepetirDias final'
  disabled={handlers.windowFilter?.repetirdias ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='repetir'
  name='repetir'
  value={handlers.windowFilter?.repetir ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Repetir'
  label='Repetir (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='repetir_end'
  name='repetir_end'
  value={handlers.windowFilter?.repetir_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Repetir final'
  label='Repetir final'
  disabled={handlers.windowFilter?.repetir ? false: true}
  className='inputIncNome inputSearch'
  />
  <AdvogadosComboBox
  name='advogado'
  dataForm={null}
  value={handlers.windowFilter?.advogado}
  setValue={(e:any) => handlers.handleComboChange(e, 'advogado')}
  className='inputSearch inputSearchComboboxTab'
  label='Advogados'
  />
  <InputInput
  type='text'
  id='eventogerador'
  name='eventogerador'
  value={handlers.windowFilter?.eventogerador ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EventoGerador'
  label='EventoGerador (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='eventogerador_end'
  name='eventogerador_end'
  value={handlers.windowFilter?.eventogerador_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EventoGerador final'
  label='EventoGerador final'
  disabled={handlers.windowFilter?.eventogerador ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='eventodata'
  label='EventoData (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='eventodata'
  value={handlers.windowFilter?.eventodata ?? ''}
  onChange={(value: string) => handlers.handleDateChange('eventodata', value)}
  />
  <InputDate
  type='text'
  id='eventodata_end'
  label='EventoData (final)'
  dataForm={null}
  className='inputSearch'
  name='eventodata_end'
  value={handlers.windowFilter?.eventodata_end ?? ''}
  disabled={handlers.windowFilter?.eventodata ? false: true}
  onChange={(value: string) => handlers.handleDateChange('eventodata_end', value)}
  />
  <FuncionariosComboBox
  name='funcionario'
  dataForm={null}
  value={handlers.windowFilter?.funcionario}
  setValue={(e:any) => handlers.handleComboChange(e, 'funcionario')}
  className='inputSearch inputSearchComboboxTab'
  label='Colaborador'
  />
  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='eventoprazo'
  name='eventoprazo'
  value={handlers.windowFilter?.eventoprazo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EventoPrazo'
  label='EventoPrazo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='eventoprazo_end'
  name='eventoprazo_end'
  value={handlers.windowFilter?.eventoprazo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EventoPrazo final'
  label='EventoPrazo final'
  disabled={handlers.windowFilter?.eventoprazo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='compromisso'
  name='compromisso'
  value={handlers.windowFilter?.compromisso ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Compromisso'
  label='Compromisso'
  className='inputIncNome inputSearch'
  />
  <TipoCompromissoComboBox
  name='tipocompromisso'
  dataForm={null}
  value={handlers.windowFilter?.tipocompromisso}
  setValue={(e:any) => handlers.handleComboChange(e, 'tipocompromisso')}
  className='inputSearch inputSearchComboboxTab'
  label='Tipo Compromisso'
  />
  <ClientesComboBox
  name='cliente'
  dataForm={null}
  value={handlers.windowFilter?.cliente}
  setValue={(e:any) => handlers.handleComboChange(e, 'cliente')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <InputDate
  type='text'
  id='ddias'
  label='DDias (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='ddias'
  value={handlers.windowFilter?.ddias ?? ''}
  onChange={(value: string) => handlers.handleDateChange('ddias', value)}
  />
  <InputDate
  type='text'
  id='ddias_end'
  label='DDias (final)'
  dataForm={null}
  className='inputSearch'
  name='ddias_end'
  value={handlers.windowFilter?.ddias_end ?? ''}
  disabled={handlers.windowFilter?.ddias ? false: true}
  onChange={(value: string) => handlers.handleDateChange('ddias_end', value)}
  />
  <InputInput
  type='text'
  id='dias'
  name='dias'
  value={handlers.windowFilter?.dias ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Dias'
  label='Dias (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='dias_end'
  name='dias_end'
  value={handlers.windowFilter?.dias_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Dias final'
  label='Dias final'
  disabled={handlers.windowFilter?.dias ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='liberado'
  name='liberado'
  value={handlers.windowFilter?.liberado ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Liberado'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='importante'
  name='importante'
  value={handlers.windowFilter?.importante ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Importante'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='concluido'
  name='concluido'
  value={handlers.windowFilter?.concluido ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Concluido'
  className='inputSearch inputSearchCheckbox'
  />
  <AreaComboBox
  name='area'
  dataForm={null}
  value={handlers.windowFilter?.area}
  setValue={(e:any) => handlers.handleComboChange(e, 'area')}
  className='inputSearch inputSearchComboboxTab'
  label='Área'
  />
  <JusticaComboBox
  name='justica'
  dataForm={null}
  value={handlers.windowFilter?.justica}
  setValue={(e:any) => handlers.handleComboChange(e, 'justica')}
  className='inputSearch inputSearchComboboxTab'
  label='Justiça'
  />
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <InputInput
  type='text'
  id='idhistorico'
  name='idhistorico'
  value={handlers.windowFilter?.idhistorico ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHistorico'
  label='IDHistorico (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idhistorico_end'
  name='idhistorico_end'
  value={handlers.windowFilter?.idhistorico_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHistorico final'
  label='IDHistorico final'
  disabled={handlers.windowFilter?.idhistorico ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idinsprocesso'
  name='idinsprocesso'
  value={handlers.windowFilter?.idinsprocesso ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDInsProcesso'
  label='IDInsProcesso (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idinsprocesso_end'
  name='idinsprocesso_end'
  value={handlers.windowFilter?.idinsprocesso_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDInsProcesso final'
  label='IDInsProcesso final'
  disabled={handlers.windowFilter?.idinsprocesso ? false: true}
  className='inputIncNome inputSearch'
  />
  <OperadorComboBox
  name='usuario'
  dataForm={null}
  value={handlers.windowFilter?.usuario}
  setValue={(e:any) => handlers.handleComboChange(e, 'usuario')}
  className='inputSearch inputSearchComboboxTab'
  label='Operador'
  />
  <PrepostosComboBox
  name='preposto'
  dataForm={null}
  value={handlers.windowFilter?.preposto}
  setValue={(e:any) => handlers.handleComboChange(e, 'preposto')}
  className='inputSearch inputSearchComboboxTab'
  label='Prepostos'
  />
  <InputInput
  type='text'
  id='quemid'
  name='quemid'
  value={handlers.windowFilter?.quemid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemID'
  label='QuemID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemid_end'
  name='quemid_end'
  value={handlers.windowFilter?.quemid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemID final'
  label='QuemID final'
  disabled={handlers.windowFilter?.quemid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemcodigo'
  name='quemcodigo'
  value={handlers.windowFilter?.quemcodigo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemCodigo'
  label='QuemCodigo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemcodigo_end'
  name='quemcodigo_end'
  value={handlers.windowFilter?.quemcodigo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemCodigo final'
  label='QuemCodigo final'
  disabled={handlers.windowFilter?.quemcodigo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='status'
  name='status'
  value={handlers.windowFilter?.status ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Status'
  label='Status'
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valor'
  name='valor'
  value={handlers.windowFilter?.valor ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Valor (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valor_end'
  name='valor_end'
  value={handlers.windowFilter?.valor_end ?? 0}
  disabled={handlers.windowFilter?.valor != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Valor (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='compromissohtml'
  name='compromissohtml'
  value={handlers.windowFilter?.compromissohtml ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CompromissoHTML'
  label='CompromissoHTML'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='decisao'
  name='decisao'
  value={handlers.windowFilter?.decisao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Decisao'
  label='Decisao'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='revisar'
  name='revisar'
  value={handlers.windowFilter?.revisar ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Revisar'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='revisarp2'
  name='revisarp2'
  value={handlers.windowFilter?.revisarp2 ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='RevisarP2'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='sempre'
  name='sempre'
  value={handlers.windowFilter?.sempre ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Sempre'
  label='Sempre (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='sempre_end'
  name='sempre_end'
  value={handlers.windowFilter?.sempre_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Sempre final'
  label='Sempre final'
  disabled={handlers.windowFilter?.sempre ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='prazodias'
  name='prazodias'
  value={handlers.windowFilter?.prazodias ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe PrazoDias'
  label='PrazoDias (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='prazodias_end'
  name='prazodias_end'
  value={handlers.windowFilter?.prazodias_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe PrazoDias final'
  label='PrazoDias final'
  disabled={handlers.windowFilter?.prazodias ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='protocolointegrado'
  name='protocolointegrado'
  value={handlers.windowFilter?.protocolointegrado ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ProtocoloIntegrado'
  label='ProtocoloIntegrado (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='protocolointegrado_end'
  name='protocolointegrado_end'
  value={handlers.windowFilter?.protocolointegrado_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ProtocoloIntegrado final'
  label='ProtocoloIntegrado final'
  disabled={handlers.windowFilter?.protocolointegrado ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='datainicioprazo'
  label='DataInicioPrazo (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datainicioprazo'
  value={handlers.windowFilter?.datainicioprazo ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datainicioprazo', value)}
  />
  <InputDate
  type='text'
  id='datainicioprazo_end'
  label='DataInicioPrazo (final)'
  dataForm={null}
  className='inputSearch'
  name='datainicioprazo_end'
  value={handlers.windowFilter?.datainicioprazo_end ?? ''}
  disabled={handlers.windowFilter?.datainicioprazo ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datainicioprazo_end', value)}
  />
  <InputComboFilterYesNo
  type='text'
  id='usuariociente'
  name='usuariociente'
  value={handlers.windowFilter?.usuariociente ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='UsuarioCiente'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};