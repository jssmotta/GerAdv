// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ContratosService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterContratos filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Processo)}", filtro.Processo));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Cliente)}", filtro.Cliente));
        }

        if (filtro.Advogado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Advogado)}", filtro.Advogado));
        }

        if (filtro.Dia != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Dia)}", filtro.Dia));
        }

        if (filtro.Dia_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Dia)}_end", filtro.Dia_end));
        }

        if (filtro.Valor != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Valor)}", filtro.Valor));
        }

        if (filtro.Valor_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Valor)}_end", filtro.Valor_end));
        }

        if (!filtro.DataInicio.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataInicio, out var dataParam))
                parameters.Add(new($"@{nameof(DBContratosDicInfo.DataInicio)}", dataParam));
        }

        if (!filtro.DataInicio_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataInicio_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContratosDicInfo.DataInicio)}_end", dataParam));
        }

        if (!filtro.DataTermino.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataTermino, out var dataParam))
                parameters.Add(new($"@{nameof(DBContratosDicInfo.DataTermino)}", dataParam));
        }

        if (!filtro.DataTermino_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataTermino_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBContratosDicInfo.DataTermino)}_end", dataParam));
        }

        if (filtro.OcultarRelatorio != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.OcultarRelatorio)}", filtro.OcultarRelatorio));
        }

        if (filtro.PercEscritorio != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.PercEscritorio)}", filtro.PercEscritorio));
        }

        if (filtro.PercEscritorio_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.PercEscritorio)}_end", filtro.PercEscritorio_end));
        }

        if (filtro.ValorConsultoria != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ValorConsultoria)}", filtro.ValorConsultoria));
        }

        if (filtro.ValorConsultoria_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ValorConsultoria)}_end", filtro.ValorConsultoria_end));
        }

        if (filtro.TipoCobranca != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.TipoCobranca)}", filtro.TipoCobranca));
        }

        if (filtro.TipoCobranca_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.TipoCobranca)}_end", filtro.TipoCobranca_end));
        }

        if (!string.IsNullOrEmpty(filtro.Protestar))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Protestar)}", ApplyWildCard(filtro.WildcardChar, filtro.Protestar)));
        }

        if (!string.IsNullOrEmpty(filtro.Juros))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Juros)}", ApplyWildCard(filtro.WildcardChar, filtro.Juros)));
        }

        if (filtro.ValorRealizavel != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ValorRealizavel)}", filtro.ValorRealizavel));
        }

        if (filtro.ValorRealizavel_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ValorRealizavel)}_end", filtro.ValorRealizavel_end));
        }

        if (!string.IsNullOrEmpty(filtro.DOCUMENTO))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.DOCUMENTO)}", ApplyWildCard(filtro.WildcardChar, filtro.DOCUMENTO)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail1))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.EMail1)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail1)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail2))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.EMail2)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail2)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail3))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.EMail3)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail3)));
        }

        if (!string.IsNullOrEmpty(filtro.Pessoa1))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Pessoa1)}", ApplyWildCard(filtro.WildcardChar, filtro.Pessoa1)));
        }

        if (!string.IsNullOrEmpty(filtro.Pessoa2))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Pessoa2)}", ApplyWildCard(filtro.WildcardChar, filtro.Pessoa2)));
        }

        if (!string.IsNullOrEmpty(filtro.Pessoa3))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Pessoa3)}", ApplyWildCard(filtro.WildcardChar, filtro.Pessoa3)));
        }

        if (!string.IsNullOrEmpty(filtro.OBS))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.OBS)}", ApplyWildCard(filtro.WildcardChar, filtro.OBS)));
        }

        if (filtro.ClienteContrato != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ClienteContrato)}", filtro.ClienteContrato));
        }

        if (filtro.ClienteContrato_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ClienteContrato)}_end", filtro.ClienteContrato_end));
        }

        if (filtro.IdExtrangeiro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.IdExtrangeiro)}", filtro.IdExtrangeiro));
        }

        if (filtro.IdExtrangeiro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.IdExtrangeiro)}_end", filtro.IdExtrangeiro_end));
        }

        if (!string.IsNullOrEmpty(filtro.ChaveContrato))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.ChaveContrato)}", ApplyWildCard(filtro.WildcardChar, filtro.ChaveContrato)));
        }

        if (filtro.Avulso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Avulso)}", filtro.Avulso));
        }

        if (filtro.Suspenso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Suspenso)}", filtro.Suspenso));
        }

        if (!string.IsNullOrEmpty(filtro.Multa))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.Multa)}", ApplyWildCard(filtro.WildcardChar, filtro.Multa)));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBContratosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.Processo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Processo}] = @{nameof(DBContratosDicInfo.Processo)}");
        cWhere.Append(filtro.Cliente <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Cliente}] = @{nameof(DBContratosDicInfo.Cliente)}");
        cWhere.Append(filtro.Advogado <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Advogado}] = @{nameof(DBContratosDicInfo.Advogado)}");
        if (!filtro.Dia.IsEmpty() && filtro.Dia_end.IsEmpty())
        {
            cWhere.Append(filtro.Dia <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Dia}] >= @{nameof(DBContratosDicInfo.Dia)}");
        }
        else
        {
            cWhere.Append((filtro.Dia <= 0 && filtro.Dia_end <= 0) ? string.Empty : (!(filtro.Dia <= 0) && !(filtro.Dia_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Dia} BETWEEN @{nameof(DBContratosDicInfo.Dia)} AND @{nameof(DBContratosDicInfo.Dia)}_end" : !(filtro.Dia <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Dia} = @{nameof(DBContratosDicInfo.Dia)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Dia} <= @{nameof(DBContratosDicInfo.Dia)}_end");
        }

        if (!filtro.Valor.IsEmpty() && filtro.Valor_end.IsEmpty())
        {
            cWhere.Append(filtro.Valor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Valor}] >= @{nameof(DBContratosDicInfo.Valor)}");
        }
        else
        {
            cWhere.Append((filtro.Valor == decimal.MinValue && filtro.Valor_end == decimal.MinValue) ? string.Empty : (!(filtro.Valor == decimal.MinValue) && !(filtro.Valor_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Valor} BETWEEN @{nameof(DBContratosDicInfo.Valor)} AND @{nameof(DBContratosDicInfo.Valor)}_end" : !(filtro.Valor == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Valor} = @{nameof(DBContratosDicInfo.Valor)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.Valor} <= @{nameof(DBContratosDicInfo.Valor)}_end");
        }

        if (!filtro.DataInicio.IsEmpty() && filtro.DataInicio_end.IsEmpty())
        {
            cWhere.Append(filtro.DataInicio.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DataInicio}], 103) >= CONVERT(DATE, @{nameof(DBContratosDicInfo.DataInicio)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DataInicio.IsEmpty() && filtro.DataInicio_end.IsEmpty()) ? string.Empty : (!(filtro.DataInicio.IsEmpty()) && !(filtro.DataInicio_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataInicio} BETWEEN @{nameof(DBContratosDicInfo.DataInicio)} AND @{nameof(DBContratosDicInfo.DataInicio)}_end" : !(filtro.DataInicio.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataInicio} = @{nameof(DBContratosDicInfo.DataInicio)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataInicio} <= @{nameof(DBContratosDicInfo.DataInicio)}_end");
        }

        if (!filtro.DataTermino.IsEmpty() && filtro.DataTermino_end.IsEmpty())
        {
            cWhere.Append(filtro.DataTermino.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DataTermino}], 103) >= CONVERT(DATE, @{nameof(DBContratosDicInfo.DataTermino)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DataTermino.IsEmpty() && filtro.DataTermino_end.IsEmpty()) ? string.Empty : (!(filtro.DataTermino.IsEmpty()) && !(filtro.DataTermino_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataTermino} BETWEEN @{nameof(DBContratosDicInfo.DataTermino)} AND @{nameof(DBContratosDicInfo.DataTermino)}_end" : !(filtro.DataTermino.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataTermino} = @{nameof(DBContratosDicInfo.DataTermino)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.DataTermino} <= @{nameof(DBContratosDicInfo.DataTermino)}_end");
        }

        cWhere.Append(filtro.OcultarRelatorio == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.OcultarRelatorio}] = @{nameof(DBContratosDicInfo.OcultarRelatorio)}");
        if (!filtro.PercEscritorio.IsEmpty() && filtro.PercEscritorio_end.IsEmpty())
        {
            cWhere.Append(filtro.PercEscritorio == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.PercEscritorio}] >= @{nameof(DBContratosDicInfo.PercEscritorio)}");
        }
        else
        {
            cWhere.Append((filtro.PercEscritorio == decimal.MinValue && filtro.PercEscritorio_end == decimal.MinValue) ? string.Empty : (!(filtro.PercEscritorio == decimal.MinValue) && !(filtro.PercEscritorio_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.PercEscritorio} BETWEEN @{nameof(DBContratosDicInfo.PercEscritorio)} AND @{nameof(DBContratosDicInfo.PercEscritorio)}_end" : !(filtro.PercEscritorio == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.PercEscritorio} = @{nameof(DBContratosDicInfo.PercEscritorio)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.PercEscritorio} <= @{nameof(DBContratosDicInfo.PercEscritorio)}_end");
        }

        if (!filtro.ValorConsultoria.IsEmpty() && filtro.ValorConsultoria_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorConsultoria == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ValorConsultoria}] >= @{nameof(DBContratosDicInfo.ValorConsultoria)}");
        }
        else
        {
            cWhere.Append((filtro.ValorConsultoria == decimal.MinValue && filtro.ValorConsultoria_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorConsultoria == decimal.MinValue) && !(filtro.ValorConsultoria_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorConsultoria} BETWEEN @{nameof(DBContratosDicInfo.ValorConsultoria)} AND @{nameof(DBContratosDicInfo.ValorConsultoria)}_end" : !(filtro.ValorConsultoria == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorConsultoria} = @{nameof(DBContratosDicInfo.ValorConsultoria)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorConsultoria} <= @{nameof(DBContratosDicInfo.ValorConsultoria)}_end");
        }

        if (!filtro.TipoCobranca.IsEmpty() && filtro.TipoCobranca_end.IsEmpty())
        {
            cWhere.Append(filtro.TipoCobranca <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.TipoCobranca}] >= @{nameof(DBContratosDicInfo.TipoCobranca)}");
        }
        else
        {
            cWhere.Append((filtro.TipoCobranca <= 0 && filtro.TipoCobranca_end <= 0) ? string.Empty : (!(filtro.TipoCobranca <= 0) && !(filtro.TipoCobranca_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.TipoCobranca} BETWEEN @{nameof(DBContratosDicInfo.TipoCobranca)} AND @{nameof(DBContratosDicInfo.TipoCobranca)}_end" : !(filtro.TipoCobranca <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.TipoCobranca} = @{nameof(DBContratosDicInfo.TipoCobranca)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.TipoCobranca} <= @{nameof(DBContratosDicInfo.TipoCobranca)}_end");
        }

        cWhere.Append(filtro.Protestar.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Protestar}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Protestar)}");
        cWhere.Append(filtro.Juros.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Juros}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Juros)}");
        if (!filtro.ValorRealizavel.IsEmpty() && filtro.ValorRealizavel_end.IsEmpty())
        {
            cWhere.Append(filtro.ValorRealizavel == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ValorRealizavel}] >= @{nameof(DBContratosDicInfo.ValorRealizavel)}");
        }
        else
        {
            cWhere.Append((filtro.ValorRealizavel == decimal.MinValue && filtro.ValorRealizavel_end == decimal.MinValue) ? string.Empty : (!(filtro.ValorRealizavel == decimal.MinValue) && !(filtro.ValorRealizavel_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorRealizavel} BETWEEN @{nameof(DBContratosDicInfo.ValorRealizavel)} AND @{nameof(DBContratosDicInfo.ValorRealizavel)}_end" : !(filtro.ValorRealizavel == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorRealizavel} = @{nameof(DBContratosDicInfo.ValorRealizavel)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ValorRealizavel} <= @{nameof(DBContratosDicInfo.ValorRealizavel)}_end");
        }

        cWhere.Append(filtro.DOCUMENTO.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DOCUMENTO}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.DOCUMENTO)}");
        cWhere.Append(filtro.EMail1.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail1}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.EMail1)}");
        cWhere.Append(filtro.EMail2.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail2}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.EMail2)}");
        cWhere.Append(filtro.EMail3.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail3}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.EMail3)}");
        cWhere.Append(filtro.Pessoa1.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa1}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Pessoa1)}");
        cWhere.Append(filtro.Pessoa2.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa2}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Pessoa2)}");
        cWhere.Append(filtro.Pessoa3.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa3}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Pessoa3)}");
        cWhere.Append(filtro.OBS.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.OBS}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.OBS)}");
        if (!filtro.ClienteContrato.IsEmpty() && filtro.ClienteContrato_end.IsEmpty())
        {
            cWhere.Append(filtro.ClienteContrato <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ClienteContrato}] >= @{nameof(DBContratosDicInfo.ClienteContrato)}");
        }
        else
        {
            cWhere.Append((filtro.ClienteContrato <= 0 && filtro.ClienteContrato_end <= 0) ? string.Empty : (!(filtro.ClienteContrato <= 0) && !(filtro.ClienteContrato_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ClienteContrato} BETWEEN @{nameof(DBContratosDicInfo.ClienteContrato)} AND @{nameof(DBContratosDicInfo.ClienteContrato)}_end" : !(filtro.ClienteContrato <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ClienteContrato} = @{nameof(DBContratosDicInfo.ClienteContrato)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.ClienteContrato} <= @{nameof(DBContratosDicInfo.ClienteContrato)}_end");
        }

        if (!filtro.IdExtrangeiro.IsEmpty() && filtro.IdExtrangeiro_end.IsEmpty())
        {
            cWhere.Append(filtro.IdExtrangeiro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.IdExtrangeiro}] >= @{nameof(DBContratosDicInfo.IdExtrangeiro)}");
        }
        else
        {
            cWhere.Append((filtro.IdExtrangeiro <= 0 && filtro.IdExtrangeiro_end <= 0) ? string.Empty : (!(filtro.IdExtrangeiro <= 0) && !(filtro.IdExtrangeiro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.IdExtrangeiro} BETWEEN @{nameof(DBContratosDicInfo.IdExtrangeiro)} AND @{nameof(DBContratosDicInfo.IdExtrangeiro)}_end" : !(filtro.IdExtrangeiro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.IdExtrangeiro} = @{nameof(DBContratosDicInfo.IdExtrangeiro)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.IdExtrangeiro} <= @{nameof(DBContratosDicInfo.IdExtrangeiro)}_end");
        }

        cWhere.Append(filtro.ChaveContrato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ChaveContrato}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.ChaveContrato)}");
        cWhere.Append(filtro.Avulso == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Avulso}] = @{nameof(DBContratosDicInfo.Avulso)}");
        cWhere.Append(filtro.Suspenso == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Suspenso}] = @{nameof(DBContratosDicInfo.Suspenso)}");
        cWhere.Append(filtro.Multa.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Multa}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.Multa)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBContratosDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.CampoCodigo}] >= @{nameof(DBContratosDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.CampoCodigo} BETWEEN @{nameof(DBContratosDicInfo.CampoCodigo)} AND @{nameof(DBContratosDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.CampoCodigo} = @{nameof(DBContratosDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBContratosDicInfo.CampoCodigo} <= @{nameof(DBContratosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private async Task<IEnumerable<ContratosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}