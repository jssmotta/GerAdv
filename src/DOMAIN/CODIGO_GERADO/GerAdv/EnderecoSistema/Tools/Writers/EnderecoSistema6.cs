// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IEnderecoSistemaWriter
{
    Task<FEnderecoSistema> WriteAsync(Models.EnderecoSistema enderecosistema, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(EnderecoSistemaResponse enderecosistema, int operadorId, MsiSqlConnection oCnn);
}

public class EnderecoSistemaWriter(IFEnderecoSistemaFactory enderecosistemaFactory) : IEnderecoSistemaWriter
{
    private readonly IFEnderecoSistemaFactory _enderecosistemaFactory = enderecosistemaFactory ?? throw new ArgumentNullException(nameof(enderecosistemaFactory));
    public virtual async Task Delete(EnderecoSistemaResponse enderecosistema, int operadorId, MsiSqlConnection oCnn)
    {
        await _enderecosistemaFactory.DeleteAsync(operadorId, enderecosistema.Id, oCnn);
    }

    public virtual async Task<FEnderecoSistema> WriteAsync(Models.EnderecoSistema enderecosistema, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (enderecosistema.Id.IsEmptyIDNumber() ? _enderecosistemaFactory.CreateAsync() : _enderecosistemaFactory.CreateFromIdAsync(enderecosistema.Id, oCnn));
        dbRec.FCadastro = enderecosistema.Cadastro;
        dbRec.FCadastroExCod = enderecosistema.CadastroExCod;
        dbRec.FTipoEnderecoSistema = enderecosistema.TipoEnderecoSistema;
        dbRec.FGUID = enderecosistema.GUID;
        dbRec.FProcesso = enderecosistema.Processo;
        dbRec.FMotivo = enderecosistema.Motivo;
        dbRec.FContatoNoLocal = enderecosistema.ContatoNoLocal;
        dbRec.FCidade = enderecosistema.Cidade;
        dbRec.FEndereco = enderecosistema.Endereco;
        dbRec.FBairro = enderecosistema.Bairro;
        dbRec.FCEP = enderecosistema.CEP.ClearInputCep();
        dbRec.FFone = enderecosistema.Fone;
        dbRec.FFax = enderecosistema.Fax;
        dbRec.FObservacao = enderecosistema.Observacao;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}