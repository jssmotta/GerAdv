// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBBensMateriais
{
    public DBBensMateriais(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
    }

    public DBBensMateriais(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do BensMateriais: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.BensClassificacao)))
                m_FBensClassificacao = Convert.ToInt32(getValue(DBBensMateriaisDicInfo.BensClassificacao));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBBensMateriaisDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBBensMateriaisDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.DataCompra)))
                m_FDataCompra = Convert.ToDateTime(getValue(DBBensMateriaisDicInfo.DataCompra));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.DataFimDaGarantia)))
                m_FDataFimDaGarantia = Convert.ToDateTime(getValue(DBBensMateriaisDicInfo.DataFimDaGarantia));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.DataTerminoDaGarantiaDaLoja)))
                m_FDataTerminoDaGarantiaDaLoja = Convert.ToDateTime(getValue(DBBensMateriaisDicInfo.DataTerminoDaGarantiaDaLoja));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBBensMateriaisDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBBensMateriaisDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.Fornecedor)))
                m_FFornecedor = Convert.ToInt32(getValue(DBBensMateriaisDicInfo.Fornecedor));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.GarantiaLoja)))
                m_FGarantiaLoja = Convert.ToBoolean(getValue(DBBensMateriaisDicInfo.GarantiaLoja));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBBensMateriaisDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBBensMateriaisDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.ValorBem)))
                m_FValorBem = Convert.ToDecimal(getValue(DBBensMateriaisDicInfo.ValorBem));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBBensMateriaisDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBBensMateriaisDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FComprador = getValue(DBBensMateriaisDicInfo.Comprador)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBBensMateriaisDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNFNRO = getValue(DBBensMateriaisDicInfo.NFNRO)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBBensMateriaisDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNomeVendedor = getValue(DBBensMateriaisDicInfo.NomeVendedor)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNroSerieProduto = getValue(DBBensMateriaisDicInfo.NroSerieProduto)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacoes = getValue(DBBensMateriaisDicInfo.Observacoes)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do BensMateriais: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do BensMateriais: {ex.Message}", ex);
        }
    }
}