// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Wheres;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ILigacoesWhere
{
    LigacoesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn);
}

public partial class LigacoesWhere(IFLigacoesFactory ligacoesFactory) : ILigacoesWhere
{
    private readonly IFLigacoesFactory _ligacoesFactory = ligacoesFactory ?? throw new ArgumentNullException(nameof(ligacoesFactory));
    public LigacoesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn)
    {
        using var dbRec = _ligacoesFactory.CreateFromParameters(parameters, oCnn, sqlWhere: where);
        var ligacoes = new LigacoesResponse
        {
            Id = dbRec.ID,
            Assunto = dbRec.FAssunto ?? string.Empty,
            AgeClienteAvisado = dbRec.FAgeClienteAvisado,
            Celular = dbRec.FCelular,
            Cliente = dbRec.FCliente,
            Contato = dbRec.FContato ?? string.Empty,
            QuemID = dbRec.FQuemID,
            Telefonista = dbRec.FTelefonista,
            HoraFinal = dbRec.FHoraFinal ?? string.Empty,
            Nome = dbRec.FNome ?? string.Empty,
            QuemCodigo = dbRec.FQuemCodigo,
            Solicitante = dbRec.FSolicitante,
            Para = dbRec.FPara ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Ramal = dbRec.FRamal,
            Particular = dbRec.FParticular,
            Realizada = dbRec.FRealizada,
            Status = dbRec.FStatus ?? string.Empty,
            Data = dbRec.FData ?? string.Empty,
            Hora = dbRec.FHora ?? string.Empty,
            Urgente = dbRec.FUrgente,
            GUID = dbRec.FGUID ?? string.Empty,
            LigarPara = dbRec.FLigarPara ?? string.Empty,
            Processo = dbRec.FProcesso,
            StartScreen = dbRec.FStartScreen,
            Emotion = dbRec.FEmotion,
        };
        if (DateTime.TryParse(dbRec.FDataRealizada, out DateTime XDataRealizada))
        {
            ligacoes.DataRealizada = dbRec.FDataRealizada;
            ligacoes.DataRealizada_date = XDataRealizada;
        }

        if (DateTime.TryParse(dbRec.FUltimoAviso, out DateTime XUltimoAviso))
        {
            ligacoes.UltimoAviso = dbRec.FUltimoAviso;
            ligacoes.UltimoAviso_date = XUltimoAviso;
        }

        return ligacoes;
    }
}