// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IContatoCRMOperadorWriter
{
    Task<FContatoCRMOperador> WriteAsync(Models.ContatoCRMOperador contatocrmoperador, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ContatoCRMOperadorResponse contatocrmoperador, int operadorId, MsiSqlConnection oCnn);
}

public class ContatoCRMOperadorWriter(IFContatoCRMOperadorFactory contatocrmoperadorFactory) : IContatoCRMOperadorWriter
{
    private readonly IFContatoCRMOperadorFactory _contatocrmoperadorFactory = contatocrmoperadorFactory;
    public async Task Delete(ContatoCRMOperadorResponse contatocrmoperador, int operadorId, MsiSqlConnection oCnn)
    {
        await _contatocrmoperadorFactory.DeleteAsync(operadorId, contatocrmoperador.Id, oCnn);
    }

    public async Task<FContatoCRMOperador> WriteAsync(Models.ContatoCRMOperador contatocrmoperador, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (contatocrmoperador.Id.IsEmptyIDNumber() ? _contatocrmoperadorFactory.CreateAsync() : _contatocrmoperadorFactory.CreateFromIdAsync(contatocrmoperador.Id, oCnn));
        dbRec.FContatoCRM = contatocrmoperador.ContatoCRM;
        dbRec.FCargoEsc = contatocrmoperador.CargoEsc;
        dbRec.FOperador = contatocrmoperador.Operador;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}