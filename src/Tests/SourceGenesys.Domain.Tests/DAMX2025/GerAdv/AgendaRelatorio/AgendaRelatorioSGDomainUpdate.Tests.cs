// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// ============================================
// ARQUIVO: DBUpdateTests.cs.txt (Principal)
// ============================================
namespace MenphisSI.GerAdv.Tests;
public class DBAgendaRelatorioUpdate : IDisposable
{
    private readonly DBAgendaRelatorio _instance;
    private readonly Mock<MsiSqlConnection> _mockConnection;
    public DBAgendaRelatorioUpdate()
    {
        _instance = new DBAgendaRelatorio();
        _mockConnection = new Mock<MsiSqlConnection>();
    }

    [Fact]
    public void DefaultConstructor_ShouldCreateInstance_WithDefaultValues()
    {
        // Act
        var agendarelatorio = new DBAgendaRelatorio();
        // Assert
        agendarelatorio.Should().NotBeNull();
        agendarelatorio.ITabelaName().Should().Be("AgendaRelatorio");
        agendarelatorio.ID.Should().Be(0);
    }

    [Fact]
    public void AllProperties_WithValidValues_ShouldSetCorrectly()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            FxxxParaNome = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxParaPessoas = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxBoxAudiencia = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxBoxAudienciaMobile = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxNomeAdvogado = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxNomeForo = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxNomeJustica = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            FxxxNomeArea = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        };
        // Assert - All properties should be set agendarelatorio.FxxxParaNome.Should().Be( "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxParaPessoas.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxBoxAudiencia.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxBoxAudienciaMobile.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxNomeAdvogado.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxNomeForo.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxNomeJustica.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
        agendarelatorio.FxxxNomeArea.Should().Be("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
    }

    [Fact]
    public void StringProperties_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longString = new string ('X', 300);
        agendarelatorio.FxxxParaNome = longString; // MAX: 60
        agendarelatorio.FxxxNomeAdvogado = longString; // MAX: 50
        agendarelatorio.FxxxNomeForo = longString; // MAX: 40
        agendarelatorio.FxxxNomeJustica = longString; // MAX: 50
        agendarelatorio.FxxxNomeArea = longString; // MAX: 40
        // Assert - All properties should be set agendarelatorio.FxxxParaNome.Should().HaveLength(60);
        agendarelatorio.FxxxNomeAdvogado.Should().HaveLength(50);
        agendarelatorio.FxxxNomeForo.Should().HaveLength(40);
        agendarelatorio.FxxxNomeJustica.Should().HaveLength(50);
        agendarelatorio.FxxxNomeArea.Should().HaveLength(40);
    }

    [Theory]
    [InlineData("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")]
    [InlineData("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB")]
    [InlineData("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc")]
    public void FxxxParaNome_Property_ShouldAcceptValidNames(string xxxParaNome)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxParaNome = xxxParaNome
        };
        // Assert
        agendarelatorio.FxxxParaNome.Should().Be(xxxParaNome);
    }

    [Fact]
    public void FxxxParaNome_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxParaNome = null
        };
        // Assert
        agendarelatorio.FxxxParaNome.Should().Be(string.Empty);
    }

    [Fact]
    public void FxxxParaNome_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longName = new string ('A', 60 + 10); // Exceeds 60 character limit
        // Act
        agendarelatorio.FxxxParaNome = longName;
        // Assert
        agendarelatorio.FxxxParaNome.Should().HaveLength(60);
    }

    [Theory]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMc")]
    public void FxxxParaPessoas_Property_ShouldAcceptValidNames(string xxxParaPessoas)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxParaPessoas = xxxParaPessoas
        };
        // Assert
        agendarelatorio.FxxxParaPessoas.Should().Be(xxxParaPessoas);
    }

    [Fact]
    public void FxxxParaPessoas_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxParaPessoas = null
        };
        // Assert
        agendarelatorio.FxxxParaPessoas.Should().Be(string.Empty);
    }

    [Theory]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMc")]
    public void FxxxBoxAudiencia_Property_ShouldAcceptValidNames(string xxxBoxAudiencia)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxBoxAudiencia = xxxBoxAudiencia
        };
        // Assert
        agendarelatorio.FxxxBoxAudiencia.Should().Be(xxxBoxAudiencia);
    }

    [Fact]
    public void FxxxBoxAudiencia_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxBoxAudiencia = null
        };
        // Assert
        agendarelatorio.FxxxBoxAudiencia.Should().Be(string.Empty);
    }

    [Theory]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM")]
    [InlineData("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMc")]
    public void FxxxBoxAudienciaMobile_Property_ShouldAcceptValidNames(string xxxBoxAudienciaMobile)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxBoxAudienciaMobile = xxxBoxAudienciaMobile
        };
        // Assert
        agendarelatorio.FxxxBoxAudienciaMobile.Should().Be(xxxBoxAudienciaMobile);
    }

    [Fact]
    public void FxxxBoxAudienciaMobile_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxBoxAudienciaMobile = null
        };
        // Assert
        agendarelatorio.FxxxBoxAudienciaMobile.Should().Be(string.Empty);
    }

    [Theory]
    [InlineData("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")]
    [InlineData("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB")]
    [InlineData("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc")]
    public void FxxxNomeAdvogado_Property_ShouldAcceptValidNames(string xxxNomeAdvogado)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeAdvogado = xxxNomeAdvogado
        };
        // Assert
        agendarelatorio.FxxxNomeAdvogado.Should().Be(xxxNomeAdvogado);
    }

    [Fact]
    public void FxxxNomeAdvogado_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeAdvogado = null
        };
        // Assert
        agendarelatorio.FxxxNomeAdvogado.Should().Be(string.Empty);
    }

    [Fact]
    public void FxxxNomeAdvogado_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longName = new string ('A', 50 + 10); // Exceeds 50 character limit
        // Act
        agendarelatorio.FxxxNomeAdvogado = longName;
        // Assert
        agendarelatorio.FxxxNomeAdvogado.Should().HaveLength(50);
    }

    [Theory]
    [InlineData("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")]
    [InlineData("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB")]
    [InlineData("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc")]
    public void FxxxNomeForo_Property_ShouldAcceptValidNames(string xxxNomeForo)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeForo = xxxNomeForo
        };
        // Assert
        agendarelatorio.FxxxNomeForo.Should().Be(xxxNomeForo);
    }

    [Fact]
    public void FxxxNomeForo_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeForo = null
        };
        // Assert
        agendarelatorio.FxxxNomeForo.Should().Be(string.Empty);
    }

    [Fact]
    public void FxxxNomeForo_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longName = new string ('A', 40 + 10); // Exceeds 40 character limit
        // Act
        agendarelatorio.FxxxNomeForo = longName;
        // Assert
        agendarelatorio.FxxxNomeForo.Should().HaveLength(40);
    }

    [Theory]
    [InlineData("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")]
    [InlineData("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB")]
    [InlineData("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc")]
    public void FxxxNomeJustica_Property_ShouldAcceptValidNames(string xxxNomeJustica)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeJustica = xxxNomeJustica
        };
        // Assert
        agendarelatorio.FxxxNomeJustica.Should().Be(xxxNomeJustica);
    }

    [Fact]
    public void FxxxNomeJustica_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeJustica = null
        };
        // Assert
        agendarelatorio.FxxxNomeJustica.Should().Be(string.Empty);
    }

    [Fact]
    public void FxxxNomeJustica_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longName = new string ('A', 50 + 10); // Exceeds 50 character limit
        // Act
        agendarelatorio.FxxxNomeJustica = longName;
        // Assert
        agendarelatorio.FxxxNomeJustica.Should().HaveLength(50);
    }

    [Theory]
    [InlineData("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")]
    [InlineData("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB")]
    [InlineData("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc")]
    public void FxxxNomeArea_Property_ShouldAcceptValidNames(string xxxNomeArea)
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeArea = xxxNomeArea
        };
        // Assert
        agendarelatorio.FxxxNomeArea.Should().Be(xxxNomeArea);
    }

    [Fact]
    public void FxxxNomeArea_WithNullValue_ShouldReturnEmptyString()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio
        {
            // Act
            FxxxNomeArea = null
        };
        // Assert
        agendarelatorio.FxxxNomeArea.Should().Be(string.Empty);
    }

    [Fact]
    public void FxxxNomeArea_WithExcessiveLength_ShouldTruncateToMaxLength()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        var longName = new string ('A', 40 + 10); // Exceeds 40 character limit
        // Act
        agendarelatorio.FxxxNomeArea = longName;
        // Assert
        agendarelatorio.FxxxNomeArea.Should().HaveLength(40);
    }

    [Fact]
    public void TabelaNome_Property_ShouldReturnCorrectTableName()
    {
        // Arrange
        var agendarelatorio = new DBAgendaRelatorio();
        // Act & Assert
        agendarelatorio.TabelaNome.Should().Be("AgendaRelatorio");
    }

    public virtual void Dispose()
    {
    // Cleanup resources if needed
    }
}