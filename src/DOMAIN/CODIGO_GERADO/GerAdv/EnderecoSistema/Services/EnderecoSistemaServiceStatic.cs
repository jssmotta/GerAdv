// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class EnderecoSistemaService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterEnderecoSistema? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Cadastro != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Cadastro)}", filtro.Cadastro));
            if (filtro.Cadastro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Cadastro)}_end", filtro.Cadastro_end));
            }
        }

        if (filtro.CadastroExCod != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.CadastroExCod)}", filtro.CadastroExCod));
            if (filtro.CadastroExCod_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.CadastroExCod)}_end", filtro.CadastroExCod_end));
            }
        }

        if (filtro.TipoEnderecoSistema != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.TipoEnderecoSistema)}", filtro.TipoEnderecoSistema));
            if (filtro.TipoEnderecoSistema_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.TipoEnderecoSistema)}_end", filtro.TipoEnderecoSistema_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Processo)}", filtro.Processo));
            if (filtro.Processo_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Processo)}_end", filtro.Processo_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Motivo))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Motivo)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Motivo)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.ContatoNoLocal))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.ContatoNoLocal)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.ContatoNoLocal)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Endereco))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Endereco)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Bairro))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Bairro)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CEP))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.CEP)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fone))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Fone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fax))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Fax)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Observacao))
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.Observacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBEnderecoSistemaDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Cadastro.IsEmptyX()) && filtro.Cadastro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cadastro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Cadastro}] = @{(DBEnderecoSistemaDicInfo.Cadastro)}");
        }
        else if (!(filtro.Cadastro.IsEmptyX()) && !(filtro.Cadastro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.Cadastro} BETWEEN @{(DBEnderecoSistemaDicInfo.Cadastro)} AND @{(DBEnderecoSistemaDicInfo.Cadastro)}_end");
        }

        if (!(filtro.CadastroExCod.IsEmptyX()) && filtro.CadastroExCod_end.IsEmptyX())
        {
            cWhere.Append(filtro.CadastroExCod.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.CadastroExCod}] = @{(DBEnderecoSistemaDicInfo.CadastroExCod)}");
        }
        else if (!(filtro.CadastroExCod.IsEmptyX()) && !(filtro.CadastroExCod_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.CadastroExCod} BETWEEN @{(DBEnderecoSistemaDicInfo.CadastroExCod)} AND @{(DBEnderecoSistemaDicInfo.CadastroExCod)}_end");
        }

        if (!(filtro.TipoEnderecoSistema.IsEmptyX()) && filtro.TipoEnderecoSistema_end.IsEmptyX())
        {
            cWhere.Append(filtro.TipoEnderecoSistema.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.TipoEnderecoSistema}] = @{(DBEnderecoSistemaDicInfo.TipoEnderecoSistema)}");
        }
        else if (!(filtro.TipoEnderecoSistema.IsEmptyX()) && !(filtro.TipoEnderecoSistema_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.TipoEnderecoSistema} BETWEEN @{(DBEnderecoSistemaDicInfo.TipoEnderecoSistema)} AND @{(DBEnderecoSistemaDicInfo.TipoEnderecoSistema)}_end");
        }

        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.GUID)}");
        if (!(filtro.Processo.IsEmptyX()) && filtro.Processo_end.IsEmptyX())
        {
            cWhere.Append(filtro.Processo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Processo}] = @{(DBEnderecoSistemaDicInfo.Processo)}");
        }
        else if (!(filtro.Processo.IsEmptyX()) && !(filtro.Processo_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.Processo} BETWEEN @{(DBEnderecoSistemaDicInfo.Processo)} AND @{(DBEnderecoSistemaDicInfo.Processo)}_end");
        }

        cWhere.Append(filtro.Motivo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Motivo}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Motivo)}");
        cWhere.Append(filtro.ContatoNoLocal.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.ContatoNoLocal}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.ContatoNoLocal)}");
        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Cidade}] = @{(DBEnderecoSistemaDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.Cidade} BETWEEN @{(DBEnderecoSistemaDicInfo.Cidade)} AND @{(DBEnderecoSistemaDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Bairro)}");
        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.CEP)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Fone)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Fax)}");
        cWhere.Append(filtro.Observacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{(DBEnderecoSistemaDicInfo.Observacao)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].[{DBEnderecoSistemaDicInfo.CampoCodigo}] = @{(DBEnderecoSistemaDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBEnderecoSistemaDicInfo.PTabelaNome}].{DBEnderecoSistemaDicInfo.CampoCodigo} BETWEEN @{(DBEnderecoSistemaDicInfo.CampoCodigo)} AND @{(DBEnderecoSistemaDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterEnderecoSistema? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    private async Task<IEnumerable<EnderecoSistemaResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}