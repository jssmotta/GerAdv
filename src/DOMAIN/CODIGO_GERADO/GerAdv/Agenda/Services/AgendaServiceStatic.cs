// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class AgendaService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterAgenda filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.IDCOB != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDCOB)}", filtro.IDCOB));
        }

        if (filtro.IDCOB_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDCOB)}_end", filtro.IDCOB_end));
        }

        if (filtro.ClienteAvisado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.ClienteAvisado)}", filtro.ClienteAvisado));
        }

        if (filtro.RevisarP2 != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.RevisarP2)}", filtro.RevisarP2));
        }

        if (filtro.IDNE != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDNE)}", filtro.IDNE));
        }

        if (filtro.IDNE_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDNE)}_end", filtro.IDNE_end));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Cidade)}", filtro.Cidade));
        }

        if (filtro.Oculto != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Oculto)}", filtro.Oculto));
        }

        if (filtro.Oculto_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Oculto)}_end", filtro.Oculto_end));
        }

        if (filtro.CartaPrecatoria != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.CartaPrecatoria)}", filtro.CartaPrecatoria));
        }

        if (filtro.CartaPrecatoria_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.CartaPrecatoria)}_end", filtro.CartaPrecatoria_end));
        }

        if (filtro.Revisar != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Revisar)}", filtro.Revisar));
        }

        if (filtro.Advogado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Advogado)}", filtro.Advogado));
        }

        if (filtro.EventoGerador != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoGerador)}", filtro.EventoGerador));
        }

        if (filtro.EventoGerador_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoGerador)}_end", filtro.EventoGerador_end));
        }

        if (!filtro.EventoData.IsEmpty())
        {
            if (DateTime.TryParse(filtro.EventoData, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoData)}", dataParam));
        }

        if (!filtro.EventoData_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.EventoData_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoData)}_end", dataParam));
        }

        if (filtro.Funcionario != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Funcionario)}", filtro.Funcionario));
        }

        if (!string.IsNullOrEmpty(filtro.Data))
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Data)}", ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (filtro.EventoPrazo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoPrazo)}", filtro.EventoPrazo));
        }

        if (filtro.EventoPrazo_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.EventoPrazo)}_end", filtro.EventoPrazo_end));
        }

        if (!string.IsNullOrEmpty(filtro.Compromisso))
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Compromisso)}", ApplyWildCard(filtro.WildcardChar, filtro.Compromisso)));
        }

        if (filtro.TipoCompromisso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.TipoCompromisso)}", filtro.TipoCompromisso));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Cliente)}", filtro.Cliente));
        }

        if (filtro.Liberado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Liberado)}", filtro.Liberado));
        }

        if (filtro.Importante != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Importante)}", filtro.Importante));
        }

        if (filtro.Concluido != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Concluido)}", filtro.Concluido));
        }

        if (filtro.Area != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Area)}", filtro.Area));
        }

        if (filtro.Justica != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Justica)}", filtro.Justica));
        }

        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Processo)}", filtro.Processo));
        }

        if (filtro.Processo_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Processo)}_end", filtro.Processo_end));
        }

        if (filtro.IDHistorico != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDHistorico)}", filtro.IDHistorico));
        }

        if (filtro.IDHistorico_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDHistorico)}_end", filtro.IDHistorico_end));
        }

        if (filtro.IDInsProcesso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDInsProcesso)}", filtro.IDInsProcesso));
        }

        if (filtro.IDInsProcesso_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.IDInsProcesso)}_end", filtro.IDInsProcesso_end));
        }

        if (filtro.Usuario != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Usuario)}", filtro.Usuario));
        }

        if (filtro.Preposto != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Preposto)}", filtro.Preposto));
        }

        if (filtro.QuemID != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.QuemID)}", filtro.QuemID));
        }

        if (filtro.QuemID_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.QuemID)}_end", filtro.QuemID_end));
        }

        if (filtro.QuemCodigo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.QuemCodigo)}", filtro.QuemCodigo));
        }

        if (filtro.QuemCodigo_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.QuemCodigo)}_end", filtro.QuemCodigo_end));
        }

        if (!string.IsNullOrEmpty(filtro.Status))
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Status)}", ApplyWildCard(filtro.WildcardChar, filtro.Status)));
        }

        if (filtro.Valor != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Valor)}", filtro.Valor));
        }

        if (filtro.Valor_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Valor)}_end", filtro.Valor_end));
        }

        if (!string.IsNullOrEmpty(filtro.Decisao))
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Decisao)}", ApplyWildCard(filtro.WildcardChar, filtro.Decisao)));
        }

        if (filtro.Sempre != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Sempre)}", filtro.Sempre));
        }

        if (filtro.Sempre_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.Sempre)}_end", filtro.Sempre_end));
        }

        if (filtro.PrazoDias != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.PrazoDias)}", filtro.PrazoDias));
        }

        if (filtro.PrazoDias_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.PrazoDias)}_end", filtro.PrazoDias_end));
        }

        if (filtro.ProtocoloIntegrado != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}", filtro.ProtocoloIntegrado));
        }

        if (filtro.ProtocoloIntegrado_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}_end", filtro.ProtocoloIntegrado_end));
        }

        if (!filtro.DataInicioPrazo.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataInicioPrazo, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaDicInfo.DataInicioPrazo)}", dataParam));
        }

        if (!filtro.DataInicioPrazo_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DataInicioPrazo_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaDicInfo.DataInicioPrazo)}_end", dataParam));
        }

        if (filtro.UsuarioCiente != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.UsuarioCiente)}", filtro.UsuarioCiente));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.IDCOB.IsEmpty() && filtro.IDCOB_end.IsEmpty())
        {
            cWhere.Append(filtro.IDCOB <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.IDCOB}] >= @{nameof(DBAgendaDicInfo.IDCOB)}");
        }
        else
        {
            cWhere.Append((filtro.IDCOB <= 0 && filtro.IDCOB_end <= 0) ? string.Empty : (!(filtro.IDCOB <= 0) && !(filtro.IDCOB_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDCOB} BETWEEN @{nameof(DBAgendaDicInfo.IDCOB)} AND @{nameof(DBAgendaDicInfo.IDCOB)}_end" : !(filtro.IDCOB <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDCOB} = @{nameof(DBAgendaDicInfo.IDCOB)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDCOB} <= @{nameof(DBAgendaDicInfo.IDCOB)}_end");
        }

        cWhere.Append(filtro.ClienteAvisado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.ClienteAvisado}] = @{nameof(DBAgendaDicInfo.ClienteAvisado)}");
        cWhere.Append(filtro.RevisarP2 == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.RevisarP2}] = @{nameof(DBAgendaDicInfo.RevisarP2)}");
        if (!filtro.IDNE.IsEmpty() && filtro.IDNE_end.IsEmpty())
        {
            cWhere.Append(filtro.IDNE <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.IDNE}] >= @{nameof(DBAgendaDicInfo.IDNE)}");
        }
        else
        {
            cWhere.Append((filtro.IDNE <= 0 && filtro.IDNE_end <= 0) ? string.Empty : (!(filtro.IDNE <= 0) && !(filtro.IDNE_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDNE} BETWEEN @{nameof(DBAgendaDicInfo.IDNE)} AND @{nameof(DBAgendaDicInfo.IDNE)}_end" : !(filtro.IDNE <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDNE} = @{nameof(DBAgendaDicInfo.IDNE)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDNE} <= @{nameof(DBAgendaDicInfo.IDNE)}_end");
        }

        cWhere.Append(filtro.Cidade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Cidade}] = @{nameof(DBAgendaDicInfo.Cidade)}");
        if (!filtro.Oculto.IsEmpty() && filtro.Oculto_end.IsEmpty())
        {
            cWhere.Append(filtro.Oculto <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Oculto}] >= @{nameof(DBAgendaDicInfo.Oculto)}");
        }
        else
        {
            cWhere.Append((filtro.Oculto <= 0 && filtro.Oculto_end <= 0) ? string.Empty : (!(filtro.Oculto <= 0) && !(filtro.Oculto_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Oculto} BETWEEN @{nameof(DBAgendaDicInfo.Oculto)} AND @{nameof(DBAgendaDicInfo.Oculto)}_end" : !(filtro.Oculto <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Oculto} = @{nameof(DBAgendaDicInfo.Oculto)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Oculto} <= @{nameof(DBAgendaDicInfo.Oculto)}_end");
        }

        if (!filtro.CartaPrecatoria.IsEmpty() && filtro.CartaPrecatoria_end.IsEmpty())
        {
            cWhere.Append(filtro.CartaPrecatoria <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.CartaPrecatoria}] >= @{nameof(DBAgendaDicInfo.CartaPrecatoria)}");
        }
        else
        {
            cWhere.Append((filtro.CartaPrecatoria <= 0 && filtro.CartaPrecatoria_end <= 0) ? string.Empty : (!(filtro.CartaPrecatoria <= 0) && !(filtro.CartaPrecatoria_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CartaPrecatoria} BETWEEN @{nameof(DBAgendaDicInfo.CartaPrecatoria)} AND @{nameof(DBAgendaDicInfo.CartaPrecatoria)}_end" : !(filtro.CartaPrecatoria <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CartaPrecatoria} = @{nameof(DBAgendaDicInfo.CartaPrecatoria)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CartaPrecatoria} <= @{nameof(DBAgendaDicInfo.CartaPrecatoria)}_end");
        }

        cWhere.Append(filtro.Revisar == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Revisar}] = @{nameof(DBAgendaDicInfo.Revisar)}");
        cWhere.Append(filtro.Advogado <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Advogado}] = @{nameof(DBAgendaDicInfo.Advogado)}");
        if (!filtro.EventoGerador.IsEmpty() && filtro.EventoGerador_end.IsEmpty())
        {
            cWhere.Append(filtro.EventoGerador <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.EventoGerador}] >= @{nameof(DBAgendaDicInfo.EventoGerador)}");
        }
        else
        {
            cWhere.Append((filtro.EventoGerador <= 0 && filtro.EventoGerador_end <= 0) ? string.Empty : (!(filtro.EventoGerador <= 0) && !(filtro.EventoGerador_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoGerador} BETWEEN @{nameof(DBAgendaDicInfo.EventoGerador)} AND @{nameof(DBAgendaDicInfo.EventoGerador)}_end" : !(filtro.EventoGerador <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoGerador} = @{nameof(DBAgendaDicInfo.EventoGerador)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoGerador} <= @{nameof(DBAgendaDicInfo.EventoGerador)}_end");
        }

        if (!filtro.EventoData.IsEmpty() && filtro.EventoData_end.IsEmpty())
        {
            cWhere.Append(filtro.EventoData.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.EventoData}], 103) >= CONVERT(DATE, @{nameof(DBAgendaDicInfo.EventoData)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.EventoData.IsEmpty() && filtro.EventoData_end.IsEmpty()) ? string.Empty : (!(filtro.EventoData.IsEmpty()) && !(filtro.EventoData_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoData} BETWEEN @{nameof(DBAgendaDicInfo.EventoData)} AND @{nameof(DBAgendaDicInfo.EventoData)}_end" : !(filtro.EventoData.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoData} = @{nameof(DBAgendaDicInfo.EventoData)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoData} <= @{nameof(DBAgendaDicInfo.EventoData)}_end");
        }

        cWhere.Append(filtro.Funcionario <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Funcionario}] = @{nameof(DBAgendaDicInfo.Funcionario)}");
        cWhere.Append(filtro.Data.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaDicInfo.Data)}");
        if (!filtro.EventoPrazo.IsEmpty() && filtro.EventoPrazo_end.IsEmpty())
        {
            cWhere.Append(filtro.EventoPrazo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.EventoPrazo}] >= @{nameof(DBAgendaDicInfo.EventoPrazo)}");
        }
        else
        {
            cWhere.Append((filtro.EventoPrazo <= 0 && filtro.EventoPrazo_end <= 0) ? string.Empty : (!(filtro.EventoPrazo <= 0) && !(filtro.EventoPrazo_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoPrazo} BETWEEN @{nameof(DBAgendaDicInfo.EventoPrazo)} AND @{nameof(DBAgendaDicInfo.EventoPrazo)}_end" : !(filtro.EventoPrazo <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoPrazo} = @{nameof(DBAgendaDicInfo.EventoPrazo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.EventoPrazo} <= @{nameof(DBAgendaDicInfo.EventoPrazo)}_end");
        }

        cWhere.Append(filtro.Compromisso.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Compromisso}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaDicInfo.Compromisso)}");
        cWhere.Append(filtro.TipoCompromisso <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.TipoCompromisso}] = @{nameof(DBAgendaDicInfo.TipoCompromisso)}");
        cWhere.Append(filtro.Cliente <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Cliente}] = @{nameof(DBAgendaDicInfo.Cliente)}");
        cWhere.Append(filtro.Liberado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Liberado}] = @{nameof(DBAgendaDicInfo.Liberado)}");
        cWhere.Append(filtro.Importante == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Importante}] = @{nameof(DBAgendaDicInfo.Importante)}");
        cWhere.Append(filtro.Concluido == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Concluido}] = @{nameof(DBAgendaDicInfo.Concluido)}");
        cWhere.Append(filtro.Area <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Area}] = @{nameof(DBAgendaDicInfo.Area)}");
        cWhere.Append(filtro.Justica <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Justica}] = @{nameof(DBAgendaDicInfo.Justica)}");
        if (!filtro.Processo.IsEmpty() && filtro.Processo_end.IsEmpty())
        {
            cWhere.Append(filtro.Processo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Processo}] >= @{nameof(DBAgendaDicInfo.Processo)}");
        }
        else
        {
            cWhere.Append((filtro.Processo <= 0 && filtro.Processo_end <= 0) ? string.Empty : (!(filtro.Processo <= 0) && !(filtro.Processo_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Processo} BETWEEN @{nameof(DBAgendaDicInfo.Processo)} AND @{nameof(DBAgendaDicInfo.Processo)}_end" : !(filtro.Processo <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Processo} = @{nameof(DBAgendaDicInfo.Processo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Processo} <= @{nameof(DBAgendaDicInfo.Processo)}_end");
        }

        if (!filtro.IDHistorico.IsEmpty() && filtro.IDHistorico_end.IsEmpty())
        {
            cWhere.Append(filtro.IDHistorico <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.IDHistorico}] >= @{nameof(DBAgendaDicInfo.IDHistorico)}");
        }
        else
        {
            cWhere.Append((filtro.IDHistorico <= 0 && filtro.IDHistorico_end <= 0) ? string.Empty : (!(filtro.IDHistorico <= 0) && !(filtro.IDHistorico_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDHistorico} BETWEEN @{nameof(DBAgendaDicInfo.IDHistorico)} AND @{nameof(DBAgendaDicInfo.IDHistorico)}_end" : !(filtro.IDHistorico <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDHistorico} = @{nameof(DBAgendaDicInfo.IDHistorico)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDHistorico} <= @{nameof(DBAgendaDicInfo.IDHistorico)}_end");
        }

        if (!filtro.IDInsProcesso.IsEmpty() && filtro.IDInsProcesso_end.IsEmpty())
        {
            cWhere.Append(filtro.IDInsProcesso <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.IDInsProcesso}] >= @{nameof(DBAgendaDicInfo.IDInsProcesso)}");
        }
        else
        {
            cWhere.Append((filtro.IDInsProcesso <= 0 && filtro.IDInsProcesso_end <= 0) ? string.Empty : (!(filtro.IDInsProcesso <= 0) && !(filtro.IDInsProcesso_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDInsProcesso} BETWEEN @{nameof(DBAgendaDicInfo.IDInsProcesso)} AND @{nameof(DBAgendaDicInfo.IDInsProcesso)}_end" : !(filtro.IDInsProcesso <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDInsProcesso} = @{nameof(DBAgendaDicInfo.IDInsProcesso)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.IDInsProcesso} <= @{nameof(DBAgendaDicInfo.IDInsProcesso)}_end");
        }

        cWhere.Append(filtro.Usuario <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Usuario}] = @{nameof(DBAgendaDicInfo.Usuario)}");
        cWhere.Append(filtro.Preposto <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Preposto}] = @{nameof(DBAgendaDicInfo.Preposto)}");
        if (!filtro.QuemID.IsEmpty() && filtro.QuemID_end.IsEmpty())
        {
            cWhere.Append(filtro.QuemID <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.QuemID}] >= @{nameof(DBAgendaDicInfo.QuemID)}");
        }
        else
        {
            cWhere.Append((filtro.QuemID <= 0 && filtro.QuemID_end <= 0) ? string.Empty : (!(filtro.QuemID <= 0) && !(filtro.QuemID_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemID} BETWEEN @{nameof(DBAgendaDicInfo.QuemID)} AND @{nameof(DBAgendaDicInfo.QuemID)}_end" : !(filtro.QuemID <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemID} = @{nameof(DBAgendaDicInfo.QuemID)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemID} <= @{nameof(DBAgendaDicInfo.QuemID)}_end");
        }

        if (!filtro.QuemCodigo.IsEmpty() && filtro.QuemCodigo_end.IsEmpty())
        {
            cWhere.Append(filtro.QuemCodigo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.QuemCodigo}] >= @{nameof(DBAgendaDicInfo.QuemCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.QuemCodigo <= 0 && filtro.QuemCodigo_end <= 0) ? string.Empty : (!(filtro.QuemCodigo <= 0) && !(filtro.QuemCodigo_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemCodigo} BETWEEN @{nameof(DBAgendaDicInfo.QuemCodigo)} AND @{nameof(DBAgendaDicInfo.QuemCodigo)}_end" : !(filtro.QuemCodigo <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemCodigo} = @{nameof(DBAgendaDicInfo.QuemCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.QuemCodigo} <= @{nameof(DBAgendaDicInfo.QuemCodigo)}_end");
        }

        cWhere.Append(filtro.Status.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Status}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaDicInfo.Status)}");
        if (!filtro.Valor.IsEmpty() && filtro.Valor_end.IsEmpty())
        {
            cWhere.Append(filtro.Valor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Valor}] >= @{nameof(DBAgendaDicInfo.Valor)}");
        }
        else
        {
            cWhere.Append((filtro.Valor == decimal.MinValue && filtro.Valor_end == decimal.MinValue) ? string.Empty : (!(filtro.Valor == decimal.MinValue) && !(filtro.Valor_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Valor} BETWEEN @{nameof(DBAgendaDicInfo.Valor)} AND @{nameof(DBAgendaDicInfo.Valor)}_end" : !(filtro.Valor == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Valor} = @{nameof(DBAgendaDicInfo.Valor)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Valor} <= @{nameof(DBAgendaDicInfo.Valor)}_end");
        }

        cWhere.Append(filtro.Decisao.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Decisao}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaDicInfo.Decisao)}");
        if (!filtro.Sempre.IsEmpty() && filtro.Sempre_end.IsEmpty())
        {
            cWhere.Append(filtro.Sempre <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.Sempre}] >= @{nameof(DBAgendaDicInfo.Sempre)}");
        }
        else
        {
            cWhere.Append((filtro.Sempre <= 0 && filtro.Sempre_end <= 0) ? string.Empty : (!(filtro.Sempre <= 0) && !(filtro.Sempre_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Sempre} BETWEEN @{nameof(DBAgendaDicInfo.Sempre)} AND @{nameof(DBAgendaDicInfo.Sempre)}_end" : !(filtro.Sempre <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Sempre} = @{nameof(DBAgendaDicInfo.Sempre)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.Sempre} <= @{nameof(DBAgendaDicInfo.Sempre)}_end");
        }

        if (!filtro.PrazoDias.IsEmpty() && filtro.PrazoDias_end.IsEmpty())
        {
            cWhere.Append(filtro.PrazoDias <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.PrazoDias}] >= @{nameof(DBAgendaDicInfo.PrazoDias)}");
        }
        else
        {
            cWhere.Append((filtro.PrazoDias <= 0 && filtro.PrazoDias_end <= 0) ? string.Empty : (!(filtro.PrazoDias <= 0) && !(filtro.PrazoDias_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.PrazoDias} BETWEEN @{nameof(DBAgendaDicInfo.PrazoDias)} AND @{nameof(DBAgendaDicInfo.PrazoDias)}_end" : !(filtro.PrazoDias <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.PrazoDias} = @{nameof(DBAgendaDicInfo.PrazoDias)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.PrazoDias} <= @{nameof(DBAgendaDicInfo.PrazoDias)}_end");
        }

        if (!filtro.ProtocoloIntegrado.IsEmpty() && filtro.ProtocoloIntegrado_end.IsEmpty())
        {
            cWhere.Append(filtro.ProtocoloIntegrado <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.ProtocoloIntegrado}] >= @{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}");
        }
        else
        {
            cWhere.Append((filtro.ProtocoloIntegrado <= 0 && filtro.ProtocoloIntegrado_end <= 0) ? string.Empty : (!(filtro.ProtocoloIntegrado <= 0) && !(filtro.ProtocoloIntegrado_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.ProtocoloIntegrado} BETWEEN @{nameof(DBAgendaDicInfo.ProtocoloIntegrado)} AND @{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}_end" : !(filtro.ProtocoloIntegrado <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.ProtocoloIntegrado} = @{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.ProtocoloIntegrado} <= @{nameof(DBAgendaDicInfo.ProtocoloIntegrado)}_end");
        }

        if (!filtro.DataInicioPrazo.IsEmpty() && filtro.DataInicioPrazo_end.IsEmpty())
        {
            cWhere.Append(filtro.DataInicioPrazo.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.DataInicioPrazo}], 103) >= CONVERT(DATE, @{nameof(DBAgendaDicInfo.DataInicioPrazo)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DataInicioPrazo.IsEmpty() && filtro.DataInicioPrazo_end.IsEmpty()) ? string.Empty : (!(filtro.DataInicioPrazo.IsEmpty()) && !(filtro.DataInicioPrazo_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.DataInicioPrazo} BETWEEN @{nameof(DBAgendaDicInfo.DataInicioPrazo)} AND @{nameof(DBAgendaDicInfo.DataInicioPrazo)}_end" : !(filtro.DataInicioPrazo.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.DataInicioPrazo} = @{nameof(DBAgendaDicInfo.DataInicioPrazo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.DataInicioPrazo} <= @{nameof(DBAgendaDicInfo.DataInicioPrazo)}_end");
        }

        cWhere.Append(filtro.UsuarioCiente == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.UsuarioCiente}] = @{nameof(DBAgendaDicInfo.UsuarioCiente)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaDicInfo.PTabelaNome}].[{DBAgendaDicInfo.CampoCodigo}] >= @{nameof(DBAgendaDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CampoCodigo} BETWEEN @{nameof(DBAgendaDicInfo.CampoCodigo)} AND @{nameof(DBAgendaDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CampoCodigo} = @{nameof(DBAgendaDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaDicInfo.CampoCodigo} <= @{nameof(DBAgendaDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterAgenda? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(uri, "", [], oCnn);
        var cacheKey = $"{uri}-Agenda-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBAgendaDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<AgendaResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}