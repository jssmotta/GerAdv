// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBEnderecos
{
    public DBEnderecos(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
    }

    public DBEnderecos(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Enderecos: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.AddContato)))
                m_FAddContato = Convert.ToBoolean(getValue(DBEnderecosDicInfo.AddContato));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBEnderecosDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBEnderecosDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBEnderecosDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBEnderecosDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBEnderecosDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBEnderecosDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBEnderecosDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Privativo)))
                m_FPrivativo = Convert.ToBoolean(getValue(DBEnderecosDicInfo.Privativo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Quem)))
                m_FQuem = Convert.ToInt32(getValue(DBEnderecosDicInfo.Quem));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBEnderecosDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBEnderecosDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.ReportECBOnly)))
                m_FReportECBOnly = Convert.ToBoolean(getValue(DBEnderecosDicInfo.ReportECBOnly));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.TopIndex)))
                m_FTopIndex = Convert.ToBoolean(getValue(DBEnderecosDicInfo.TopIndex));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBEnderecosDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBEnderecosDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBEnderecosDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBEnderecosDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FContato = getValue(DBEnderecosDicInfo.Contato)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FDescricao = getValue(DBEnderecosDicInfo.Descricao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBEnderecosDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBEnderecosDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBEnderecosDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBEnderecosDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBEnderecosDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FOAB = getValue(DBEnderecosDicInfo.OAB)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FOBS = getValue(DBEnderecosDicInfo.OBS)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FQuemIndicou = getValue(DBEnderecosDicInfo.QuemIndicou)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSite = getValue(DBEnderecosDicInfo.Site)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FTratamento = getValue(DBEnderecosDicInfo.Tratamento)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Enderecos: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Enderecos: {ex.Message}", ex);
        }
    }
}