// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IOperadorGrupoWriter
{
    Task<FOperadorGrupo> WriteAsync(Models.OperadorGrupo operadorgrupo, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(OperadorGrupoResponse operadorgrupo, int operadorId, MsiSqlConnection oCnn);
}

public class OperadorGrupoWriter(IFOperadorGrupoFactory operadorgrupoFactory) : IOperadorGrupoWriter
{
    private readonly IFOperadorGrupoFactory _operadorgrupoFactory = operadorgrupoFactory;
    public async Task Delete(OperadorGrupoResponse operadorgrupo, int operadorId, MsiSqlConnection oCnn)
    {
        await _operadorgrupoFactory.DeleteAsync(operadorId, operadorgrupo.Id, oCnn);
    }

    public async Task<FOperadorGrupo> WriteAsync(Models.OperadorGrupo operadorgrupo, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (operadorgrupo.Id.IsEmptyIDNumber() ? _operadorgrupoFactory.CreateAsync() : _operadorgrupoFactory.CreateFromIdAsync(operadorgrupo.Id, oCnn));
        dbRec.FOperador = operadorgrupo.Operador;
        dbRec.FGrupo = operadorgrupo.Grupo;
        dbRec.FInativo = operadorgrupo.Inativo;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}