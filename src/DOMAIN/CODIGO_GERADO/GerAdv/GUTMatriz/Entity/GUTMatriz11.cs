// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.GerAdv.Factory;
public partial class FGUTMatrizFactory : IFGUTMatrizFactory, IDisposable
{
    private bool _disposed = false;
    public FGUTMatriz Create()
    {
        ThrowIfDisposed();
        return new FGUTMatriz();
    }

    public FGUTMatriz CreateFromReader(SqlDataReader? dbRec)
    {
        ThrowIfDisposed();
        return FGUTMatriz.CreateFromReader(dbRec);
    }

    public FGUTMatriz CreateFromDataRow(DataRow? dbRec)
    {
        ThrowIfDisposed();
        return FGUTMatriz.CreateFromDataRow(dbRec);
    }

    public async Task<FGUTMatriz> CreateFromIdAsync(int id, MsiSqlConnection oCnn)
    {
        ThrowIfDisposed();
        return await new FGUTMatriz().CreateFromIdAsync(id, oCnn);
    }

    public async Task<FGUTMatriz> CreateAsync()
    {
        ThrowIfDisposed();
        await Task.Delay(1);
        return new FGUTMatriz();
    }

    public FGUTMatriz CreateFromParameters(List<SqlParameter> parameters, MsiSqlConnection oCnn, in string? cNome = "", string? fullSql = "", string sqlWhere = "", in string join = "")
    {
        ThrowIfDisposed();
        return FGUTMatriz.CreateFromParameters(parameters, oCnn, cNome, fullSql, sqlWhere, join);
    }

    public Task DeleteAsync(int operadorId, int id, MsiSqlConnection oCnn)
    {
        ThrowIfDisposed();
        return FGUTMatriz.DeleteRecordAsync(operadorId, id, oCnn);
    }

    private void ThrowIfDisposed()
    {
        if (_disposed)
            throw new ObjectDisposedException(nameof(FGUTMatrizFactory));
    }

    public void Dispose()
    {
        _disposed = true;
        GC.SuppressFinalize(this);
    }
}