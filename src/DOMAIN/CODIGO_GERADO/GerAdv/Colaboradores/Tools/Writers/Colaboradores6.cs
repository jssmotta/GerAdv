// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IColaboradoresWriter
{
    Task<FColaboradores> WriteAsync(Models.Colaboradores colaboradores, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(ColaboradoresResponse colaboradores, int operadorId, MsiSqlConnection? oCnn);
}

public class ColaboradoresWriter(IFColaboradoresFactory colaboradoresFactory) : IColaboradoresWriter
{
    private readonly IFColaboradoresFactory _colaboradoresFactory = colaboradoresFactory ?? throw new ArgumentNullException(nameof(colaboradoresFactory));
    public virtual async Task Delete(ColaboradoresResponse colaboradores, int operadorId, MsiSqlConnection? oCnn)
    {
        await _colaboradoresFactory.DeleteAsync(operadorId, colaboradores.Id, oCnn);
    }

    public virtual async Task<FColaboradores> WriteAsync(Models.Colaboradores colaboradores, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (colaboradores.Id.IsEmptyIDNumber() ? _colaboradoresFactory.CreateAsync() : _colaboradoresFactory.CreateFromIdAsync(colaboradores.Id, oCnn));
        dbRec.FCargo = colaboradores.Cargo;
        dbRec.FCliente = colaboradores.Cliente;
        dbRec.FSexo = colaboradores.Sexo;
        dbRec.FNome = colaboradores.Nome;
        dbRec.FCPF = colaboradores.CPF.ClearInputCpf();
        dbRec.FRG = colaboradores.RG;
        if (colaboradores.DtNasc != null)
            dbRec.FDtNasc = colaboradores.DtNasc.ToString();
        dbRec.FIdade = colaboradores.Idade;
        dbRec.FEndereco = colaboradores.Endereco;
        dbRec.FBairro = colaboradores.Bairro;
        dbRec.FCEP = colaboradores.CEP.ClearInputCep();
        dbRec.FCidade = colaboradores.Cidade;
        dbRec.FFone = colaboradores.Fone;
        dbRec.FObservacao = colaboradores.Observacao;
        dbRec.FEMail = colaboradores.EMail;
        dbRec.FCNH = colaboradores.CNH;
        dbRec.FClass = colaboradores.Class;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}