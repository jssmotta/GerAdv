// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProObservacoesWriter
{
    Task<FProObservacoes> WriteAsync(Models.ProObservacoes proobservacoes, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProObservacoesResponse proobservacoes, int operadorId, MsiSqlConnection oCnn);
}

public class ProObservacoesWriter(IFProObservacoesFactory proobservacoesFactory) : IProObservacoesWriter
{
    private readonly IFProObservacoesFactory _proobservacoesFactory = proobservacoesFactory;
    public async Task Delete(ProObservacoesResponse proobservacoes, int operadorId, MsiSqlConnection oCnn)
    {
        await _proobservacoesFactory.DeleteAsync(operadorId, proobservacoes.Id, oCnn);
    }

    public async Task<FProObservacoes> WriteAsync(Models.ProObservacoes proobservacoes, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (proobservacoes.Id.IsEmptyIDNumber() ? _proobservacoesFactory.CreateAsync() : _proobservacoesFactory.CreateFromIdAsync(proobservacoes.Id, oCnn));
        dbRec.FProcesso = proobservacoes.Processo;
        dbRec.FNome = proobservacoes.Nome;
        dbRec.FObservacoes = proobservacoes.Observacoes;
        dbRec.FData = proobservacoes.Data;
        dbRec.FGUID = proobservacoes.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}