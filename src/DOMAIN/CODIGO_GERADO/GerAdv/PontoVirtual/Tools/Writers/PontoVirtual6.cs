// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPontoVirtualWriter
{
    Task<FPontoVirtual> WriteAsync(Models.PontoVirtual pontovirtual, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(PontoVirtualResponse pontovirtual, int operadorId, MsiSqlConnection oCnn);
}

public class PontoVirtualWriter(IFPontoVirtualFactory pontovirtualFactory) : IPontoVirtualWriter
{
    private readonly IFPontoVirtualFactory _pontovirtualFactory = pontovirtualFactory ?? throw new ArgumentNullException(nameof(pontovirtualFactory));
    public virtual async Task Delete(PontoVirtualResponse pontovirtual, int operadorId, MsiSqlConnection oCnn)
    {
        await _pontovirtualFactory.DeleteAsync(operadorId, pontovirtual.Id, oCnn);
    }

    public virtual async Task<FPontoVirtual> WriteAsync(Models.PontoVirtual pontovirtual, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (pontovirtual.Id.IsEmptyIDNumber() ? _pontovirtualFactory.CreateAsync() : _pontovirtualFactory.CreateFromIdAsync(pontovirtual.Id, oCnn));
        if (pontovirtual.HoraEntrada != null)
            dbRec.FHoraEntrada = pontovirtual.HoraEntrada.ToString();
        if (pontovirtual.HoraSaida != null)
            dbRec.FHoraSaida = pontovirtual.HoraSaida.ToString();
        dbRec.FOperador = pontovirtual.Operador;
        dbRec.FKey = pontovirtual.Key;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}