// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAndamentosMDWriter
{
    Task<FAndamentosMD> WriteAsync(Models.AndamentosMD andamentosmd, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(AndamentosMDResponse andamentosmd, int operadorId, MsiSqlConnection oCnn);
}

public class AndamentosMDWriter(IFAndamentosMDFactory andamentosmdFactory) : IAndamentosMDWriter
{
    private readonly IFAndamentosMDFactory _andamentosmdFactory = andamentosmdFactory ?? throw new ArgumentNullException(nameof(andamentosmdFactory));
    public virtual async Task Delete(AndamentosMDResponse andamentosmd, int operadorId, MsiSqlConnection oCnn)
    {
        await _andamentosmdFactory.DeleteAsync(operadorId, andamentosmd.Id, oCnn);
    }

    public virtual async Task<FAndamentosMD> WriteAsync(Models.AndamentosMD andamentosmd, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (andamentosmd.Id.IsEmptyIDNumber() ? _andamentosmdFactory.CreateAsync() : _andamentosmdFactory.CreateFromIdAsync(andamentosmd.Id, oCnn));
        dbRec.FGUID = andamentosmd.GUID;
        dbRec.FNome = andamentosmd.Nome;
        dbRec.FProcesso = andamentosmd.Processo;
        dbRec.FAndamento = andamentosmd.Andamento;
        dbRec.FPathFull = andamentosmd.PathFull;
        dbRec.FUNC = andamentosmd.UNC;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}