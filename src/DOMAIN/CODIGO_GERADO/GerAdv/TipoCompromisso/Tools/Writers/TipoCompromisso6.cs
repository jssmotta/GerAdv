// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITipoCompromissoWriter
{
    Task<FTipoCompromisso> WriteAsync(Models.TipoCompromisso tipocompromisso, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(TipoCompromissoResponse tipocompromisso, int operadorId, MsiSqlConnection? oCnn);
}

public class TipoCompromissoWriter(IFTipoCompromissoFactory tipocompromissoFactory) : ITipoCompromissoWriter
{
    private readonly IFTipoCompromissoFactory _tipocompromissoFactory = tipocompromissoFactory ?? throw new ArgumentNullException(nameof(tipocompromissoFactory));
    public virtual async Task Delete(TipoCompromissoResponse tipocompromisso, int operadorId, MsiSqlConnection? oCnn)
    {
        await _tipocompromissoFactory.DeleteAsync(operadorId, tipocompromisso.Id, oCnn);
    }

    public virtual async Task<FTipoCompromisso> WriteAsync(Models.TipoCompromisso tipocompromisso, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (tipocompromisso.Id.IsEmptyIDNumber() ? _tipocompromissoFactory.CreateAsync() : _tipocompromissoFactory.CreateFromIdAsync(tipocompromisso.Id, oCnn));
        dbRec.FGUID = tipocompromisso.GUID;
        dbRec.FIcone = tipocompromisso.Icone;
        dbRec.FDescricao = tipocompromisso.Descricao;
        dbRec.FFinanceiro = tipocompromisso.Financeiro;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}