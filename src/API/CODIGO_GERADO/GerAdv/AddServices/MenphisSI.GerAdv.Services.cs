using MenphisSI.GerAdv.Services;

#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public static class AddServices
{
    public static void Add(WebApplicationBuilder builder)
    {
        builder.Services.AddSingleton<IAcaoService, AcaoService>();
        builder.Services.AddSingleton<AcaoService>();
        builder.Services.AddSingleton<IAdvogadosService, AdvogadosService>();
        builder.Services.AddSingleton<AdvogadosService>();
        builder.Services.AddSingleton<IAgendaService, AgendaService>();
        builder.Services.AddSingleton<AgendaService>();
        builder.Services.AddSingleton<IAgenda2AgendaService, Agenda2AgendaService>();
        builder.Services.AddSingleton<Agenda2AgendaService>();
        builder.Services.AddSingleton<IAgendaFinanceiroService, AgendaFinanceiroService>();
        builder.Services.AddSingleton<AgendaFinanceiroService>();
        builder.Services.AddSingleton<IAgendaQuemService, AgendaQuemService>();
        builder.Services.AddSingleton<AgendaQuemService>();
        builder.Services.AddSingleton<IAgendaRecordsService, AgendaRecordsService>();
        builder.Services.AddSingleton<AgendaRecordsService>();
        builder.Services.AddSingleton<IAgendaRepetirService, AgendaRepetirService>();
        builder.Services.AddSingleton<AgendaRepetirService>();
        builder.Services.AddSingleton<IAgendaRepetirDiasService, AgendaRepetirDiasService>();
        builder.Services.AddSingleton<AgendaRepetirDiasService>();
        builder.Services.AddSingleton<IAgendaStatusService, AgendaStatusService>();
        builder.Services.AddSingleton<AgendaStatusService>();
        builder.Services.AddSingleton<IAlarmSMSService, AlarmSMSService>();
        builder.Services.AddSingleton<AlarmSMSService>();
        builder.Services.AddSingleton<IAlertasService, AlertasService>();
        builder.Services.AddSingleton<AlertasService>();
        builder.Services.AddSingleton<IAlertasEnviadosService, AlertasEnviadosService>();
        builder.Services.AddSingleton<AlertasEnviadosService>();
        builder.Services.AddSingleton<IAndamentosMDService, AndamentosMDService>();
        builder.Services.AddSingleton<AndamentosMDService>();
        builder.Services.AddSingleton<IAndCompService, AndCompService>();
        builder.Services.AddSingleton<AndCompService>();
        builder.Services.AddSingleton<IAnexamentoRegistrosService, AnexamentoRegistrosService>();
        builder.Services.AddSingleton<AnexamentoRegistrosService>();
        builder.Services.AddSingleton<IApensoService, ApensoService>();
        builder.Services.AddSingleton<ApensoService>();
        builder.Services.AddSingleton<IApenso2Service, Apenso2Service>();
        builder.Services.AddSingleton<Apenso2Service>();
        builder.Services.AddSingleton<IAreaService, AreaService>();
        builder.Services.AddSingleton<AreaService>();
        builder.Services.AddSingleton<IAreasJusticaService, AreasJusticaService>();
        builder.Services.AddSingleton<AreasJusticaService>();
        builder.Services.AddSingleton<IAtividadesService, AtividadesService>();
        builder.Services.AddSingleton<AtividadesService>();
        builder.Services.AddSingleton<IAuditor4KService, Auditor4KService>();
        builder.Services.AddSingleton<Auditor4KService>();
        builder.Services.AddSingleton<IBensClassificacaoService, BensClassificacaoService>();
        builder.Services.AddSingleton<BensClassificacaoService>();
        builder.Services.AddSingleton<IBensMateriaisService, BensMateriaisService>();
        builder.Services.AddSingleton<BensMateriaisService>();
        builder.Services.AddSingleton<ICargosService, CargosService>();
        builder.Services.AddSingleton<CargosService>();
        builder.Services.AddSingleton<ICargosEscService, CargosEscService>();
        builder.Services.AddSingleton<CargosEscService>();
        builder.Services.AddSingleton<ICargosEscClassService, CargosEscClassService>();
        builder.Services.AddSingleton<CargosEscClassService>();
        builder.Services.AddSingleton<ICidadeService, CidadeService>();
        builder.Services.AddSingleton<CidadeService>();
        builder.Services.AddSingleton<IClientesService, ClientesService>();
        builder.Services.AddSingleton<ClientesService>();
        builder.Services.AddSingleton<IClientesSociosService, ClientesSociosService>();
        builder.Services.AddSingleton<ClientesSociosService>();
        builder.Services.AddSingleton<IColaboradoresService, ColaboradoresService>();
        builder.Services.AddSingleton<ColaboradoresService>();
        builder.Services.AddSingleton<IContaCorrenteService, ContaCorrenteService>();
        builder.Services.AddSingleton<ContaCorrenteService>();
        builder.Services.AddSingleton<IContatoCRMService, ContatoCRMService>();
        builder.Services.AddSingleton<ContatoCRMService>();
        builder.Services.AddSingleton<IContatoCRMOperadorService, ContatoCRMOperadorService>();
        builder.Services.AddSingleton<ContatoCRMOperadorService>();
        builder.Services.AddSingleton<IContatoCRMViewService, ContatoCRMViewService>();
        builder.Services.AddSingleton<ContatoCRMViewService>();
        builder.Services.AddSingleton<IContratosService, ContratosService>();
        builder.Services.AddSingleton<ContratosService>();
        builder.Services.AddSingleton<IDadosProcuracaoService, DadosProcuracaoService>();
        builder.Services.AddSingleton<DadosProcuracaoService>();
        builder.Services.AddSingleton<IDiario2Service, Diario2Service>();
        builder.Services.AddSingleton<Diario2Service>();
        builder.Services.AddSingleton<IDivisaoTribunalService, DivisaoTribunalService>();
        builder.Services.AddSingleton<DivisaoTribunalService>();
        builder.Services.AddSingleton<IDocsRecebidosItensService, DocsRecebidosItensService>();
        builder.Services.AddSingleton<DocsRecebidosItensService>();
        builder.Services.AddSingleton<IDocumentosService, DocumentosService>();
        builder.Services.AddSingleton<DocumentosService>();
        builder.Services.AddSingleton<IEMPClassRiscosService, EMPClassRiscosService>();
        builder.Services.AddSingleton<EMPClassRiscosService>();
        builder.Services.AddSingleton<IEnderecosService, EnderecosService>();
        builder.Services.AddSingleton<EnderecosService>();
        builder.Services.AddSingleton<IEnderecoSistemaService, EnderecoSistemaService>();
        builder.Services.AddSingleton<EnderecoSistemaService>();
        builder.Services.AddSingleton<IEndTitService, EndTitService>();
        builder.Services.AddSingleton<EndTitService>();
        builder.Services.AddSingleton<IEnquadramentoEmpresaService, EnquadramentoEmpresaService>();
        builder.Services.AddSingleton<EnquadramentoEmpresaService>();
        builder.Services.AddSingleton<IEscritoriosService, EscritoriosService>();
        builder.Services.AddSingleton<EscritoriosService>();
        builder.Services.AddSingleton<IEventoPrazoAgendaService, EventoPrazoAgendaService>();
        builder.Services.AddSingleton<EventoPrazoAgendaService>();
        builder.Services.AddSingleton<IFaseService, FaseService>();
        builder.Services.AddSingleton<FaseService>();
        builder.Services.AddSingleton<IFornecedoresService, FornecedoresService>();
        builder.Services.AddSingleton<FornecedoresService>();
        builder.Services.AddSingleton<IForoService, ForoService>();
        builder.Services.AddSingleton<ForoService>();
        builder.Services.AddSingleton<IFuncaoService, FuncaoService>();
        builder.Services.AddSingleton<FuncaoService>();
        builder.Services.AddSingleton<IFuncionariosService, FuncionariosService>();
        builder.Services.AddSingleton<FuncionariosService>();
        builder.Services.AddSingleton<IGraphService, GraphService>();
        builder.Services.AddSingleton<GraphService>();
        builder.Services.AddSingleton<IGruposEmpresasService, GruposEmpresasService>();
        builder.Services.AddSingleton<GruposEmpresasService>();
        builder.Services.AddSingleton<IGruposEmpresasCliService, GruposEmpresasCliService>();
        builder.Services.AddSingleton<GruposEmpresasCliService>();
        builder.Services.AddSingleton<IGUTAtividadesService, GUTAtividadesService>();
        builder.Services.AddSingleton<GUTAtividadesService>();
        builder.Services.AddSingleton<IGUTAtividadesMatrizService, GUTAtividadesMatrizService>();
        builder.Services.AddSingleton<GUTAtividadesMatrizService>();
        builder.Services.AddSingleton<IGUTMatrizService, GUTMatrizService>();
        builder.Services.AddSingleton<GUTMatrizService>();
        builder.Services.AddSingleton<IGUTPeriodicidadeService, GUTPeriodicidadeService>();
        builder.Services.AddSingleton<GUTPeriodicidadeService>();
        builder.Services.AddSingleton<IGUTPeriodicidadeStatusService, GUTPeriodicidadeStatusService>();
        builder.Services.AddSingleton<GUTPeriodicidadeStatusService>();
        builder.Services.AddSingleton<IGUTTipoService, GUTTipoService>();
        builder.Services.AddSingleton<GUTTipoService>();
        builder.Services.AddSingleton<IHistoricoService, HistoricoService>();
        builder.Services.AddSingleton<HistoricoService>();
        builder.Services.AddSingleton<IHonorariosDadosContratoService, HonorariosDadosContratoService>();
        builder.Services.AddSingleton<HonorariosDadosContratoService>();
        builder.Services.AddSingleton<IHorasTrabService, HorasTrabService>();
        builder.Services.AddSingleton<HorasTrabService>();
        builder.Services.AddSingleton<IInstanciaService, InstanciaService>();
        builder.Services.AddSingleton<InstanciaService>();
        builder.Services.AddSingleton<IJusticaService, JusticaService>();
        builder.Services.AddSingleton<JusticaService>();
        builder.Services.AddSingleton<ILigacoesService, LigacoesService>();
        builder.Services.AddSingleton<LigacoesService>();
        builder.Services.AddSingleton<ILivroCaixaService, LivroCaixaService>();
        builder.Services.AddSingleton<LivroCaixaService>();
        builder.Services.AddSingleton<ILivroCaixaClientesService, LivroCaixaClientesService>();
        builder.Services.AddSingleton<LivroCaixaClientesService>();
        builder.Services.AddSingleton<IModelosDocumentosService, ModelosDocumentosService>();
        builder.Services.AddSingleton<ModelosDocumentosService>();
        builder.Services.AddSingleton<INECompromissosService, NECompromissosService>();
        builder.Services.AddSingleton<NECompromissosService>();
        builder.Services.AddSingleton<INENotasService, NENotasService>();
        builder.Services.AddSingleton<NENotasService>();
        builder.Services.AddSingleton<INEPalavrasChavesService, NEPalavrasChavesService>();
        builder.Services.AddSingleton<NEPalavrasChavesService>();
        builder.Services.AddSingleton<IObjetosService, ObjetosService>();
        builder.Services.AddSingleton<ObjetosService>();
        builder.Services.AddSingleton<IOperadorService, OperadorService>();
        builder.Services.AddSingleton<OperadorService>();
        builder.Services.AddSingleton<IOperadorEMailPopupService, OperadorEMailPopupService>();
        builder.Services.AddSingleton<OperadorEMailPopupService>();
        builder.Services.AddSingleton<IOperadoresService, OperadoresService>();
        builder.Services.AddSingleton<OperadoresService>();
        builder.Services.AddSingleton<IOperadorGrupoService, OperadorGrupoService>();
        builder.Services.AddSingleton<OperadorGrupoService>();
        builder.Services.AddSingleton<IOperadorGruposService, OperadorGruposService>();
        builder.Services.AddSingleton<OperadorGruposService>();
        builder.Services.AddSingleton<IOperadorGruposAgendaService, OperadorGruposAgendaService>();
        builder.Services.AddSingleton<OperadorGruposAgendaService>();
        builder.Services.AddSingleton<IOperadorGruposAgendaOperadoresService, OperadorGruposAgendaOperadoresService>();
        builder.Services.AddSingleton<OperadorGruposAgendaOperadoresService>();
        builder.Services.AddSingleton<IOponentesService, OponentesService>();
        builder.Services.AddSingleton<OponentesService>();
        builder.Services.AddSingleton<IOponentesRepLegalService, OponentesRepLegalService>();
        builder.Services.AddSingleton<OponentesRepLegalService>();
        builder.Services.AddSingleton<IOutrasPartesClienteService, OutrasPartesClienteService>();
        builder.Services.AddSingleton<OutrasPartesClienteService>();
        builder.Services.AddSingleton<IPaisesService, PaisesService>();
        builder.Services.AddSingleton<PaisesService>();
        builder.Services.AddSingleton<IParceriaProcService, ParceriaProcService>();
        builder.Services.AddSingleton<ParceriaProcService>();
        builder.Services.AddSingleton<IParteClienteOutrasService, ParteClienteOutrasService>();
        builder.Services.AddSingleton<ParteClienteOutrasService>();
        builder.Services.AddSingleton<IPenhoraService, PenhoraService>();
        builder.Services.AddSingleton<PenhoraService>();
        builder.Services.AddSingleton<IPenhoraStatusService, PenhoraStatusService>();
        builder.Services.AddSingleton<PenhoraStatusService>();
        builder.Services.AddSingleton<IPoderJudiciarioAssociadoService, PoderJudiciarioAssociadoService>();
        builder.Services.AddSingleton<PoderJudiciarioAssociadoService>();
        builder.Services.AddSingleton<IPontoVirtualService, PontoVirtualService>();
        builder.Services.AddSingleton<PontoVirtualService>();
        builder.Services.AddSingleton<IPontoVirtualAcessosService, PontoVirtualAcessosService>();
        builder.Services.AddSingleton<PontoVirtualAcessosService>();
        builder.Services.AddSingleton<IPosicaoOutrasPartesService, PosicaoOutrasPartesService>();
        builder.Services.AddSingleton<PosicaoOutrasPartesService>();
        builder.Services.AddSingleton<IPrecatoriaService, PrecatoriaService>();
        builder.Services.AddSingleton<PrecatoriaService>();
        builder.Services.AddSingleton<IPreClientesService, PreClientesService>();
        builder.Services.AddSingleton<PreClientesService>();
        builder.Services.AddSingleton<IPrepostosService, PrepostosService>();
        builder.Services.AddSingleton<PrepostosService>();
        builder.Services.AddSingleton<IProCDAService, ProCDAService>();
        builder.Services.AddSingleton<ProCDAService>();
        builder.Services.AddSingleton<IProcessosService, ProcessosService>();
        builder.Services.AddSingleton<ProcessosService>();
        builder.Services.AddSingleton<IProcessosObsReportService, ProcessosObsReportService>();
        builder.Services.AddSingleton<ProcessosObsReportService>();
        builder.Services.AddSingleton<IProcessosParadosService, ProcessosParadosService>();
        builder.Services.AddSingleton<ProcessosParadosService>();
        builder.Services.AddSingleton<IProcessOutputEngineService, ProcessOutputEngineService>();
        builder.Services.AddSingleton<ProcessOutputEngineService>();
        builder.Services.AddSingleton<IProcessOutPutIDsService, ProcessOutPutIDsService>();
        builder.Services.AddSingleton<ProcessOutPutIDsService>();
        builder.Services.AddSingleton<IProcessOutputRequestService, ProcessOutputRequestService>();
        builder.Services.AddSingleton<ProcessOutputRequestService>();
        builder.Services.AddSingleton<IProcessOutputSourcesService, ProcessOutputSourcesService>();
        builder.Services.AddSingleton<ProcessOutputSourcesService>();
        builder.Services.AddSingleton<IProDepositosService, ProDepositosService>();
        builder.Services.AddSingleton<ProDepositosService>();
        builder.Services.AddSingleton<IProDespesasService, ProDespesasService>();
        builder.Services.AddSingleton<ProDespesasService>();
        builder.Services.AddSingleton<IProObservacoesService, ProObservacoesService>();
        builder.Services.AddSingleton<ProObservacoesService>();
        builder.Services.AddSingleton<IProPartesService, ProPartesService>();
        builder.Services.AddSingleton<ProPartesService>();
        builder.Services.AddSingleton<IProProcuradoresService, ProProcuradoresService>();
        builder.Services.AddSingleton<ProProcuradoresService>();
        builder.Services.AddSingleton<IProResumosService, ProResumosService>();
        builder.Services.AddSingleton<ProResumosService>();
        builder.Services.AddSingleton<IProSucumbenciaService, ProSucumbenciaService>();
        builder.Services.AddSingleton<ProSucumbenciaService>();
        builder.Services.AddSingleton<IProTipoBaixaService, ProTipoBaixaService>();
        builder.Services.AddSingleton<ProTipoBaixaService>();
        builder.Services.AddSingleton<IProValoresService, ProValoresService>();
        builder.Services.AddSingleton<ProValoresService>();
        builder.Services.AddSingleton<IRamalService, RamalService>();
        builder.Services.AddSingleton<RamalService>();
        builder.Services.AddSingleton<IRecadosService, RecadosService>();
        builder.Services.AddSingleton<RecadosService>();
        builder.Services.AddSingleton<IRegimeTributacaoService, RegimeTributacaoService>();
        builder.Services.AddSingleton<RegimeTributacaoService>();
        builder.Services.AddSingleton<IReuniaoService, ReuniaoService>();
        builder.Services.AddSingleton<ReuniaoService>();
        builder.Services.AddSingleton<IReuniaoPessoasService, ReuniaoPessoasService>();
        builder.Services.AddSingleton<ReuniaoPessoasService>();
        builder.Services.AddSingleton<IRitoService, RitoService>();
        builder.Services.AddSingleton<RitoService>();
        builder.Services.AddSingleton<IServicosService, ServicosService>();
        builder.Services.AddSingleton<ServicosService>();
        builder.Services.AddSingleton<ISetorService, SetorService>();
        builder.Services.AddSingleton<SetorService>();
        builder.Services.AddSingleton<ISituacaoService, SituacaoService>();
        builder.Services.AddSingleton<SituacaoService>();
        builder.Services.AddSingleton<ISMSAliceService, SMSAliceService>();
        builder.Services.AddSingleton<SMSAliceService>();
        builder.Services.AddSingleton<IStatusAndamentoService, StatusAndamentoService>();
        builder.Services.AddSingleton<StatusAndamentoService>();
        builder.Services.AddSingleton<IStatusBiuService, StatusBiuService>();
        builder.Services.AddSingleton<StatusBiuService>();
        builder.Services.AddSingleton<IStatusHTrabService, StatusHTrabService>();
        builder.Services.AddSingleton<StatusHTrabService>();
        builder.Services.AddSingleton<IStatusInstanciaService, StatusInstanciaService>();
        builder.Services.AddSingleton<StatusInstanciaService>();
        builder.Services.AddSingleton<IStatusTarefasService, StatusTarefasService>();
        builder.Services.AddSingleton<StatusTarefasService>();
        builder.Services.AddSingleton<ITerceirosService, TerceirosService>();
        builder.Services.AddSingleton<TerceirosService>();
        builder.Services.AddSingleton<ITipoCompromissoService, TipoCompromissoService>();
        builder.Services.AddSingleton<TipoCompromissoService>();
        builder.Services.AddSingleton<ITipoContatoCRMService, TipoContatoCRMService>();
        builder.Services.AddSingleton<TipoContatoCRMService>();
        builder.Services.AddSingleton<ITipoEMailService, TipoEMailService>();
        builder.Services.AddSingleton<TipoEMailService>();
        builder.Services.AddSingleton<ITipoEnderecoService, TipoEnderecoService>();
        builder.Services.AddSingleton<TipoEnderecoService>();
        builder.Services.AddSingleton<ITipoEnderecoSistemaService, TipoEnderecoSistemaService>();
        builder.Services.AddSingleton<TipoEnderecoSistemaService>();
        builder.Services.AddSingleton<ITipoModeloDocumentoService, TipoModeloDocumentoService>();
        builder.Services.AddSingleton<TipoModeloDocumentoService>();
        builder.Services.AddSingleton<ITipoOrigemSucumbenciaService, TipoOrigemSucumbenciaService>();
        builder.Services.AddSingleton<TipoOrigemSucumbenciaService>();
        builder.Services.AddSingleton<ITipoProDespositoService, TipoProDespositoService>();
        builder.Services.AddSingleton<TipoProDespositoService>();
        builder.Services.AddSingleton<ITipoRecursoService, TipoRecursoService>();
        builder.Services.AddSingleton<TipoRecursoService>();
        builder.Services.AddSingleton<ITiposAcaoService, TiposAcaoService>();
        builder.Services.AddSingleton<TiposAcaoService>();
        builder.Services.AddSingleton<ITipoStatusBiuService, TipoStatusBiuService>();
        builder.Services.AddSingleton<TipoStatusBiuService>();
        builder.Services.AddSingleton<ITipoValorProcessoService, TipoValorProcessoService>();
        builder.Services.AddSingleton<TipoValorProcessoService>();
        builder.Services.AddSingleton<ITribEnderecosService, TribEnderecosService>();
        builder.Services.AddSingleton<TribEnderecosService>();
        builder.Services.AddSingleton<ITribunalService, TribunalService>();
        builder.Services.AddSingleton<TribunalService>();
        builder.Services.AddSingleton<IUFService, UFService>();
        builder.Services.AddSingleton<UFService>();
        builder.Services.AddSingleton<IUltimosProcessosService, UltimosProcessosService>();
        builder.Services.AddSingleton<UltimosProcessosService>();
        builder.Services.AddSingleton<IViaRecebimentoService, ViaRecebimentoService>();
        builder.Services.AddSingleton<ViaRecebimentoService>();
        builder.Services.AddSingleton<IAgendaRelatorioService, AgendaRelatorioService>();
        builder.Services.AddSingleton<AgendaRelatorioService>();
        builder.Services.AddSingleton<IAgendaSemanaService, AgendaSemanaService>();
        builder.Services.AddSingleton<AgendaSemanaService>();
    }
}