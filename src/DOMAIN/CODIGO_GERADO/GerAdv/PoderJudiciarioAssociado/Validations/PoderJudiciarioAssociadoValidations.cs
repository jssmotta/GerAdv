// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Validations;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPoderJudiciarioAssociadoValidation
{
    Task<bool> ValidateReg(Models.PoderJudiciarioAssociado reg, IPoderJudiciarioAssociadoService service, IJusticaReader justicaReader, IAreaReader areaReader, ITribunalReader tribunalReader, IForoReader foroReader, ICidadeReader cidadeReader, [FromRoute, Required] string uri, MsiSqlConnection oCnn);
    Task<bool> CanDelete(int? id, IPoderJudiciarioAssociadoService service, [FromRoute, Required] string uri, MsiSqlConnection oCnn);
}

public class PoderJudiciarioAssociadoValidation : IPoderJudiciarioAssociadoValidation
{
    public async Task<bool> CanDelete(int? id, IPoderJudiciarioAssociadoService service, [FromRoute, Required] string uri, MsiSqlConnection oCnn)
    {
        if (id == null || id <= 0)
            throw new SGValidationException("Id inválido");
        var reg = await service.GetById(id ?? default, uri, default);
        if (reg == null)
            throw new SGValidationException($"Registro com id {id} não encontrado.");
        return true;
    }

    private bool ValidSizes(Models.PoderJudiciarioAssociado reg)
    {
        if (reg.JusticaNome != null && reg.JusticaNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaJusticaNome.FTamanho)
            throw new SGValidationException($"JusticaNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaJusticaNome.FTamanho} caracteres.");
        if (reg.AreaNome != null && reg.AreaNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaAreaNome.FTamanho)
            throw new SGValidationException($"AreaNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaAreaNome.FTamanho} caracteres.");
        if (reg.TribunalNome != null && reg.TribunalNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaTribunalNome.FTamanho)
            throw new SGValidationException($"TribunalNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaTribunalNome.FTamanho} caracteres.");
        if (reg.ForoNome != null && reg.ForoNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaForoNome.FTamanho)
            throw new SGValidationException($"ForoNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaForoNome.FTamanho} caracteres.");
        if (reg.SubDivisaoNome != null && reg.SubDivisaoNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaSubDivisaoNome.FTamanho)
            throw new SGValidationException($"SubDivisaoNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaSubDivisaoNome.FTamanho} caracteres.");
        if (reg.CidadeNome != null && reg.CidadeNome.Length > DBPoderJudiciarioAssociadoDicInfo.PjaCidadeNome.FTamanho)
            throw new SGValidationException($"CidadeNome deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaCidadeNome.FTamanho} caracteres.");
        if (reg.GUID != null && reg.GUID.Length > DBPoderJudiciarioAssociadoDicInfo.PjaGUID.FTamanho)
            throw new SGValidationException($"GUID deve ter no máximo {DBPoderJudiciarioAssociadoDicInfo.PjaGUID.FTamanho} caracteres.");
        return true;
    }

    public async Task<bool> ValidateReg(Models.PoderJudiciarioAssociado reg, IPoderJudiciarioAssociadoService service, IJusticaReader justicaReader, IAreaReader areaReader, ITribunalReader tribunalReader, IForoReader foroReader, ICidadeReader cidadeReader, [FromRoute, Required] string uri, MsiSqlConnection oCnn)
    {
        if (reg == null)
            throw new SGValidationException("Objeto está nulo");
        var validSizes = ValidSizes(reg);
        if (!validSizes)
            return false;
        // Justica
        if (!reg.Justica.IsEmptyIDNumber())
        {
            var regJustica = await justicaReader.Read(reg.Justica, oCnn);
            if (regJustica == null || regJustica.Id != reg.Justica)
            {
                throw new SGValidationException($"Justiça não encontrado ({regJustica?.Id}).");
            }
        }

        // Area
        if (!reg.Area.IsEmptyIDNumber())
        {
            var regArea = await areaReader.Read(reg.Area, oCnn);
            if (regArea == null || regArea.Id != reg.Area)
            {
                throw new SGValidationException($"Área não encontrado ({regArea?.Id}).");
            }
        }

        // Tribunal
        if (!reg.Tribunal.IsEmptyIDNumber())
        {
            var regTribunal = await tribunalReader.Read(reg.Tribunal, oCnn);
            if (regTribunal == null || regTribunal.Id != reg.Tribunal)
            {
                throw new SGValidationException($"Tribunal não encontrado ({regTribunal?.Id}).");
            }
        }

        // Foro
        if (!reg.Foro.IsEmptyIDNumber())
        {
            var regForo = await foroReader.Read(reg.Foro, oCnn);
            if (regForo == null || regForo.Id != reg.Foro)
            {
                throw new SGValidationException($"Foro não encontrado ({regForo?.Id}).");
            }
        }

        // Cidade
        if (!reg.Cidade.IsEmptyIDNumber())
        {
            var regCidade = await cidadeReader.Read(reg.Cidade, oCnn);
            if (regCidade == null || regCidade.Id != reg.Cidade)
            {
                throw new SGValidationException($"Cidade não encontrado ({regCidade?.Id}).");
            }
        }

        return true;
    }
}