// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGruposEmpresasWriter
{
    Task<FGruposEmpresas> WriteAsync(Models.GruposEmpresas gruposempresas, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GruposEmpresasResponse gruposempresas, int operadorId, MsiSqlConnection oCnn);
}

public class GruposEmpresasWriter(IFGruposEmpresasFactory gruposempresasFactory) : IGruposEmpresasWriter
{
    private readonly IFGruposEmpresasFactory _gruposempresasFactory = gruposempresasFactory ?? throw new ArgumentNullException(nameof(gruposempresasFactory));
    public virtual async Task Delete(GruposEmpresasResponse gruposempresas, int operadorId, MsiSqlConnection oCnn)
    {
        await _gruposempresasFactory.DeleteAsync(operadorId, gruposempresas.Id, oCnn);
    }

    public virtual async Task<FGruposEmpresas> WriteAsync(Models.GruposEmpresas gruposempresas, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (gruposempresas.Id.IsEmptyIDNumber() ? _gruposempresasFactory.CreateAsync() : _gruposempresasFactory.CreateFromIdAsync(gruposempresas.Id, oCnn));
        dbRec.FEMail = gruposempresas.EMail;
        dbRec.FInativo = gruposempresas.Inativo;
        dbRec.FOponente = gruposempresas.Oponente;
        dbRec.FDescricao = gruposempresas.Descricao;
        dbRec.FObservacoes = gruposempresas.Observacoes;
        dbRec.FCliente = gruposempresas.Cliente;
        dbRec.FGUID = gruposempresas.GUID;
        dbRec.FIcone = gruposempresas.Icone;
        dbRec.FDespesaUnificada = gruposempresas.DespesaUnificada;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}