// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ICargosEscClassWriter
{
    Task<FCargosEscClass> WriteAsync(Models.CargosEscClass cargosescclass, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(CargosEscClassResponse cargosescclass, int operadorId, MsiSqlConnection oCnn);
}

public class CargosEscClassWriter(IFCargosEscClassFactory cargosescclassFactory) : ICargosEscClassWriter
{
    private readonly IFCargosEscClassFactory _cargosescclassFactory = cargosescclassFactory;
    public async Task Delete(CargosEscClassResponse cargosescclass, int operadorId, MsiSqlConnection oCnn)
    {
        await _cargosescclassFactory.DeleteAsync(operadorId, cargosescclass.Id, oCnn);
    }

    public async Task<FCargosEscClass> WriteAsync(Models.CargosEscClass cargosescclass, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (cargosescclass.Id.IsEmptyIDNumber() ? _cargosescclassFactory.CreateAsync() : _cargosescclassFactory.CreateFromIdAsync(cargosescclass.Id, oCnn));
        dbRec.FNome = cargosescclass.Nome;
        dbRec.FGUID = cargosescclass.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}