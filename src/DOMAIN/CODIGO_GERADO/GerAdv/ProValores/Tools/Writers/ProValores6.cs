// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProValoresWriter
{
    Task<FProValores> WriteAsync(Models.ProValores provalores, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProValoresResponse provalores, int operadorId, MsiSqlConnection oCnn);
}

public class ProValoresWriter(IFProValoresFactory provaloresFactory) : IProValoresWriter
{
    private readonly IFProValoresFactory _provaloresFactory = provaloresFactory;
    public async Task Delete(ProValoresResponse provalores, int operadorId, MsiSqlConnection oCnn)
    {
        await _provaloresFactory.DeleteAsync(operadorId, provalores.Id, oCnn);
    }

    public async Task<FProValores> WriteAsync(Models.ProValores provalores, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (provalores.Id.IsEmptyIDNumber() ? _provaloresFactory.CreateAsync() : _provaloresFactory.CreateFromIdAsync(provalores.Id, oCnn));
        dbRec.FProcesso = provalores.Processo;
        dbRec.FTipoValorProcesso = provalores.TipoValorProcesso;
        dbRec.FIndice = provalores.Indice;
        dbRec.FIgnorar = provalores.Ignorar;
        dbRec.FData = provalores.Data;
        dbRec.FValorOriginal = provalores.ValorOriginal;
        dbRec.FPercMulta = provalores.PercMulta;
        dbRec.FValorMulta = provalores.ValorMulta;
        dbRec.FPercJuros = provalores.PercJuros;
        dbRec.FValorOriginalCorrigidoIndice = provalores.ValorOriginalCorrigidoIndice;
        dbRec.FValorMultaCorrigido = provalores.ValorMultaCorrigido;
        dbRec.FValorJurosCorrigido = provalores.ValorJurosCorrigido;
        dbRec.FValorFinal = provalores.ValorFinal;
        if (provalores.DataUltimaCorrecao != null)
            dbRec.FDataUltimaCorrecao = provalores.DataUltimaCorrecao.ToString();
        dbRec.FGUID = provalores.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}