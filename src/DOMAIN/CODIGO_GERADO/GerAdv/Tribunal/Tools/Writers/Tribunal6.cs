// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITribunalWriter
{
    Task<FTribunal> WriteAsync(Models.Tribunal tribunal, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(TribunalResponse tribunal, int operadorId, MsiSqlConnection? oCnn);
}

public class TribunalWriter(IFTribunalFactory tribunalFactory) : ITribunalWriter
{
    private readonly IFTribunalFactory _tribunalFactory = tribunalFactory ?? throw new ArgumentNullException(nameof(tribunalFactory));
    public virtual async Task Delete(TribunalResponse tribunal, int operadorId, MsiSqlConnection? oCnn)
    {
        await _tribunalFactory.DeleteAsync(operadorId, tribunal.Id, oCnn);
    }

    public virtual async Task<FTribunal> WriteAsync(Models.Tribunal tribunal, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (tribunal.Id.IsEmptyIDNumber() ? _tribunalFactory.CreateAsync() : _tribunalFactory.CreateFromIdAsync(tribunal.Id, oCnn));
        dbRec.FNome = tribunal.Nome;
        dbRec.FArea = tribunal.Area;
        dbRec.FGUID = tribunal.GUID;
        dbRec.FJustica = tribunal.Justica;
        dbRec.FDescricao = tribunal.Descricao;
        dbRec.FInstancia = tribunal.Instancia;
        dbRec.FSigla = tribunal.Sigla;
        dbRec.FWeb = tribunal.Web;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}