// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IContatoCRMViewWriter
{
    Task<FContatoCRMView> WriteAsync(Models.ContatoCRMView contatocrmview, MsiSqlConnection oCnn);
    Task Delete(ContatoCRMViewResponse contatocrmview, int operadorId, MsiSqlConnection oCnn);
}

public class ContatoCRMViewWriter(IFContatoCRMViewFactory contatocrmviewFactory) : IContatoCRMViewWriter
{
    private readonly IFContatoCRMViewFactory _contatocrmviewFactory = contatocrmviewFactory;
    public async Task Delete(ContatoCRMViewResponse contatocrmview, int operadorId, MsiSqlConnection oCnn)
    {
        await _contatocrmviewFactory.DeleteAsync(operadorId, contatocrmview.Id, oCnn);
    }

    public async Task<FContatoCRMView> WriteAsync(Models.ContatoCRMView contatocrmview, MsiSqlConnection oCnn)
    {
        using var dbRec = await (contatocrmview.Id.IsEmptyIDNumber() ? _contatocrmviewFactory.CreateAsync() : _contatocrmviewFactory.CreateFromIdAsync(contatocrmview.Id, oCnn));
        dbRec.FCGUID = contatocrmview.CGUID;
        if (contatocrmview.Data != null)
            dbRec.FData = contatocrmview.Data.ToString();
        dbRec.FIP = contatocrmview.IP;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}