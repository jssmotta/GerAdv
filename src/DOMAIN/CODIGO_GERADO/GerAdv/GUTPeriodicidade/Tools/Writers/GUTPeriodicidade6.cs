// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTPeriodicidadeWriter
{
    Task<FGUTPeriodicidade> WriteAsync(Models.GUTPeriodicidade gutperiodicidade, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GUTPeriodicidadeResponse gutperiodicidade, int operadorId, MsiSqlConnection oCnn);
}

public class GUTPeriodicidadeWriter(IFGUTPeriodicidadeFactory gutperiodicidadeFactory) : IGUTPeriodicidadeWriter
{
    private readonly IFGUTPeriodicidadeFactory _gutperiodicidadeFactory = gutperiodicidadeFactory;
    public async Task Delete(GUTPeriodicidadeResponse gutperiodicidade, int operadorId, MsiSqlConnection oCnn)
    {
        await _gutperiodicidadeFactory.DeleteAsync(operadorId, gutperiodicidade.Id, oCnn);
    }

    public async Task<FGUTPeriodicidade> WriteAsync(Models.GUTPeriodicidade gutperiodicidade, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (gutperiodicidade.Id.IsEmptyIDNumber() ? _gutperiodicidadeFactory.CreateAsync() : _gutperiodicidadeFactory.CreateFromIdAsync(gutperiodicidade.Id, oCnn));
        dbRec.FNome = gutperiodicidade.Nome;
        dbRec.FIntervaloDias = gutperiodicidade.IntervaloDias;
        dbRec.FGUID = gutperiodicidade.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}