// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IParceriaProcWriter
{
    Task<FParceriaProc> WriteAsync(Models.ParceriaProc parceriaproc, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ParceriaProcResponse parceriaproc, int operadorId, MsiSqlConnection oCnn);
}

public class ParceriaProcWriter(IFParceriaProcFactory parceriaprocFactory) : IParceriaProcWriter
{
    private readonly IFParceriaProcFactory _parceriaprocFactory = parceriaprocFactory ?? throw new ArgumentNullException(nameof(parceriaprocFactory));
    public virtual async Task Delete(ParceriaProcResponse parceriaproc, int operadorId, MsiSqlConnection oCnn)
    {
        await _parceriaprocFactory.DeleteAsync(operadorId, parceriaproc.Id, oCnn);
    }

    public virtual async Task<FParceriaProc> WriteAsync(Models.ParceriaProc parceriaproc, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (parceriaproc.Id.IsEmptyIDNumber() ? _parceriaprocFactory.CreateAsync() : _parceriaprocFactory.CreateFromIdAsync(parceriaproc.Id, oCnn));
        dbRec.FAdvogado = parceriaproc.Advogado;
        dbRec.FGUID = parceriaproc.GUID;
        dbRec.FProcesso = parceriaproc.Processo;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}