// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IDocumentosWriter
{
    Task<FDocumentos> WriteAsync(Models.Documentos documentos, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(DocumentosResponse documentos, int operadorId, MsiSqlConnection oCnn);
}

public class DocumentosWriter(IFDocumentosFactory documentosFactory) : IDocumentosWriter
{
    private readonly IFDocumentosFactory _documentosFactory = documentosFactory ?? throw new ArgumentNullException(nameof(documentosFactory));
    public virtual async Task Delete(DocumentosResponse documentos, int operadorId, MsiSqlConnection oCnn)
    {
        await _documentosFactory.DeleteAsync(operadorId, documentos.Id, oCnn);
    }

    public virtual async Task<FDocumentos> WriteAsync(Models.Documentos documentos, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (documentos.Id.IsEmptyIDNumber() ? _documentosFactory.CreateAsync() : _documentosFactory.CreateFromIdAsync(documentos.Id, oCnn));
        dbRec.FGUID = documentos.GUID;
        dbRec.FProcesso = documentos.Processo;
        dbRec.FData = documentos.Data;
        dbRec.FObservacao = documentos.Observacao;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}