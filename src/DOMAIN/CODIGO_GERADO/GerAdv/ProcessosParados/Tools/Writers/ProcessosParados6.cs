// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProcessosParadosWriter
{
    Task<FProcessosParados> WriteAsync(Models.ProcessosParados processosparados, MsiSqlConnection oCnn);
    Task Delete(ProcessosParadosResponse processosparados, int operadorId, MsiSqlConnection oCnn);
}

public class ProcessosParadosWriter(IFProcessosParadosFactory processosparadosFactory) : IProcessosParadosWriter
{
    private readonly IFProcessosParadosFactory _processosparadosFactory = processosparadosFactory;
    public async Task Delete(ProcessosParadosResponse processosparados, int operadorId, MsiSqlConnection oCnn)
    {
        await _processosparadosFactory.DeleteAsync(operadorId, processosparados.Id, oCnn);
    }

    public async Task<FProcessosParados> WriteAsync(Models.ProcessosParados processosparados, MsiSqlConnection oCnn)
    {
        using var dbRec = await (processosparados.Id.IsEmptyIDNumber() ? _processosparadosFactory.CreateAsync() : _processosparadosFactory.CreateFromIdAsync(processosparados.Id, oCnn));
        dbRec.FProcesso = processosparados.Processo;
        dbRec.FSemana = processosparados.Semana;
        dbRec.FAno = processosparados.Ano;
        if (processosparados.DataHora != null)
            dbRec.FDataHora = processosparados.DataHora.ToString();
        dbRec.FOperador = processosparados.Operador;
        if (processosparados.DataHistorico != null)
            dbRec.FDataHistorico = processosparados.DataHistorico.ToString();
        if (processosparados.DataNENotas != null)
            dbRec.FDataNENotas = processosparados.DataNENotas.ToString();
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}