// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface INECompromissosWriter
{
    Task<FNECompromissos> WriteAsync(Models.NECompromissos necompromissos, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(NECompromissosResponse necompromissos, int operadorId, MsiSqlConnection oCnn);
}

public class NECompromissosWriter(IFNECompromissosFactory necompromissosFactory) : INECompromissosWriter
{
    private readonly IFNECompromissosFactory _necompromissosFactory = necompromissosFactory ?? throw new ArgumentNullException(nameof(necompromissosFactory));
    public virtual async Task Delete(NECompromissosResponse necompromissos, int operadorId, MsiSqlConnection oCnn)
    {
        await _necompromissosFactory.DeleteAsync(operadorId, necompromissos.Id, oCnn);
    }

    public virtual async Task<FNECompromissos> WriteAsync(Models.NECompromissos necompromissos, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (necompromissos.Id.IsEmptyIDNumber() ? _necompromissosFactory.CreateAsync() : _necompromissosFactory.CreateFromIdAsync(necompromissos.Id, oCnn));
        dbRec.FPalavraChave = necompromissos.PalavraChave;
        dbRec.FProvisionar = necompromissos.Provisionar;
        dbRec.FTipoCompromisso = necompromissos.TipoCompromisso;
        dbRec.FTextoCompromisso = necompromissos.TextoCompromisso;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}