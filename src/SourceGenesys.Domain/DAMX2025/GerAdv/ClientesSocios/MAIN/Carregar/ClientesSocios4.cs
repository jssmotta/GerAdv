// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBClientesSocios
{
    public DBClientesSocios(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBClientesSocios(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do ClientesSocios: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBClientesSociosDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.CidadeSocio)))
                m_FCidadeSocio = Convert.ToInt32(getValue(DBClientesSociosDicInfo.CidadeSocio));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Cliente)))
                m_FCliente = Convert.ToInt32(getValue(DBClientesSociosDicInfo.Cliente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.DataContrato)))
                m_FDataContrato = Convert.ToDateTime(getValue(DBClientesSociosDicInfo.DataContrato));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBClientesSociosDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBClientesSociosDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBClientesSociosDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Idade)))
                m_FIdade = Convert.ToInt32(getValue(DBClientesSociosDicInfo.Idade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.IsRepresentanteLegal)))
                m_FIsRepresentanteLegal = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.IsRepresentanteLegal));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBClientesSociosDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBClientesSociosDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.RGDataExp)))
                m_FRGDataExp = Convert.ToDateTime(getValue(DBClientesSociosDicInfo.RGDataExp));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.SocioEmpresaAdminSomente)))
                m_FSocioEmpresaAdminSomente = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.SocioEmpresaAdminSomente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.SomenteRepresentante)))
                m_FSomenteRepresentante = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.SomenteRepresentante));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Tipo)))
                m_FTipo = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Tipo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBClientesSociosDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBClientesSociosDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBClientesSociosDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FBairroSocio = getValue(DBClientesSociosDicInfo.BairroSocio)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCargo = getValue(DBClientesSociosDicInfo.Cargo)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBClientesSociosDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEPSocio = getValue(DBClientesSociosDicInfo.CEPSocio)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBClientesSociosDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNH = getValue(DBClientesSociosDicInfo.CNH)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNPJ = getValue(DBClientesSociosDicInfo.CNPJ)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBClientesSociosDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBClientesSociosDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBClientesSociosDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEnderecoSocio = getValue(DBClientesSociosDicInfo.EnderecoSocio)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBClientesSociosDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBClientesSociosDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBClientesSociosDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FInscEst = getValue(DBClientesSociosDicInfo.InscEst)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBClientesSociosDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObs = getValue(DBClientesSociosDicInfo.Obs)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FParticipacao = getValue(DBClientesSociosDicInfo.Participacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FQualificacao = getValue(DBClientesSociosDicInfo.Qualificacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRepresentanteLegal = getValue(DBClientesSociosDicInfo.RepresentanteLegal)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBClientesSociosDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSite = getValue(DBClientesSociosDicInfo.Site)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSocioEmpresaAdminNome = getValue(DBClientesSociosDicInfo.SocioEmpresaAdminNome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do ClientesSocios: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do ClientesSocios: {ex.Message}", ex);
        }
    }
}