// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBOponentesRepLegal
{
    public DBOponentesRepLegal(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBOponentesRepLegal(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OponentesRepLegal: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBOponentesRepLegalDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBOponentesRepLegalDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBOponentesRepLegalDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBOponentesRepLegalDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.Oponente)))
                m_FOponente = Convert.ToInt32(getValue(DBOponentesRepLegalDicInfo.Oponente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBOponentesRepLegalDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBOponentesRepLegalDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBOponentesRepLegalDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOponentesRepLegalDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBOponentesRepLegalDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBOponentesRepLegalDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBOponentesRepLegalDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBOponentesRepLegalDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBOponentesRepLegalDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBOponentesRepLegalDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBOponentesRepLegalDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBOponentesRepLegalDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBOponentesRepLegalDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacao = getValue(DBOponentesRepLegalDicInfo.Observacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBOponentesRepLegalDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSite = getValue(DBOponentesRepLegalDicInfo.Site)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OponentesRepLegal: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OponentesRepLegal: {ex.Message}", ex);
        }
    }
}