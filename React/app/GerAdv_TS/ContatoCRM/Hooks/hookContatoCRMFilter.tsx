// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterContatoCRM } from '@/app/GerAdv_TS/ContatoCRM/Filters/ContatoCRM';
import OperadorComboBox from '@/app/GerAdv_TS/Operador/ComboBox/Operador';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import TipoContatoCRMComboBox from '@/app/GerAdv_TS/TipoContatoCRM/ComboBox/TipoContatoCRM';
interface UseContatoCRMFilterProps {
  handleFetchWithFilter: (filtro?: FilterContatoCRM | undefined | null) => Promise<void>;
}
interface UseContatoCRMFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterContatoCRM;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterContatoCRM>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterContatoCRM) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterContatoCRM>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useContatoCRMFilter = ({ handleFetchWithFilter }: UseContatoCRMFilterProps): UseContatoCRMFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterContatoCRM>({} as FilterContatoCRM);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterContatoCRM;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterContatoCRM) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('ContatoCRMFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterContatoCRM>) => (
  <>
  <InputInput
  type='text'
  id='ageclienteavisado'
  name='ageclienteavisado'
  value={handlers.windowFilter?.ageclienteavisado ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AgeClienteAvisado'
  label='AgeClienteAvisado (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ageclienteavisado_end'
  name='ageclienteavisado_end'
  value={handlers.windowFilter?.ageclienteavisado_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AgeClienteAvisado final'
  label='AgeClienteAvisado final'
  disabled={handlers.windowFilter?.ageclienteavisado ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='docsviarecebimento'
  name='docsviarecebimento'
  value={handlers.windowFilter?.docsviarecebimento ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe DocsViaRecebimento'
  label='DocsViaRecebimento (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='docsviarecebimento_end'
  name='docsviarecebimento_end'
  value={handlers.windowFilter?.docsviarecebimento_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe DocsViaRecebimento final'
  label='DocsViaRecebimento final'
  disabled={handlers.windowFilter?.docsviarecebimento ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='naopublicavel'
  name='naopublicavel'
  value={handlers.windowFilter?.naopublicavel ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='NaoPublicavel'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='notificar'
  name='notificar'
  value={handlers.windowFilter?.notificar ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Notificar'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='ocultar'
  name='ocultar'
  value={handlers.windowFilter?.ocultar ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Ocultar'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='assunto'
  name='assunto'
  value={handlers.windowFilter?.assunto ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Assunto'
  label='Assunto'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='isdocsrecebidos'
  name='isdocsrecebidos'
  value={handlers.windowFilter?.isdocsrecebidos ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='IsDocsRecebidos'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='quemnotificou'
  name='quemnotificou'
  value={handlers.windowFilter?.quemnotificou ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemNotificou'
  label='QuemNotificou (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemnotificou_end'
  name='quemnotificou_end'
  value={handlers.windowFilter?.quemnotificou_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemNotificou final'
  label='QuemNotificou final'
  disabled={handlers.windowFilter?.quemnotificou ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='datanotificou'
  label='DataNotificou (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datanotificou'
  value={handlers.windowFilter?.datanotificou ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datanotificou', value)}
  />
  <InputDate
  type='text'
  id='datanotificou_end'
  label='DataNotificou (final)'
  dataForm={null}
  className='inputSearch'
  name='datanotificou_end'
  value={handlers.windowFilter?.datanotificou_end ?? ''}
  disabled={handlers.windowFilter?.datanotificou ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datanotificou_end', value)}
  />
  <OperadorComboBox
  name='operador'
  dataForm={null}
  value={handlers.windowFilter?.operador}
  setValue={(e:any) => handlers.handleComboChange(e, 'operador')}
  className='inputSearch inputSearchComboboxTab'
  label='Operador'
  />
  <ClientesComboBox
  name='cliente'
  dataForm={null}
  value={handlers.windowFilter?.cliente}
  setValue={(e:any) => handlers.handleComboChange(e, 'cliente')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <InputDate
  type='text'
  id='horanotificou'
  label='HoraNotificou (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='horanotificou'
  value={handlers.windowFilter?.horanotificou ?? ''}
  onChange={(value: string) => handlers.handleDateChange('horanotificou', value)}
  />
  <InputDate
  type='text'
  id='horanotificou_end'
  label='HoraNotificou (final)'
  dataForm={null}
  className='inputSearch'
  name='horanotificou_end'
  value={handlers.windowFilter?.horanotificou_end ?? ''}
  disabled={handlers.windowFilter?.horanotificou ? false: true}
  onChange={(value: string) => handlers.handleDateChange('horanotificou_end', value)}
  />
  <InputInput
  type='text'
  id='objetonotificou'
  name='objetonotificou'
  value={handlers.windowFilter?.objetonotificou ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ObjetoNotificou'
  label='ObjetoNotificou (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='objetonotificou_end'
  name='objetonotificou_end'
  value={handlers.windowFilter?.objetonotificou_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ObjetoNotificou final'
  label='ObjetoNotificou final'
  disabled={handlers.windowFilter?.objetonotificou ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoacontato'
  name='pessoacontato'
  value={handlers.windowFilter?.pessoacontato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe PessoaContato'
  label='PessoaContato'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='tempo'
  name='tempo'
  value={handlers.windowFilter?.tempo ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Tempo (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='tempo_end'
  name='tempo_end'
  value={handlers.windowFilter?.tempo_end ?? 0}
  disabled={handlers.windowFilter?.tempo != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Tempo (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputDate
  type='text'
  id='horainicial'
  label='HoraInicial (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='horainicial'
  value={handlers.windowFilter?.horainicial ?? ''}
  onChange={(value: string) => handlers.handleDateChange('horainicial', value)}
  />
  <InputDate
  type='text'
  id='horainicial_end'
  label='HoraInicial (final)'
  dataForm={null}
  className='inputSearch'
  name='horainicial_end'
  value={handlers.windowFilter?.horainicial_end ?? ''}
  disabled={handlers.windowFilter?.horainicial ? false: true}
  onChange={(value: string) => handlers.handleDateChange('horainicial_end', value)}
  />
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <InputComboFilterYesNo
  type='text'
  id='importante'
  name='importante'
  value={handlers.windowFilter?.importante ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Importante'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='urgente'
  name='urgente'
  value={handlers.windowFilter?.urgente ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Urgente'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='gerarhoratrabalhada'
  name='gerarhoratrabalhada'
  value={handlers.windowFilter?.gerarhoratrabalhada ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='GerarHoraTrabalhada'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='exibirnotopo'
  name='exibirnotopo'
  value={handlers.windowFilter?.exibirnotopo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='ExibirNoTopo'
  className='inputSearch inputSearchCheckbox'
  />
  <TipoContatoCRMComboBox
  name='tipocontatocrm'
  dataForm={null}
  value={handlers.windowFilter?.tipocontatocrm}
  setValue={(e:any) => handlers.handleComboChange(e, 'tipocontatocrm')}
  className='inputSearch inputSearchComboboxTab'
  label='Tipo Contato C R M'
  />
  <InputInput
  type='text'
  id='contato'
  name='contato'
  value={handlers.windowFilter?.contato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Contato'
  label='Contato'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='emocao'
  name='emocao'
  value={handlers.windowFilter?.emocao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Emocao'
  label='Emocao (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='emocao_end'
  name='emocao_end'
  value={handlers.windowFilter?.emocao_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Emocao final'
  label='Emocao final'
  disabled={handlers.windowFilter?.emocao ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='continuar'
  name='continuar'
  value={handlers.windowFilter?.continuar ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Continuar'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};