// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ISituacaoWriter
{
    Task<FSituacao> WriteAsync(Models.Situacao situacao, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(SituacaoResponse situacao, int operadorId, MsiSqlConnection oCnn);
}

public class SituacaoWriter(IFSituacaoFactory situacaoFactory) : ISituacaoWriter
{
    private readonly IFSituacaoFactory _situacaoFactory = situacaoFactory ?? throw new ArgumentNullException(nameof(situacaoFactory));
    public virtual async Task Delete(SituacaoResponse situacao, int operadorId, MsiSqlConnection oCnn)
    {
        await _situacaoFactory.DeleteAsync(operadorId, situacao.Id, oCnn);
    }

    public virtual async Task<FSituacao> WriteAsync(Models.Situacao situacao, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (situacao.Id.IsEmptyIDNumber() ? _situacaoFactory.CreateAsync() : _situacaoFactory.CreateFromIdAsync(situacao.Id, oCnn));
        dbRec.FParte_Int = situacao.Parte_Int;
        dbRec.FGUID = situacao.GUID;
        dbRec.FParte_Opo = situacao.Parte_Opo;
        dbRec.FTop = situacao.Top;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}