// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Validations;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ISituacaoValidation
{
    Task<bool> ValidateReg(Models.Situacao reg, ISituacaoService service, [FromRoute, Required] string uri, MsiSqlConnection? oCnn);
    Task<bool> CanDelete(int? id, ISituacaoService service, [FromRoute, Required] string uri, MsiSqlConnection? oCnn);
}

public class SituacaoValidation : ISituacaoValidation
{
    public async Task<bool> CanDelete(int? id, ISituacaoService service, [FromRoute, Required] string uri, MsiSqlConnection? oCnn)
    {
        if (id == null || id <= 0)
            throw new SGValidationException("Id inválido");
        var reg = await service.GetById(id ?? default, uri, default);
        if (reg == null)
            throw new SGValidationException($"Registro com id {id} não encontrado.");
        return true;
    }

    private bool ValidSizes(Models.Situacao reg)
    {
        if (reg.Parte_Int != null && reg.Parte_Int.Length > DBSituacaoDicInfo.SitParte_Int.FTamanho)
            throw new SGValidationException($"Parte_Int deve ter no máximo {DBSituacaoDicInfo.SitParte_Int.FTamanho} caracteres.");
        if (reg.Parte_Opo != null && reg.Parte_Opo.Length > DBSituacaoDicInfo.SitParte_Opo.FTamanho)
            throw new SGValidationException($"Parte_Opo deve ter no máximo {DBSituacaoDicInfo.SitParte_Opo.FTamanho} caracteres.");
        if (reg.GUID != null && reg.GUID.Length > DBSituacaoDicInfo.SitGUID.FTamanho)
            throw new SGValidationException($"GUID deve ter no máximo {DBSituacaoDicInfo.SitGUID.FTamanho} caracteres.");
        return true;
    }

    public async Task<bool> ValidateReg(Models.Situacao reg, ISituacaoService service, [FromRoute, Required] string uri, MsiSqlConnection? oCnn)
    {
        if (reg == null)
            throw new SGValidationException("Objeto está nulo");
        if (string.IsNullOrWhiteSpace(reg.Parte_Int))
            throw new SGValidationException("Parte_Int é obrigatório");
        var validSizes = ValidSizes(reg);
        if (!validSizes)
            return false;
        await Task.Delay(0);
        return true;
    }
}