// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBDocsRecebidosItens
{
    public DBDocsRecebidosItens(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
    }

    public DBDocsRecebidosItens(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do DocsRecebidosItens: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBDocsRecebidosItensDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.ContatoCRM)))
                m_FContatoCRM = Convert.ToInt32(getValue(DBDocsRecebidosItensDicInfo.ContatoCRM));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.Devolvido)))
                m_FDevolvido = Convert.ToBoolean(getValue(DBDocsRecebidosItensDicInfo.Devolvido));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBDocsRecebidosItensDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBDocsRecebidosItensDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBDocsRecebidosItensDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBDocsRecebidosItensDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.SeraDevolvido)))
                m_FSeraDevolvido = Convert.ToBoolean(getValue(DBDocsRecebidosItensDicInfo.SeraDevolvido));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBDocsRecebidosItensDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBDocsRecebidosItensDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBDocsRecebidosItensDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBDocsRecebidosItensDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacoes = getValue(DBDocsRecebidosItensDicInfo.Observacoes)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do DocsRecebidosItens: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do DocsRecebidosItens: {ex.Message}", ex);
        }
    }
}