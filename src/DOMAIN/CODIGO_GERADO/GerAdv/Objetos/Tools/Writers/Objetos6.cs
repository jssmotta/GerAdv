// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IObjetosWriter
{
    Task<FObjetos> WriteAsync(Models.Objetos objetos, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ObjetosResponse objetos, int operadorId, MsiSqlConnection oCnn);
}

public class ObjetosWriter(IFObjetosFactory objetosFactory) : IObjetosWriter
{
    private readonly IFObjetosFactory _objetosFactory = objetosFactory ?? throw new ArgumentNullException(nameof(objetosFactory));
    public virtual async Task Delete(ObjetosResponse objetos, int operadorId, MsiSqlConnection oCnn)
    {
        await _objetosFactory.DeleteAsync(operadorId, objetos.Id, oCnn);
    }

    public virtual async Task<FObjetos> WriteAsync(Models.Objetos objetos, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (objetos.Id.IsEmptyIDNumber() ? _objetosFactory.CreateAsync() : _objetosFactory.CreateFromIdAsync(objetos.Id, oCnn));
        dbRec.FJustica = objetos.Justica;
        dbRec.FArea = objetos.Area;
        dbRec.FNome = objetos.Nome;
        dbRec.FGUID = objetos.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}