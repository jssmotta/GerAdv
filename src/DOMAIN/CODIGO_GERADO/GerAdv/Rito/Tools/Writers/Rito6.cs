// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IRitoWriter
{
    Task<FRito> WriteAsync(Models.Rito rito, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(RitoResponse rito, int operadorId, MsiSqlConnection oCnn);
}

public class RitoWriter(IFRitoFactory ritoFactory) : IRitoWriter
{
    private readonly IFRitoFactory _ritoFactory = ritoFactory;
    public async Task Delete(RitoResponse rito, int operadorId, MsiSqlConnection oCnn)
    {
        await _ritoFactory.DeleteAsync(operadorId, rito.Id, oCnn);
    }

    public async Task<FRito> WriteAsync(Models.Rito rito, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (rito.Id.IsEmptyIDNumber() ? _ritoFactory.CreateAsync() : _ritoFactory.CreateFromIdAsync(rito.Id, oCnn));
        dbRec.FDescricao = rito.Descricao;
        dbRec.FTop = rito.Top;
        dbRec.FGUID = rito.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}