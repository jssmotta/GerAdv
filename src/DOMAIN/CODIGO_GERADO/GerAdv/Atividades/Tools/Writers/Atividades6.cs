// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAtividadesWriter
{
    Task<FAtividades> WriteAsync(Models.Atividades atividades, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(AtividadesResponse atividades, int operadorId, MsiSqlConnection? oCnn);
}

public class AtividadesWriter(IFAtividadesFactory atividadesFactory) : IAtividadesWriter
{
    private readonly IFAtividadesFactory _atividadesFactory = atividadesFactory ?? throw new ArgumentNullException(nameof(atividadesFactory));
    public virtual async Task Delete(AtividadesResponse atividades, int operadorId, MsiSqlConnection? oCnn)
    {
        await _atividadesFactory.DeleteAsync(operadorId, atividades.Id, oCnn);
    }

    public virtual async Task<FAtividades> WriteAsync(Models.Atividades atividades, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (atividades.Id.IsEmptyIDNumber() ? _atividadesFactory.CreateAsync() : _atividadesFactory.CreateFromIdAsync(atividades.Id, oCnn));
        dbRec.FDescricao = atividades.Descricao;
        dbRec.FGUID = atividades.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}