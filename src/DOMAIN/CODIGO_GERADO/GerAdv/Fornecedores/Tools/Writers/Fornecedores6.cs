// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IFornecedoresWriter
{
    Task<FFornecedores> WriteAsync(Models.Fornecedores fornecedores, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(FornecedoresResponse fornecedores, int operadorId, MsiSqlConnection oCnn);
}

public class FornecedoresWriter(IFFornecedoresFactory fornecedoresFactory) : IFornecedoresWriter
{
    private readonly IFFornecedoresFactory _fornecedoresFactory = fornecedoresFactory ?? throw new ArgumentNullException(nameof(fornecedoresFactory));
    public virtual async Task Delete(FornecedoresResponse fornecedores, int operadorId, MsiSqlConnection oCnn)
    {
        await _fornecedoresFactory.DeleteAsync(operadorId, fornecedores.Id, oCnn);
    }

    public virtual async Task<FFornecedores> WriteAsync(Models.Fornecedores fornecedores, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (fornecedores.Id.IsEmptyIDNumber() ? _fornecedoresFactory.CreateAsync() : _fornecedoresFactory.CreateFromIdAsync(fornecedores.Id, oCnn));
        dbRec.FGrupo = fornecedores.Grupo;
        dbRec.FNome = fornecedores.Nome;
        dbRec.FSubGrupo = fornecedores.SubGrupo;
        dbRec.FTipo = fornecedores.Tipo;
        dbRec.FSexo = fornecedores.Sexo;
        dbRec.FCNPJ = fornecedores.CNPJ.ClearInputCnpj();
        dbRec.FInscEst = fornecedores.InscEst;
        dbRec.FCPF = fornecedores.CPF.ClearInputCpf();
        dbRec.FRG = fornecedores.RG;
        dbRec.FEndereco = fornecedores.Endereco;
        dbRec.FBairro = fornecedores.Bairro;
        dbRec.FCEP = fornecedores.CEP.ClearInputCep();
        dbRec.FCidade = fornecedores.Cidade;
        dbRec.FFone = fornecedores.Fone;
        dbRec.FFax = fornecedores.Fax;
        dbRec.FEmail = fornecedores.Email;
        dbRec.FSite = fornecedores.Site;
        dbRec.FObs = fornecedores.Obs;
        dbRec.FProdutos = fornecedores.Produtos;
        dbRec.FContatos = fornecedores.Contatos;
        dbRec.FGUID = fornecedores.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}