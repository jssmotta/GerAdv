// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ISetorWriter
{
    Task<FSetor> WriteAsync(Models.Setor setor, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(SetorResponse setor, int operadorId, MsiSqlConnection oCnn);
}

public class SetorWriter(IFSetorFactory setorFactory) : ISetorWriter
{
    private readonly IFSetorFactory _setorFactory = setorFactory;
    public async Task Delete(SetorResponse setor, int operadorId, MsiSqlConnection oCnn)
    {
        await _setorFactory.DeleteAsync(operadorId, setor.Id, oCnn);
    }

    public async Task<FSetor> WriteAsync(Models.Setor setor, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (setor.Id.IsEmptyIDNumber() ? _setorFactory.CreateAsync() : _setorFactory.CreateFromIdAsync(setor.Id, oCnn));
        dbRec.FDescricao = setor.Descricao;
        dbRec.FGUID = setor.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}