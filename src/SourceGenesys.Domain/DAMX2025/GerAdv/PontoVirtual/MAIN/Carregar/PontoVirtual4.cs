// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBPontoVirtual
{
    public DBPontoVirtual(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
    }

    public DBPontoVirtual(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PontoVirtual: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBPontoVirtualDicInfo.HoraEntrada)))
                m_FHoraEntrada = Convert.ToDateTime(getValue(DBPontoVirtualDicInfo.HoraEntrada));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPontoVirtualDicInfo.HoraSaida)))
                m_FHoraSaida = Convert.ToDateTime(getValue(DBPontoVirtualDicInfo.HoraSaida));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPontoVirtualDicInfo.Operador)))
                m_FOperador = Convert.ToInt32(getValue(DBPontoVirtualDicInfo.Operador));
        }
        catch
        {
        }

        try
        {
            m_FKey = getValue(DBPontoVirtualDicInfo.Key)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PontoVirtual: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PontoVirtual: {ex.Message}", ex);
        }
    }
}