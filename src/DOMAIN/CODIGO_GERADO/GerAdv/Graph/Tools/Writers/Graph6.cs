// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGraphWriter
{
    Task<FGraph> WriteAsync(Models.Graph graph, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GraphResponse graph, int operadorId, MsiSqlConnection oCnn);
}

public class GraphWriter(IFGraphFactory graphFactory) : IGraphWriter
{
    private readonly IFGraphFactory _graphFactory = graphFactory;
    public async Task Delete(GraphResponse graph, int operadorId, MsiSqlConnection oCnn)
    {
        await _graphFactory.DeleteAsync(operadorId, graph.Id, oCnn);
    }

    public async Task<FGraph> WriteAsync(Models.Graph graph, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (graph.Id.IsEmptyIDNumber() ? _graphFactory.CreateAsync() : _graphFactory.CreateFromIdAsync(graph.Id, oCnn));
        dbRec.FTabela = graph.Tabela;
        dbRec.FTabelaId = graph.TabelaId;
        dbRec.FImagem = graph.Imagem;
        dbRec.FGUID = graph.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}