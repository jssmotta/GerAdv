// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// GridsMobileHook.tsx.txt
'use client';
import React, { useMemo } from 'react';
import { Grid, GridColumn } from '@progress/kendo-react-grid';
import { ILigacoes } from '../../Interfaces/interface.Ligacoes';
import { CRUD_CONSTANTS, formatCurrency, formatDateBrowser } from '@/app/tools/crud';
import '@/app/styles/MobileCrudGrid.css';
import { useLigacoesGrid } from '../../Hooks/hookLigacoesGrid';
import { useRouter } from 'next/navigation';
import { SvgIcon } from '@progress/kendo-react-common';
import { pencilIcon, searchIcon } from '@progress/kendo-svg-icons';
interface LigacoesGridProps {
  data: ILigacoes[];
  onRowClick: (ligacoes: ILigacoes) => void;
  onDeleteClick: (e: any) => void;
  setSelectedId: (id: number | null) => void;
}
export const LigacoesGridMobileComponent = React.memo(({
  data, 
  onRowClick, 
  onDeleteClick, 
  setSelectedId, 

}: LigacoesGridProps) => {

const router = useRouter();
// ===== USO DO HOOK CENTRALIZADO =====
const {
  processedData, 
  sort, 
  handleSortChange, 
  page, 
  handlePageChange, 
  handleFilterChange, 
  handleRowClick: hookHandleRowClick, 
  RowNumberCell, 
} = useLigacoesGrid({
data, 
onRowClick, 
onDeleteClick, 
setSelectedId, 
initialTake: 10, 
useCustomSort: false, // Mobile usa useGridSort interno
});

const MaskligDataRealizadaCell = (props: any) => {
  const valor = props.dataItem[props.field];
  const formattedValue = valor ? formatCurrency(valor, 'BRL') : 'R$ 0,00';
  return <td>{formattedValue}</td>;
};
const MaskligRealizadaCell = (props: any) => {
  const valor = props.dataItem[props.field];
  const formattedValue = valor ? formatCurrency(valor, 'BRL') : 'R$ 0,00';
  return <td>{formattedValue}</td>;
};
// ===== CONFIGURAÇÃO DE COLUNAS =====
const gridColumns = useMemo(() => [
  <GridColumn format='{0:n0}' field='index' title='#' sortable={false} filterable={false} width='55px' cells={{ data: RowNumberCell }} />,

  ], [RowNumberCell]);
  // ===== RENDER =====
  return (
  <Grid
  className='grid-mobile-crud grid-mobile-ligacoes'
  data={processedData.slice(page.skip, page.skip + page.take)}
  skip={page.skip}
  take={page.take}
  total={processedData.length}
  pageable={{
    pageSizes: Array.from(CRUD_CONSTANTS.PAGINATION.PAGE_SIZES), 
    buttonCount: CRUD_CONSTANTS.PAGINATION.BUTTON_COUNT, 
  }}
  onPageChange={handlePageChange}
  sortable={true}
  sort={sort}
  onSortChange={handleSortChange}
  resizable={true}
  reorderable={true}
  filterable={true}
  onFilterChange={handleFilterChange}
  onRowClick={(e) => hookHandleRowClick(e)}
>
{gridColumns}
</Grid>
);
});