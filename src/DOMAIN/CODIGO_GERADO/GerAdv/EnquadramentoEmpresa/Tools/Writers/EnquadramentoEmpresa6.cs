// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IEnquadramentoEmpresaWriter
{
    Task<FEnquadramentoEmpresa> WriteAsync(Models.EnquadramentoEmpresa enquadramentoempresa, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(EnquadramentoEmpresaResponse enquadramentoempresa, int operadorId, MsiSqlConnection? oCnn);
}

public class EnquadramentoEmpresaWriter(IFEnquadramentoEmpresaFactory enquadramentoempresaFactory) : IEnquadramentoEmpresaWriter
{
    private readonly IFEnquadramentoEmpresaFactory _enquadramentoempresaFactory = enquadramentoempresaFactory ?? throw new ArgumentNullException(nameof(enquadramentoempresaFactory));
    public virtual async Task Delete(EnquadramentoEmpresaResponse enquadramentoempresa, int operadorId, MsiSqlConnection? oCnn)
    {
        await _enquadramentoempresaFactory.DeleteAsync(operadorId, enquadramentoempresa.Id, oCnn);
    }

    public virtual async Task<FEnquadramentoEmpresa> WriteAsync(Models.EnquadramentoEmpresa enquadramentoempresa, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (enquadramentoempresa.Id.IsEmptyIDNumber() ? _enquadramentoempresaFactory.CreateAsync() : _enquadramentoempresaFactory.CreateFromIdAsync(enquadramentoempresa.Id, oCnn));
        dbRec.FNome = enquadramentoempresa.Nome;
        dbRec.FGUID = enquadramentoempresa.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}