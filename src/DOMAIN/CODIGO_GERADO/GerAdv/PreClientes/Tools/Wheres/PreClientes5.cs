// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Wheres;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPreClientesWhere
{
    PreClientesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn);
}

public partial class PreClientesWhere(IFPreClientesFactory preclientesFactory) : IPreClientesWhere
{
    private readonly IFPreClientesFactory _preclientesFactory = preclientesFactory ?? throw new ArgumentNullException(nameof(preclientesFactory));
    public PreClientesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn)
    {
        using var dbRec = _preclientesFactory.CreateFromParameters(parameters, oCnn, sqlWhere: where);
        var preclientes = new PreClientesResponse
        {
            Id = dbRec.ID,
            Inativo = dbRec.FInativo,
            QuemIndicou = dbRec.FQuemIndicou ?? string.Empty,
            Nome = dbRec.FNome ?? string.Empty,
            Adv = dbRec.FAdv,
            IDRep = dbRec.FIDRep,
            Juridica = dbRec.FJuridica,
            NomeFantasia = dbRec.FNomeFantasia ?? string.Empty,
            Class = dbRec.FClass ?? string.Empty,
            Tipo = dbRec.FTipo,
            InscEst = dbRec.FInscEst ?? string.Empty,
            Qualificacao = dbRec.FQualificacao ?? string.Empty,
            Sexo = dbRec.FSexo,
            Idade = dbRec.FIdade,
            CNPJ = dbRec.FCNPJ ?? string.Empty,
            CPF = dbRec.FCPF ?? string.Empty,
            RG = dbRec.FRG ?? string.Empty,
            TipoCaptacao = dbRec.FTipoCaptacao,
            Observacao = dbRec.FObservacao ?? string.Empty,
            Endereco = dbRec.FEndereco ?? string.Empty,
            Bairro = dbRec.FBairro ?? string.Empty,
            Cidade = dbRec.FCidade,
            CEP = dbRec.FCEP ?? string.Empty,
            Fax = dbRec.FFax ?? string.Empty,
            Fone = dbRec.FFone ?? string.Empty,
            Data = dbRec.FData ?? string.Empty,
            HomePage = dbRec.FHomePage ?? string.Empty,
            EMail = dbRec.FEMail ?? string.Empty,
            Assistido = dbRec.FAssistido ?? string.Empty,
            AssRG = dbRec.FAssRG ?? string.Empty,
            AssEndereco = dbRec.FAssEndereco ?? string.Empty,
            CNH = dbRec.FCNH ?? string.Empty,
            AssCPF = dbRec.FAssCPF ?? string.Empty,
        };
        if (DateTime.TryParse(dbRec.FDtNasc, out DateTime XDtNasc))
        {
            preclientes.DtNasc = dbRec.FDtNasc;
            preclientes.DtNasc_date = XDtNasc;
        }

        return preclientes;
    }
}