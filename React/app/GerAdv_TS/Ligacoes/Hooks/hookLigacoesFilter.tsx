// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterLigacoes } from '@/app/GerAdv_TS/Ligacoes/Filters/Ligacoes';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
import RamalComboBox from '@/app/GerAdv_TS/Ramal/ComboBox/Ramal';
interface UseLigacoesFilterProps {
  handleFetchWithFilter: (filtro?: FilterLigacoes | undefined | null) => Promise<void>;
}
interface UseLigacoesFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterLigacoes;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterLigacoes>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterLigacoes) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterLigacoes>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useLigacoesFilter = ({ handleFetchWithFilter }: UseLigacoesFilterProps): UseLigacoesFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterLigacoes>({} as FilterLigacoes);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterLigacoes;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterLigacoes) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('LigacoesFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterLigacoes>) => (
  <>
  <InputInput
  type='text'
  id='assunto'
  name='assunto'
  value={handlers.windowFilter?.assunto ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Assunto'
  label='Assunto'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ageclienteavisado'
  name='ageclienteavisado'
  value={handlers.windowFilter?.ageclienteavisado ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AgeClienteAvisado'
  label='AgeClienteAvisado (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='ageclienteavisado_end'
  name='ageclienteavisado_end'
  value={handlers.windowFilter?.ageclienteavisado_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AgeClienteAvisado final'
  label='AgeClienteAvisado final'
  disabled={handlers.windowFilter?.ageclienteavisado ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='celular'
  name='celular'
  value={handlers.windowFilter?.celular ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Celular'
  className='inputSearch inputSearchCheckbox'
  />
  <ClientesComboBox
  name='cliente'
  dataForm={null}
  value={handlers.windowFilter?.cliente}
  setValue={(e:any) => handlers.handleComboChange(e, 'cliente')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <InputInput
  type='text'
  id='contato'
  name='contato'
  value={handlers.windowFilter?.contato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Contato'
  label='Contato'
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='datarealizada'
  label='DataRealizada (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datarealizada'
  value={handlers.windowFilter?.datarealizada ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datarealizada', value)}
  />
  <InputDate
  type='text'
  id='datarealizada_end'
  label='DataRealizada (final)'
  dataForm={null}
  className='inputSearch'
  name='datarealizada_end'
  value={handlers.windowFilter?.datarealizada_end ?? ''}
  disabled={handlers.windowFilter?.datarealizada ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datarealizada_end', value)}
  />
  <InputInput
  type='text'
  id='quemid'
  name='quemid'
  value={handlers.windowFilter?.quemid ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemID'
  label='QuemID (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemid_end'
  name='quemid_end'
  value={handlers.windowFilter?.quemid_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemID final'
  label='QuemID final'
  disabled={handlers.windowFilter?.quemid ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='telefonista'
  name='telefonista'
  value={handlers.windowFilter?.telefonista ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Telefonista'
  label='Telefonista (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='telefonista_end'
  name='telefonista_end'
  value={handlers.windowFilter?.telefonista_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Telefonista final'
  label='Telefonista final'
  disabled={handlers.windowFilter?.telefonista ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='ultimoaviso'
  label='UltimoAviso (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='ultimoaviso'
  value={handlers.windowFilter?.ultimoaviso ?? ''}
  onChange={(value: string) => handlers.handleDateChange('ultimoaviso', value)}
  />
  <InputDate
  type='text'
  id='ultimoaviso_end'
  label='UltimoAviso (final)'
  dataForm={null}
  className='inputSearch'
  name='ultimoaviso_end'
  value={handlers.windowFilter?.ultimoaviso_end ?? ''}
  disabled={handlers.windowFilter?.ultimoaviso ? false: true}
  onChange={(value: string) => handlers.handleDateChange('ultimoaviso_end', value)}
  />
  <InputDate
  type='text'
  id='horafinal'
  label='HoraFinal (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='horafinal'
  value={handlers.windowFilter?.horafinal ?? ''}
  onChange={(value: string) => handlers.handleDateChange('horafinal', value)}
  />
  <InputDate
  type='text'
  id='horafinal_end'
  label='HoraFinal (final)'
  dataForm={null}
  className='inputSearch'
  name='horafinal_end'
  value={handlers.windowFilter?.horafinal_end ?? ''}
  disabled={handlers.windowFilter?.horafinal ? false: true}
  onChange={(value: string) => handlers.handleDateChange('horafinal_end', value)}
  />
  <InputInput
  type='text'
  id='nome'
  name='nome'
  value={handlers.windowFilter?.nome ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nome'
  label='Nome'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemcodigo'
  name='quemcodigo'
  value={handlers.windowFilter?.quemcodigo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemCodigo'
  label='QuemCodigo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='quemcodigo_end'
  name='quemcodigo_end'
  value={handlers.windowFilter?.quemcodigo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemCodigo final'
  label='QuemCodigo final'
  disabled={handlers.windowFilter?.quemcodigo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='solicitante'
  name='solicitante'
  value={handlers.windowFilter?.solicitante ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Solicitante'
  label='Solicitante (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='solicitante_end'
  name='solicitante_end'
  value={handlers.windowFilter?.solicitante_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Solicitante final'
  label='Solicitante final'
  disabled={handlers.windowFilter?.solicitante ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='para'
  name='para'
  value={handlers.windowFilter?.para ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Para'
  label='Para'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fone'
  name='fone'
  value={handlers.windowFilter?.fone ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fone'
  label='Fone'
  className='inputIncNome inputSearch'
  />
  <RamalComboBox
  name='ramal'
  dataForm={null}
  value={handlers.windowFilter?.ramal}
  setValue={(e:any) => handlers.handleComboChange(e, 'ramal')}
  className='inputSearch inputSearchComboboxTab'
  label='Ramal'
  />
  <InputComboFilterYesNo
  type='text'
  id='particular'
  name='particular'
  value={handlers.windowFilter?.particular ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Particular'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='realizada'
  name='realizada'
  value={handlers.windowFilter?.realizada ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Realizada'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='status'
  name='status'
  value={handlers.windowFilter?.status ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Status'
  label='Status'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <InputDate
  type='text'
  id='hora'
  label='Hora (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='hora'
  value={handlers.windowFilter?.hora ?? ''}
  onChange={(value: string) => handlers.handleDateChange('hora', value)}
  />
  <InputDate
  type='text'
  id='hora_end'
  label='Hora (final)'
  dataForm={null}
  className='inputSearch'
  name='hora_end'
  value={handlers.windowFilter?.hora_end ?? ''}
  disabled={handlers.windowFilter?.hora ? false: true}
  onChange={(value: string) => handlers.handleDateChange('hora_end', value)}
  />
  <InputComboFilterYesNo
  type='text'
  id='urgente'
  name='urgente'
  value={handlers.windowFilter?.urgente ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Urgente'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='ligarpara'
  name='ligarpara'
  value={handlers.windowFilter?.ligarpara ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe LigarPara'
  label='LigarPara'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='processo'
  name='processo'
  value={handlers.windowFilter?.processo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Processo'
  label='Processo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='processo_end'
  name='processo_end'
  value={handlers.windowFilter?.processo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Processo final'
  label='Processo final'
  disabled={handlers.windowFilter?.processo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='startscreen'
  name='startscreen'
  value={handlers.windowFilter?.startscreen ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='StartScreen'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='emotion'
  name='emotion'
  value={handlers.windowFilter?.emotion ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Emotion'
  label='Emotion (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='emotion_end'
  name='emotion_end'
  value={handlers.windowFilter?.emotion_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Emotion final'
  label='Emotion final'
  disabled={handlers.windowFilter?.emotion ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};