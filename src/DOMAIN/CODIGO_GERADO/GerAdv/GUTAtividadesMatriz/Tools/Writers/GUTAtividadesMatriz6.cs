// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTAtividadesMatrizWriter
{
    Task<FGUTAtividadesMatriz> WriteAsync(Models.GUTAtividadesMatriz gutatividadesmatriz, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GUTAtividadesMatrizResponse gutatividadesmatriz, int operadorId, MsiSqlConnection oCnn);
}

public class GUTAtividadesMatrizWriter(IFGUTAtividadesMatrizFactory gutatividadesmatrizFactory) : IGUTAtividadesMatrizWriter
{
    private readonly IFGUTAtividadesMatrizFactory _gutatividadesmatrizFactory = gutatividadesmatrizFactory ?? throw new ArgumentNullException(nameof(gutatividadesmatrizFactory));
    public virtual async Task Delete(GUTAtividadesMatrizResponse gutatividadesmatriz, int operadorId, MsiSqlConnection oCnn)
    {
        await _gutatividadesmatrizFactory.DeleteAsync(operadorId, gutatividadesmatriz.Id, oCnn);
    }

    public virtual async Task<FGUTAtividadesMatriz> WriteAsync(Models.GUTAtividadesMatriz gutatividadesmatriz, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (gutatividadesmatriz.Id.IsEmptyIDNumber() ? _gutatividadesmatrizFactory.CreateAsync() : _gutatividadesmatrizFactory.CreateFromIdAsync(gutatividadesmatriz.Id, oCnn));
        dbRec.FGUTMatriz = gutatividadesmatriz.GUTMatriz;
        dbRec.FGUTAtividade = gutatividadesmatriz.GUTAtividade;
        dbRec.FGUID = gutatividadesmatriz.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}