// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBPrepostos
{
    public DBPrepostos(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBPrepostos(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Prepostos: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBPrepostosDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBPrepostosDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBPrepostosDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.CTPSDtEmissao)))
                m_FCTPSDtEmissao = Convert.ToDateTime(getValue(DBPrepostosDicInfo.CTPSDtEmissao));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBPrepostosDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBPrepostosDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBPrepostosDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBPrepostosDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Funcao)))
                m_FFuncao = Convert.ToInt32(getValue(DBPrepostosDicInfo.Funcao));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Idade)))
                m_FIdade = Convert.ToInt32(getValue(DBPrepostosDicInfo.Idade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.LiberaAgenda)))
                m_FLiberaAgenda = Convert.ToBoolean(getValue(DBPrepostosDicInfo.LiberaAgenda));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Periodo_Fim)))
                m_FPeriodo_Fim = Convert.ToDateTime(getValue(DBPrepostosDicInfo.Periodo_Fim));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Periodo_Ini)))
                m_FPeriodo_Ini = Convert.ToDateTime(getValue(DBPrepostosDicInfo.Periodo_Ini));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBPrepostosDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBPrepostosDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Salario)))
                m_FSalario = Convert.ToDecimal(getValue(DBPrepostosDicInfo.Salario));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Setor)))
                m_FSetor = Convert.ToInt32(getValue(DBPrepostosDicInfo.Setor));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBPrepostosDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPrepostosDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBPrepostosDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBPrepostosDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBPrepostosDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBPrepostosDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBPrepostosDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCTPSNumero = getValue(DBPrepostosDicInfo.CTPSNumero)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCTPSSerie = getValue(DBPrepostosDicInfo.CTPSSerie)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBPrepostosDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBPrepostosDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBPrepostosDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBPrepostosDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBPrepostosDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FMae = getValue(DBPrepostosDicInfo.Mae)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBPrepostosDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacao = getValue(DBPrepostosDicInfo.Observacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FPai = getValue(DBPrepostosDicInfo.Pai)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FPIS = getValue(DBPrepostosDicInfo.PIS)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FQualificacao = getValue(DBPrepostosDicInfo.Qualificacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRegistro = getValue(DBPrepostosDicInfo.Registro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBPrepostosDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Prepostos: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Prepostos: {ex.Message}", ex);
        }
    }
}