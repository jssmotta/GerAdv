// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPaisesWriter
{
    Task<FPaises> WriteAsync(Models.Paises paises, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(PaisesResponse paises, int operadorId, MsiSqlConnection? oCnn);
}

public class PaisesWriter(IFPaisesFactory paisesFactory) : IPaisesWriter
{
    private readonly IFPaisesFactory _paisesFactory = paisesFactory ?? throw new ArgumentNullException(nameof(paisesFactory));
    public virtual async Task Delete(PaisesResponse paises, int operadorId, MsiSqlConnection? oCnn)
    {
        await _paisesFactory.DeleteAsync(operadorId, paises.Id, oCnn);
    }

    public virtual async Task<FPaises> WriteAsync(Models.Paises paises, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (paises.Id.IsEmptyIDNumber() ? _paisesFactory.CreateAsync() : _paisesFactory.CreateFromIdAsync(paises.Id, oCnn));
        dbRec.FNome = paises.Nome;
        dbRec.FGUID = paises.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}