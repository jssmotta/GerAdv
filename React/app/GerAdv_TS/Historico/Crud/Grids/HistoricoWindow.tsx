// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    // CrudWindow.tsx
'use client';
import React, { useEffect } from 'react';
import { EditWindow } from '@/app/components/Cruds/EditWindow';
import HistoricoInc from '../Inc/Historico';
import { IHistorico } from '../../Interfaces/interface.Historico';
import { useIsMobile } from '@/app/context/MobileContext';
import { HistoricoEmpty } from '@/app/GerAdv_TS/Models/Historico';
import { useWindow } from '@/app/hooks/useWindows';
interface HistoricoWindowProps {
  isOpen: boolean;
  onClose: () => void;
  dimensions?: { width: number; height: number };
  selectedHistorico?: IHistorico;
  onSuccess: (registro?: any) => void;
  onError: () => void;
}
const HistoricoWindow: React.FC<HistoricoWindowProps> = ({
  isOpen, 
  onClose, 
  dimensions, 
  selectedHistorico, 
  onSuccess, 
  onError, 
}) => {

const isMobile = useIsMobile();
const dimensionsEmpty = useWindow();
if (!isOpen)
  return null;
  return (
  <>

  <EditWindow
  tableTitle='Historico'
  isOpen={isOpen}
  onClose={onClose}
  dimensions={dimensions ?? dimensionsEmpty}
  newHeight={671}
  newWidth={1250}
  mobile={isMobile}
  id={(selectedHistorico?.id ?? 0).toString()}
>
<HistoricoInc
id={selectedHistorico?.id ?? 0}
onClose={onClose}
onSuccess={onSuccess}
onError={onError}
/>
</EditWindow>

</>
);
};
export const NewWindowHistorico: React.FC<HistoricoWindowProps> = ({
  isOpen, 
  onClose, 
}) => {
const dimensions = useWindow();
return (
<HistoricoWindow
isOpen={isOpen}
onClose={onClose}
dimensions={dimensions}
onSuccess={onClose}
onError={onClose}
selectedHistorico={HistoricoEmpty()}>
</HistoricoWindow>
)
};
export default HistoricoWindow;