// 100% auto-generated by Source Genesys Core
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// ReSharper disable once CheckNamespace
namespace MenphisSI.SG.GerAdv;
[Serializable]
// ReSharper disable once InconsistentNaming
public partial class DBProcessosParados : XCodeIdBase, ICadastros
{
#region TableDefinition_ProcessosParados
    [XmlIgnore]
    public string TabelaNome => "ProcessosParados";

    public DBProcessosParados()
    {
    }

#endregion
    // REF. 250325
    public DBProcessosParados(List<SqlParameter> parameters, MsiSqlConnection? oCnn = null, string? fullSql = "", string sqlWhere = "", in string join = "")
    {
        // Tracking: 250605-3
        if (oCnn is null)
            return;
        if (string.IsNullOrEmpty(fullSql))
        {
            if (sqlWhere.NotIsEmpty() || fullSql.NotIsEmpty())
            {
                using var ds = ConfiguracoesDBT.GetDataTable(parameters, fullSql.IsEmpty() ? $"SET NOCOUNT ON; SELECT TOP (1) {CamposSqlX} FROM {PTabelaNome.dbo(oCnn)} (NOLOCK) {join}  WHERE {sqlWhere};" : fullSql, CommandBehavior.SingleRow, oCnn);
                if (ds != null)
                    CarregarDadosBd(ds.Rows.Count.IsEmptyIDNumber() ? null : ds.Rows[0]);
            }
            else
            {
                throw new Exception("Erro de parâmetros sqlWhere: ProcessosParados");
            }
        }
        else
        {
            using var ds = ConfiguracoesDBT.GetDataTable(fullSql, CommandBehavior.SingleRow, oCnn);
            if (ds != null)
                CarregarDadosBd(ds.Rows.Count.IsEmptyIDNumber() ? null : ds.Rows[0]);
        }
    }

#region GravarDados_ProcessosParados
    internal int Update(MsiSqlConnection? oCnn, int insertId = 0)
    {
        var isInsert = insertId == 0 && ID == 0;
        if (!isInsert)
            if (!(pFldFProcesso || pFldFSemana || pFldFAno || pFldFDataHora || pFldFOperador || pFldFDataHistorico || pFldFDataNENotas))
                return 0;
        if (oCnn is null)
#if (DEBUG)
			        {
				        PTabelaNome.PopupBox("oCnn is null - Update()");
#else
            return 0;
#endif
#if (DEBUG)
			         }
#endif
        var clsW = new DBToolWTable32(PTabelaNome, CampoCodigo, ID == 0)
        {
            IsMachineCode = true
        };
        if (clsW.Insert)
        {
            clsW.Identity = true;
        }
        else
        {
#if (!shadowsDisabled && !shadows_MenphisSI_SG_GerAdv && !shadows_MenphisSI_SG_GerAdv_ProcessosParados)
#endif
            clsW.Where = $"{CampoCodigo}={ID}";
        }

        if (pFldFProcesso)
            clsW.Fields(DBProcessosParadosDicInfo.Processo, m_FProcesso, ETiposCampos.FNumberNull);
        if (pFldFSemana)
            clsW.Fields(DBProcessosParadosDicInfo.Semana, m_FSemana, ETiposCampos.FNumberNull);
        if (pFldFAno)
            clsW.Fields(DBProcessosParadosDicInfo.Ano, m_FAno, ETiposCampos.FNumberNull);
        if (pFldFDataHora)
            clsW.Fields(DBProcessosParadosDicInfo.DataHora, m_FDataHora, ETiposCampos.FDate);
        if (pFldFOperador)
            clsW.Fields(DBProcessosParadosDicInfo.Operador, m_FOperador, ETiposCampos.FNumberNull);
        if (pFldFDataHistorico)
            clsW.Fields(DBProcessosParadosDicInfo.DataHistorico, m_FDataHistorico, ETiposCampos.FDate);
        if (pFldFDataNENotas)
            clsW.Fields(DBProcessosParadosDicInfo.DataNENotas, m_FDataNENotas, ETiposCampos.FDate);
        if (insertId != 0)
            return GravaNewId();
        var cRet = clsW.RecUpdate(oCnn);
        if (!clsW.Insert)
            return Error;
        if (!cRet.Equals("OK"))
            return Error;
        ID = clsW.GetCodigo();
        if (CampoCodigo.IsEmpty())
        {
        }
        else if (ID == 0)
        {
            Error = -2;
            ErrorDescription = "900xh100 - O registro não pode ser incluído, tente mais tarde.";
#if (!IgnoreExploreMSIDb)
            throw new Exception($"{clsW.Table} {clsW.LastError}, {ErrorDescription}, {cRet}");
#endif
        }

        int GravaNewId()
        {
            ID = insertId;
            cRet = clsW.RecUpdate(oCnn, true);
            if (cRet.Equals("OK"))
                return 0;
            ErrorDescription = "Erro de inclusão insertiva de Id!";
            return -3;
        }

        return Error;
    }
#endregion // 001

}