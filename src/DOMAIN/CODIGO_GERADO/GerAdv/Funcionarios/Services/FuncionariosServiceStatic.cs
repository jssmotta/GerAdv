// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class FuncionariosService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterFuncionarios filtro)
    {
        var parameters = new List<SqlParameter>();
        if (!string.IsNullOrEmpty(filtro.EMailPro))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.EMailPro)}", ApplyWildCard(filtro.WildcardChar, filtro.EMailPro)));
        }

        if (filtro.Cargo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Cargo)}", filtro.Cargo));
        }

        if (!string.IsNullOrEmpty(filtro.Nome))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Nome)}", ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Funcao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Funcao)}", filtro.Funcao));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Sexo)}", filtro.Sexo));
        }

        if (!string.IsNullOrEmpty(filtro.Registro))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Registro)}", ApplyWildCard(filtro.WildcardChar, filtro.Registro)));
        }

        if (!string.IsNullOrEmpty(filtro.CPF))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CPF)}", ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrEmpty(filtro.RG))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.RG)}", ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!string.IsNullOrEmpty(filtro.Observacao))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Observacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrEmpty(filtro.Endereco))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Endereco)}", ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrEmpty(filtro.Bairro))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Bairro)}", ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Cidade)}", filtro.Cidade));
        }

        if (!string.IsNullOrEmpty(filtro.CEP))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CEP)}", ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrEmpty(filtro.Contato))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Contato)}", ApplyWildCard(filtro.WildcardChar, filtro.Contato)));
        }

        if (!string.IsNullOrEmpty(filtro.Fax))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Fax)}", ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrEmpty(filtro.Fone))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Fone)}", ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.EMail)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!filtro.Periodo_Ini.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Periodo_Ini, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Periodo_Ini)}", dataParam));
        }

        if (!filtro.Periodo_Ini_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Periodo_Ini_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Periodo_Ini)}_end", dataParam));
        }

        if (!filtro.Periodo_Fim.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Periodo_Fim, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Periodo_Fim)}", dataParam));
        }

        if (!filtro.Periodo_Fim_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Periodo_Fim_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Periodo_Fim)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.CTPSNumero))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CTPSNumero)}", ApplyWildCard(filtro.WildcardChar, filtro.CTPSNumero)));
        }

        if (!string.IsNullOrEmpty(filtro.CTPSSerie))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CTPSSerie)}", ApplyWildCard(filtro.WildcardChar, filtro.CTPSSerie)));
        }

        if (!string.IsNullOrEmpty(filtro.PIS))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.PIS)}", ApplyWildCard(filtro.WildcardChar, filtro.PIS)));
        }

        if (filtro.Salario != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Salario)}", filtro.Salario));
        }

        if (filtro.Salario_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Salario)}_end", filtro.Salario_end));
        }

        if (!filtro.CTPSDtEmissao.IsEmpty())
        {
            if (DateTime.TryParse(filtro.CTPSDtEmissao, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}", dataParam));
        }

        if (!filtro.CTPSDtEmissao_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.CTPSDtEmissao_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}_end", dataParam));
        }

        if (!filtro.DtNasc.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.DtNasc)}", dataParam));
        }

        if (!filtro.DtNasc_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.DtNasc)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.Data))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Data)}", ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (filtro.LiberaAgenda != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.LiberaAgenda)}", filtro.LiberaAgenda));
        }

        if (!string.IsNullOrEmpty(filtro.Pasta))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Pasta)}", ApplyWildCard(filtro.WildcardChar, filtro.Pasta)));
        }

        if (!string.IsNullOrEmpty(filtro.Class))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.Class)}", ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBFuncionariosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.EMailPro.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.EMailPro}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.EMailPro)}");
        cWhere.Append(filtro.Cargo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Cargo}] = @{nameof(DBFuncionariosDicInfo.Cargo)}");
        cWhere.Append(filtro.Nome.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Nome)}");
        cWhere.Append(filtro.Funcao <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Funcao}] = @{nameof(DBFuncionariosDicInfo.Funcao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Sexo}] = @{nameof(DBFuncionariosDicInfo.Sexo)}");
        cWhere.Append(filtro.Registro.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Registro}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Registro)}");
        cWhere.Append(filtro.CPF.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.RG)}");
        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Tipo}] = @{nameof(DBFuncionariosDicInfo.Tipo)}");
        cWhere.Append(filtro.Observacao.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Observacao)}");
        cWhere.Append(filtro.Endereco.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Bairro)}");
        cWhere.Append(filtro.Cidade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Cidade}] = @{nameof(DBFuncionariosDicInfo.Cidade)}");
        cWhere.Append(filtro.CEP.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.CEP)}");
        cWhere.Append(filtro.Contato.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Contato}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Contato)}");
        cWhere.Append(filtro.Fax.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Fax)}");
        cWhere.Append(filtro.Fone.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Fone)}");
        cWhere.Append(filtro.EMail.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.EMail)}");
        if (!filtro.Periodo_Ini.IsEmpty() && filtro.Periodo_Ini_end.IsEmpty())
        {
            cWhere.Append(filtro.Periodo_Ini.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Periodo_Ini}], 103) >= CONVERT(DATE, @{nameof(DBFuncionariosDicInfo.Periodo_Ini)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.Periodo_Ini.IsEmpty() && filtro.Periodo_Ini_end.IsEmpty()) ? string.Empty : (!(filtro.Periodo_Ini.IsEmpty()) && !(filtro.Periodo_Ini_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Ini} BETWEEN @{nameof(DBFuncionariosDicInfo.Periodo_Ini)} AND @{nameof(DBFuncionariosDicInfo.Periodo_Ini)}_end" : !(filtro.Periodo_Ini.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Ini} = @{nameof(DBFuncionariosDicInfo.Periodo_Ini)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Ini} <= @{nameof(DBFuncionariosDicInfo.Periodo_Ini)}_end");
        }

        if (!filtro.Periodo_Fim.IsEmpty() && filtro.Periodo_Fim_end.IsEmpty())
        {
            cWhere.Append(filtro.Periodo_Fim.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Periodo_Fim}], 103) >= CONVERT(DATE, @{nameof(DBFuncionariosDicInfo.Periodo_Fim)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.Periodo_Fim.IsEmpty() && filtro.Periodo_Fim_end.IsEmpty()) ? string.Empty : (!(filtro.Periodo_Fim.IsEmpty()) && !(filtro.Periodo_Fim_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Fim} BETWEEN @{nameof(DBFuncionariosDicInfo.Periodo_Fim)} AND @{nameof(DBFuncionariosDicInfo.Periodo_Fim)}_end" : !(filtro.Periodo_Fim.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Fim} = @{nameof(DBFuncionariosDicInfo.Periodo_Fim)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Periodo_Fim} <= @{nameof(DBFuncionariosDicInfo.Periodo_Fim)}_end");
        }

        cWhere.Append(filtro.CTPSNumero.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CTPSNumero}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.CTPSNumero)}");
        cWhere.Append(filtro.CTPSSerie.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CTPSSerie}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.CTPSSerie)}");
        cWhere.Append(filtro.PIS.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.PIS}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.PIS)}");
        if (!filtro.Salario.IsEmpty() && filtro.Salario_end.IsEmpty())
        {
            cWhere.Append(filtro.Salario == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Salario}] >= @{nameof(DBFuncionariosDicInfo.Salario)}");
        }
        else
        {
            cWhere.Append((filtro.Salario == decimal.MinValue && filtro.Salario_end == decimal.MinValue) ? string.Empty : (!(filtro.Salario == decimal.MinValue) && !(filtro.Salario_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Salario} BETWEEN @{nameof(DBFuncionariosDicInfo.Salario)} AND @{nameof(DBFuncionariosDicInfo.Salario)}_end" : !(filtro.Salario == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Salario} = @{nameof(DBFuncionariosDicInfo.Salario)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.Salario} <= @{nameof(DBFuncionariosDicInfo.Salario)}_end");
        }

        if (!filtro.CTPSDtEmissao.IsEmpty() && filtro.CTPSDtEmissao_end.IsEmpty())
        {
            cWhere.Append(filtro.CTPSDtEmissao.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CTPSDtEmissao}], 103) >= CONVERT(DATE, @{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.CTPSDtEmissao.IsEmpty() && filtro.CTPSDtEmissao_end.IsEmpty()) ? string.Empty : (!(filtro.CTPSDtEmissao.IsEmpty()) && !(filtro.CTPSDtEmissao_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CTPSDtEmissao} BETWEEN @{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)} AND @{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}_end" : !(filtro.CTPSDtEmissao.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CTPSDtEmissao} = @{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CTPSDtEmissao} <= @{nameof(DBFuncionariosDicInfo.CTPSDtEmissao)}_end");
        }

        if (!filtro.DtNasc.IsEmpty() && filtro.DtNasc_end.IsEmpty())
        {
            cWhere.Append(filtro.DtNasc.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.DtNasc}], 103) >= CONVERT(DATE, @{nameof(DBFuncionariosDicInfo.DtNasc)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.DtNasc.IsEmpty() && filtro.DtNasc_end.IsEmpty()) ? string.Empty : (!(filtro.DtNasc.IsEmpty()) && !(filtro.DtNasc_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.DtNasc} BETWEEN @{nameof(DBFuncionariosDicInfo.DtNasc)} AND @{nameof(DBFuncionariosDicInfo.DtNasc)}_end" : !(filtro.DtNasc.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.DtNasc} = @{nameof(DBFuncionariosDicInfo.DtNasc)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.DtNasc} <= @{nameof(DBFuncionariosDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.Data.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Data)}");
        cWhere.Append(filtro.LiberaAgenda == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.LiberaAgenda}] = @{nameof(DBFuncionariosDicInfo.LiberaAgenda)}");
        cWhere.Append(filtro.Pasta.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Pasta}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Pasta)}");
        cWhere.Append(filtro.Class.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.Class)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBFuncionariosDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CampoCodigo}] >= @{nameof(DBFuncionariosDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CampoCodigo} BETWEEN @{nameof(DBFuncionariosDicInfo.CampoCodigo)} AND @{nameof(DBFuncionariosDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CampoCodigo} = @{nameof(DBFuncionariosDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBFuncionariosDicInfo.CampoCodigo} <= @{nameof(DBFuncionariosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterFuncionarios? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(uri, "", [], oCnn);
        var cacheKey = $"{uri}-Funcionarios-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBFuncionariosDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<FuncionariosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}