// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// ReSharper disable once CheckNamespace
namespace MenphisSI.SG.GerAdv.DicInfo;
[Serializable]
public partial class DBAdvogadosODicInfo : IODicInfo
{
    public ImmutableArray<DBInfoSystem> IListFields() => List;
    public ImmutableArray<DBInfoSystem> IFieldsRaw() => ListWithoutAuditor;
    public ImmutableArray<DBInfoSystem> IPkFields() => ListPk();
    public ImmutableArray<DBInfoSystem> IPkIndicesFields() => ListPkIndices();
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITabelaNome() => DBAdvogadosDicInfo.TabelaNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoCodigo() => DBAdvogadosDicInfo.CampoCodigo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITypeFieldCode() => "int";
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string IPrefixo() => DBAdvogadosDicInfo.TablePrefix;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IdIsIdentity() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasAuditor() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasNameId() => true;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IIsStoredProcedureOrView() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoNome() => DBAdvogadosDicInfo.CampoNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string NameSpace() => nameof(GerAdv);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool TemAuditor() => true;
    private static readonly FrozenDictionary<string, DBInfoSystem> _fieldLookup = List.ToFrozenDictionary(f => f.FNome, StringComparer.OrdinalIgnoreCase);
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public DBInfoSystem? GetInfoSystemByNameField(string campo) => _fieldLookup.GetValueOrDefault(campo);
    public static string TCampoCodigo => DBAdvogadosDicInfo.CampoCodigo;
    public static string TCampoNome => DBAdvogadosDicInfo.CampoNome;
    public static string TTabelaNome => DBAdvogadosDicInfo.TabelaNome;
    public static string TTablePrefix => DBAdvogadosDicInfo.TablePrefix;
    public static ImmutableArray<DBInfoSystem> List => [DBAdvogadosDicInfo.AdvCargo, DBAdvogadosDicInfo.AdvEMailPro, DBAdvogadosDicInfo.AdvCPF, DBAdvogadosDicInfo.AdvNome, DBAdvogadosDicInfo.AdvRG, DBAdvogadosDicInfo.AdvCasa, DBAdvogadosDicInfo.AdvNomeMae, DBAdvogadosDicInfo.AdvEscritorio, DBAdvogadosDicInfo.AdvGUID, DBAdvogadosDicInfo.AdvEstagiario, DBAdvogadosDicInfo.AdvOAB, DBAdvogadosDicInfo.AdvNomeCompleto, DBAdvogadosDicInfo.AdvEndereco, DBAdvogadosDicInfo.AdvCidade, DBAdvogadosDicInfo.AdvCEP, DBAdvogadosDicInfo.AdvSexo, DBAdvogadosDicInfo.AdvBairro, DBAdvogadosDicInfo.AdvCTPSSerie, DBAdvogadosDicInfo.AdvCTPS, DBAdvogadosDicInfo.AdvFone, DBAdvogadosDicInfo.AdvFax, DBAdvogadosDicInfo.AdvComissao, DBAdvogadosDicInfo.AdvDtInicio, DBAdvogadosDicInfo.AdvDtFim, DBAdvogadosDicInfo.AdvDtNasc, DBAdvogadosDicInfo.AdvSalario, DBAdvogadosDicInfo.AdvSecretaria, DBAdvogadosDicInfo.AdvTextoProcuracao, DBAdvogadosDicInfo.AdvEMail, DBAdvogadosDicInfo.AdvEspecializacao, DBAdvogadosDicInfo.AdvPasta, DBAdvogadosDicInfo.AdvObservacao, DBAdvogadosDicInfo.AdvContaBancaria, DBAdvogadosDicInfo.AdvParcTop, DBAdvogadosDicInfo.AdvClass, DBAdvogadosDicInfo.AdvTop, DBAdvogadosDicInfo.AdvEtiqueta, DBAdvogadosDicInfo.AdvAni, DBAdvogadosDicInfo.AdvBold, DBAdvogadosDicInfo.AdvQuemCad, DBAdvogadosDicInfo.AdvDtCad, DBAdvogadosDicInfo.AdvQuemAtu, DBAdvogadosDicInfo.AdvDtAtu, DBAdvogadosDicInfo.AdvVisto];
    public static ImmutableArray<DBInfoSystem> ListWithoutAuditor => [DBAdvogadosDicInfo.AdvCargo, DBAdvogadosDicInfo.AdvEMailPro, DBAdvogadosDicInfo.AdvCPF, DBAdvogadosDicInfo.AdvNome, DBAdvogadosDicInfo.AdvRG, DBAdvogadosDicInfo.AdvCasa, DBAdvogadosDicInfo.AdvNomeMae, DBAdvogadosDicInfo.AdvEscritorio, DBAdvogadosDicInfo.AdvGUID, DBAdvogadosDicInfo.AdvEstagiario, DBAdvogadosDicInfo.AdvOAB, DBAdvogadosDicInfo.AdvNomeCompleto, DBAdvogadosDicInfo.AdvEndereco, DBAdvogadosDicInfo.AdvCidade, DBAdvogadosDicInfo.AdvCEP, DBAdvogadosDicInfo.AdvSexo, DBAdvogadosDicInfo.AdvBairro, DBAdvogadosDicInfo.AdvCTPSSerie, DBAdvogadosDicInfo.AdvCTPS, DBAdvogadosDicInfo.AdvFone, DBAdvogadosDicInfo.AdvFax, DBAdvogadosDicInfo.AdvComissao, DBAdvogadosDicInfo.AdvDtInicio, DBAdvogadosDicInfo.AdvDtFim, DBAdvogadosDicInfo.AdvDtNasc, DBAdvogadosDicInfo.AdvSalario, DBAdvogadosDicInfo.AdvSecretaria, DBAdvogadosDicInfo.AdvTextoProcuracao, DBAdvogadosDicInfo.AdvEMail, DBAdvogadosDicInfo.AdvEspecializacao, DBAdvogadosDicInfo.AdvPasta, DBAdvogadosDicInfo.AdvObservacao, DBAdvogadosDicInfo.AdvContaBancaria, DBAdvogadosDicInfo.AdvParcTop, DBAdvogadosDicInfo.AdvClass, DBAdvogadosDicInfo.AdvTop];

    public static ImmutableArray<DBInfoSystem> ListPk()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["advCodigo"]);
        var result = campos.Where(campo => !campo.Equals(DBAdvogadosDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }

    public static ImmutableArray<DBInfoSystem> ListPkIndices()
    {
        ImmutableArray<string> campos = ImmutableArray.CreateRange(["advCodigo", "advEscritorio", "advNome"]);
        var result = campos.Where(campo => !campo.Equals(DBAdvogadosDicInfo.CampoCodigo)).Select(campo => List.FirstOrDefault(t => t.FNome == campo)).Where(item => item != null).Cast<DBInfoSystem>().Distinct().ToList();
        return result.Count > 0 ? [..result] : ImmutableArray<DBInfoSystem>.Empty;
    }
}