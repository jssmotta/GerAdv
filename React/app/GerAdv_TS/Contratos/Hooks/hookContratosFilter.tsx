// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterContratos } from '@/app/GerAdv_TS/Contratos/Filters/Contratos';
import ProcessosComboBox from '@/app/GerAdv_TS/Processos/ComboBox/Processos';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
import AdvogadosComboBox from '@/app/GerAdv_TS/Advogados/ComboBox/Advogados';
interface UseContratosFilterProps {
  handleFetchWithFilter: (filtro?: FilterContratos | undefined | null) => Promise<void>;
}
interface UseContratosFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterContratos;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterContratos>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterContratos) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterContratos>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useContratosFilter = ({ handleFetchWithFilter }: UseContratosFilterProps): UseContratosFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterContratos>({} as FilterContratos);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterContratos;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterContratos) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('ContratosFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterContratos>) => (
  <>
  <ProcessosComboBox
  name='processo'
  dataForm={null}
  value={handlers.windowFilter?.processo}
  setValue={(e:any) => handlers.handleComboChange(e, 'processo')}
  className='inputSearch inputSearchComboboxTab'
  label='Processos'
  />
  <ClientesComboBox
  name='cliente'
  dataForm={null}
  value={handlers.windowFilter?.cliente}
  setValue={(e:any) => handlers.handleComboChange(e, 'cliente')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <AdvogadosComboBox
  name='advogado'
  dataForm={null}
  value={handlers.windowFilter?.advogado}
  setValue={(e:any) => handlers.handleComboChange(e, 'advogado')}
  className='inputSearch inputSearchComboboxTab'
  label='Advogados'
  />
  <InputInput
  type='text'
  id='dia'
  name='dia'
  value={handlers.windowFilter?.dia ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Dia'
  label='Dia (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='dia_end'
  name='dia_end'
  value={handlers.windowFilter?.dia_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Dia final'
  label='Dia final'
  disabled={handlers.windowFilter?.dia ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valor'
  name='valor'
  value={handlers.windowFilter?.valor ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Valor (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valor_end'
  name='valor_end'
  value={handlers.windowFilter?.valor_end ?? 0}
  disabled={handlers.windowFilter?.valor != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Valor (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputDate
  type='text'
  id='datainicio'
  label='DataInicio (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datainicio'
  value={handlers.windowFilter?.datainicio ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datainicio', value)}
  />
  <InputDate
  type='text'
  id='datainicio_end'
  label='DataInicio (final)'
  dataForm={null}
  className='inputSearch'
  name='datainicio_end'
  value={handlers.windowFilter?.datainicio_end ?? ''}
  disabled={handlers.windowFilter?.datainicio ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datainicio_end', value)}
  />
  <InputDate
  type='text'
  id='datatermino'
  label='DataTermino (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datatermino'
  value={handlers.windowFilter?.datatermino ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datatermino', value)}
  />
  <InputDate
  type='text'
  id='datatermino_end'
  label='DataTermino (final)'
  dataForm={null}
  className='inputSearch'
  name='datatermino_end'
  value={handlers.windowFilter?.datatermino_end ?? ''}
  disabled={handlers.windowFilter?.datatermino ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datatermino_end', value)}
  />
  <InputComboFilterYesNo
  type='text'
  id='ocultarrelatorio'
  name='ocultarrelatorio'
  value={handlers.windowFilter?.ocultarrelatorio ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='OcultarRelatorio'
  className='inputSearch inputSearchCheckbox'
  />
  <InputValor
  type='text'
  id='percescritorio'
  name='percescritorio'
  value={handlers.windowFilter?.percescritorio ?? 0}
  onChange={handlers.handleInputValorChange}
  label='PercEscritorio (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='percescritorio_end'
  name='percescritorio_end'
  value={handlers.windowFilter?.percescritorio_end ?? 0}
  disabled={handlers.windowFilter?.percescritorio != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='PercEscritorio (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputValor
  type='text'
  id='valorconsultoria'
  name='valorconsultoria'
  value={handlers.windowFilter?.valorconsultoria ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorConsultoria (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorconsultoria_end'
  name='valorconsultoria_end'
  value={handlers.windowFilter?.valorconsultoria_end ?? 0}
  disabled={handlers.windowFilter?.valorconsultoria != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorConsultoria (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='tipocobranca'
  name='tipocobranca'
  value={handlers.windowFilter?.tipocobranca ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe TipoCobranca'
  label='TipoCobranca (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='tipocobranca_end'
  name='tipocobranca_end'
  value={handlers.windowFilter?.tipocobranca_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe TipoCobranca final'
  label='TipoCobranca final'
  disabled={handlers.windowFilter?.tipocobranca ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='protestar'
  name='protestar'
  value={handlers.windowFilter?.protestar ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Protestar'
  label='Protestar'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='juros'
  name='juros'
  value={handlers.windowFilter?.juros ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Juros'
  label='Juros'
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valorrealizavel'
  name='valorrealizavel'
  value={handlers.windowFilter?.valorrealizavel ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorRealizavel (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorrealizavel_end'
  name='valorrealizavel_end'
  value={handlers.windowFilter?.valorrealizavel_end ?? 0}
  disabled={handlers.windowFilter?.valorrealizavel != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorRealizavel (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='documento'
  name='documento'
  value={handlers.windowFilter?.documento ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe DOCUMENTO'
  label='DOCUMENTO'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='email1'
  name='email1'
  value={handlers.windowFilter?.email1 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail1'
  label='EMail1'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='email2'
  name='email2'
  value={handlers.windowFilter?.email2 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail2'
  label='EMail2'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='email3'
  name='email3'
  value={handlers.windowFilter?.email3 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail3'
  label='EMail3'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoa1'
  name='pessoa1'
  value={handlers.windowFilter?.pessoa1 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pessoa1'
  label='Pessoa1'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoa2'
  name='pessoa2'
  value={handlers.windowFilter?.pessoa2 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pessoa2'
  label='Pessoa2'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoa3'
  name='pessoa3'
  value={handlers.windowFilter?.pessoa3 ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pessoa3'
  label='Pessoa3'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='obs'
  name='obs'
  value={handlers.windowFilter?.obs ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe OBS'
  label='OBS'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='clientecontrato'
  name='clientecontrato'
  value={handlers.windowFilter?.clientecontrato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ClienteContrato'
  label='ClienteContrato (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='clientecontrato_end'
  name='clientecontrato_end'
  value={handlers.windowFilter?.clientecontrato_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ClienteContrato final'
  label='ClienteContrato final'
  disabled={handlers.windowFilter?.clientecontrato ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idextrangeiro'
  name='idextrangeiro'
  value={handlers.windowFilter?.idextrangeiro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IdExtrangeiro'
  label='IdExtrangeiro (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idextrangeiro_end'
  name='idextrangeiro_end'
  value={handlers.windowFilter?.idextrangeiro_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IdExtrangeiro final'
  label='IdExtrangeiro final'
  disabled={handlers.windowFilter?.idextrangeiro ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='chavecontrato'
  name='chavecontrato'
  value={handlers.windowFilter?.chavecontrato ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe ChaveContrato'
  label='ChaveContrato'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='avulso'
  name='avulso'
  value={handlers.windowFilter?.avulso ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Avulso'
  className='inputSearch inputSearchCheckbox'
  />
  <InputComboFilterYesNo
  type='text'
  id='suspenso'
  name='suspenso'
  value={handlers.windowFilter?.suspenso ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Suspenso'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='multa'
  name='multa'
  value={handlers.windowFilter?.multa ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Multa'
  label='Multa'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};