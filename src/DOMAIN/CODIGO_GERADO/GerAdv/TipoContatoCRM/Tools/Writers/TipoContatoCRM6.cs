// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ITipoContatoCRMWriter
{
    Task<FTipoContatoCRM> WriteAsync(Models.TipoContatoCRM tipocontatocrm, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(TipoContatoCRMResponse tipocontatocrm, int operadorId, MsiSqlConnection? oCnn);
}

public class TipoContatoCRMWriter(IFTipoContatoCRMFactory tipocontatocrmFactory) : ITipoContatoCRMWriter
{
    private readonly IFTipoContatoCRMFactory _tipocontatocrmFactory = tipocontatocrmFactory ?? throw new ArgumentNullException(nameof(tipocontatocrmFactory));
    public virtual async Task Delete(TipoContatoCRMResponse tipocontatocrm, int operadorId, MsiSqlConnection? oCnn)
    {
        await _tipocontatocrmFactory.DeleteAsync(operadorId, tipocontatocrm.Id, oCnn);
    }

    public virtual async Task<FTipoContatoCRM> WriteAsync(Models.TipoContatoCRM tipocontatocrm, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (tipocontatocrm.Id.IsEmptyIDNumber() ? _tipocontatocrmFactory.CreateAsync() : _tipocontatocrmFactory.CreateFromIdAsync(tipocontatocrm.Id, oCnn));
        dbRec.FNome = tipocontatocrm.Nome;
        dbRec.FGUID = tipocontatocrm.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}