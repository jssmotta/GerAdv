// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPontoVirtualAcessosWriter
{
    Task<FPontoVirtualAcessos> WriteAsync(Models.PontoVirtualAcessos pontovirtualacessos, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(PontoVirtualAcessosResponse pontovirtualacessos, int operadorId, MsiSqlConnection? oCnn);
}

public class PontoVirtualAcessosWriter(IFPontoVirtualAcessosFactory pontovirtualacessosFactory) : IPontoVirtualAcessosWriter
{
    private readonly IFPontoVirtualAcessosFactory _pontovirtualacessosFactory = pontovirtualacessosFactory ?? throw new ArgumentNullException(nameof(pontovirtualacessosFactory));
    public virtual async Task Delete(PontoVirtualAcessosResponse pontovirtualacessos, int operadorId, MsiSqlConnection? oCnn)
    {
        await _pontovirtualacessosFactory.DeleteAsync(operadorId, pontovirtualacessos.Id, oCnn);
    }

    public virtual async Task<FPontoVirtualAcessos> WriteAsync(Models.PontoVirtualAcessos pontovirtualacessos, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (pontovirtualacessos.Id.IsEmptyIDNumber() ? _pontovirtualacessosFactory.CreateAsync() : _pontovirtualacessosFactory.CreateFromIdAsync(pontovirtualacessos.Id, oCnn));
        dbRec.FOperador = pontovirtualacessos.Operador;
        dbRec.FDataHora = pontovirtualacessos.DataHora;
        dbRec.FTipo = pontovirtualacessos.Tipo;
        dbRec.FOrigem = pontovirtualacessos.Origem;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}