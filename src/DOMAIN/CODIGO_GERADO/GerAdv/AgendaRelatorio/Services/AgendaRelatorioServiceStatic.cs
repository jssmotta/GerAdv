// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class AgendaRelatorioService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterAgendaRelatorio filtro)
    {
        var parameters = new List<SqlParameter>();
        if (!filtro.vqaData.IsEmpty())
        {
            if (DateTime.TryParse(filtro.vqaData, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.vqaData)}", dataParam));
        }

        if (!filtro.vqaData_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.vqaData_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.vqaData)}_end", dataParam));
        }

        if (filtro.vqaProcesso != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}", filtro.vqaProcesso));
        }

        if (filtro.vqaProcesso_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}_end", filtro.vqaProcesso_end));
        }

        if (!string.IsNullOrEmpty(filtro.xxxParaNome))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxParaNome)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxParaNome)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxParaPessoas))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxParaPessoas)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxParaPessoas)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxBoxAudiencia))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxBoxAudiencia)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxBoxAudiencia)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxBoxAudienciaMobile))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxBoxAudienciaMobile)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxBoxAudienciaMobile)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxNomeAdvogado))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxNomeAdvogado)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxNomeAdvogado)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxNomeForo))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxNomeForo)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxNomeForo)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxNomeJustica))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxNomeJustica)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxNomeJustica)));
        }

        if (!string.IsNullOrEmpty(filtro.xxxNomeArea))
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.xxxNomeArea)}", ApplyWildCard(filtro.WildcardChar, filtro.xxxNomeArea)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.vqaData.IsEmpty() && filtro.vqaData_end.IsEmpty())
        {
            cWhere.Append(filtro.vqaData.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.vqaData}], 103) >= CONVERT(DATE, @{nameof(DBAgendaRelatorioDicInfo.vqaData)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.vqaData.IsEmpty() && filtro.vqaData_end.IsEmpty()) ? string.Empty : (!(filtro.vqaData.IsEmpty()) && !(filtro.vqaData_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaData} BETWEEN @{nameof(DBAgendaRelatorioDicInfo.vqaData)} AND @{nameof(DBAgendaRelatorioDicInfo.vqaData)}_end" : !(filtro.vqaData.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaData} = @{nameof(DBAgendaRelatorioDicInfo.vqaData)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaData} <= @{nameof(DBAgendaRelatorioDicInfo.vqaData)}_end");
        }

        if (!filtro.vqaProcesso.IsEmpty() && filtro.vqaProcesso_end.IsEmpty())
        {
            cWhere.Append(filtro.vqaProcesso <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.vqaProcesso}] >= @{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}");
        }
        else
        {
            cWhere.Append((filtro.vqaProcesso <= 0 && filtro.vqaProcesso_end <= 0) ? string.Empty : (!(filtro.vqaProcesso <= 0) && !(filtro.vqaProcesso_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaProcesso} BETWEEN @{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)} AND @{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}_end" : !(filtro.vqaProcesso <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaProcesso} = @{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.vqaProcesso} <= @{nameof(DBAgendaRelatorioDicInfo.vqaProcesso)}_end");
        }

        cWhere.Append(filtro.xxxParaNome.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxParaNome}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxParaNome)}");
        cWhere.Append(filtro.xxxParaPessoas.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxParaPessoas}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxParaPessoas)}");
        cWhere.Append(filtro.xxxBoxAudiencia.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxBoxAudiencia}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxBoxAudiencia)}");
        cWhere.Append(filtro.xxxBoxAudienciaMobile.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxBoxAudienciaMobile}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxBoxAudienciaMobile)}");
        cWhere.Append(filtro.xxxNomeAdvogado.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxNomeAdvogado}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxNomeAdvogado)}");
        cWhere.Append(filtro.xxxNomeForo.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxNomeForo}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxNomeForo)}");
        cWhere.Append(filtro.xxxNomeJustica.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxNomeJustica}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxNomeJustica)}");
        cWhere.Append(filtro.xxxNomeArea.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.xxxNomeArea}]  {DevourerConsts.MsiCollate} like @{nameof(DBAgendaRelatorioDicInfo.xxxNomeArea)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaRelatorioDicInfo.PTabelaNome}].[{DBAgendaRelatorioDicInfo.CampoCodigo}] >= @{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.CampoCodigo} BETWEEN @{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)} AND @{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.CampoCodigo} = @{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBAgendaRelatorioDicInfo.CampoCodigo} <= @{nameof(DBAgendaRelatorioDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private async Task<IEnumerable<AgendaRelatorioResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}