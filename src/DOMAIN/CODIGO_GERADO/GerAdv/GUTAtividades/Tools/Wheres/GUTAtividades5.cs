// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Wheres;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTAtividadesWhere
{
    GUTAtividadesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn);
}

public partial class GUTAtividadesWhere(IFGUTAtividadesFactory gutatividadesFactory) : IGUTAtividadesWhere
{
    private readonly IFGUTAtividadesFactory _gutatividadesFactory = gutatividadesFactory ?? throw new ArgumentNullException(nameof(gutatividadesFactory));
    public GUTAtividadesResponse Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn)
    {
        using var dbRec = _gutatividadesFactory.CreateFromParameters(parameters, oCnn, sqlWhere: where);
        var gutatividades = new GUTAtividadesResponse
        {
            Id = dbRec.ID,
            Nome = dbRec.FNome ?? string.Empty,
            Observacao = dbRec.FObservacao ?? string.Empty,
            GUTGrupo = dbRec.FGUTGrupo,
            GUTPeriodicidade = dbRec.FGUTPeriodicidade,
            Operador = dbRec.FOperador,
            GUID = dbRec.FGUID ?? string.Empty,
            Concluido = dbRec.FConcluido,
            DiasParaIniciar = dbRec.FDiasParaIniciar,
            MinutosParaRealizar = dbRec.FMinutosParaRealizar,
        };
        if (DateTime.TryParse(dbRec.FDataConcluido, out DateTime XDataConcluido))
        {
            gutatividades.DataConcluido = dbRec.FDataConcluido;
            gutatividades.DataConcluido_date = XDataConcluido;
        }

        return gutatividades;
    }
}