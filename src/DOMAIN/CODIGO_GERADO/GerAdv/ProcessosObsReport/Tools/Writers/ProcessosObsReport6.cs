// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProcessosObsReportWriter
{
    Task<FProcessosObsReport> WriteAsync(Models.ProcessosObsReport processosobsreport, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(ProcessosObsReportResponse processosobsreport, int operadorId, MsiSqlConnection? oCnn);
}

public class ProcessosObsReportWriter(IFProcessosObsReportFactory processosobsreportFactory) : IProcessosObsReportWriter
{
    private readonly IFProcessosObsReportFactory _processosobsreportFactory = processosobsreportFactory ?? throw new ArgumentNullException(nameof(processosobsreportFactory));
    public virtual async Task Delete(ProcessosObsReportResponse processosobsreport, int operadorId, MsiSqlConnection? oCnn)
    {
        await _processosobsreportFactory.DeleteAsync(operadorId, processosobsreport.Id, oCnn);
    }

    public virtual async Task<FProcessosObsReport> WriteAsync(Models.ProcessosObsReport processosobsreport, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (processosobsreport.Id.IsEmptyIDNumber() ? _processosobsreportFactory.CreateAsync() : _processosobsreportFactory.CreateFromIdAsync(processosobsreport.Id, oCnn));
        dbRec.FData = processosobsreport.Data;
        dbRec.FProcesso = processosobsreport.Processo;
        dbRec.FObservacao = processosobsreport.Observacao;
        dbRec.FHistorico = processosobsreport.Historico;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}