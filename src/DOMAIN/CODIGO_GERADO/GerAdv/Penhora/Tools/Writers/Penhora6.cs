// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPenhoraWriter
{
    Task<FPenhora> WriteAsync(Models.Penhora penhora, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(PenhoraResponse penhora, int operadorId, MsiSqlConnection oCnn);
}

public class PenhoraWriter(IFPenhoraFactory penhoraFactory) : IPenhoraWriter
{
    private readonly IFPenhoraFactory _penhoraFactory = penhoraFactory ?? throw new ArgumentNullException(nameof(penhoraFactory));
    public virtual async Task Delete(PenhoraResponse penhora, int operadorId, MsiSqlConnection oCnn)
    {
        await _penhoraFactory.DeleteAsync(operadorId, penhora.Id, oCnn);
    }

    public virtual async Task<FPenhora> WriteAsync(Models.Penhora penhora, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (penhora.Id.IsEmptyIDNumber() ? _penhoraFactory.CreateAsync() : _penhoraFactory.CreateFromIdAsync(penhora.Id, oCnn));
        dbRec.FProcesso = penhora.Processo;
        dbRec.FNome = penhora.Nome;
        dbRec.FDescricao = penhora.Descricao;
        if (penhora.DataPenhora != null)
            dbRec.FDataPenhora = penhora.DataPenhora.ToString();
        dbRec.FPenhoraStatus = penhora.PenhoraStatus;
        dbRec.FGUID = penhora.GUID;
        dbRec.FMaster = penhora.Master;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}