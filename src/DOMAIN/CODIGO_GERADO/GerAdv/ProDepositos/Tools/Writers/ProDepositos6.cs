// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProDepositosWriter
{
    Task<FProDepositos> WriteAsync(Models.ProDepositos prodepositos, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProDepositosResponse prodepositos, int operadorId, MsiSqlConnection oCnn);
}

public class ProDepositosWriter(IFProDepositosFactory prodepositosFactory) : IProDepositosWriter
{
    private readonly IFProDepositosFactory _prodepositosFactory = prodepositosFactory;
    public async Task Delete(ProDepositosResponse prodepositos, int operadorId, MsiSqlConnection oCnn)
    {
        await _prodepositosFactory.DeleteAsync(operadorId, prodepositos.Id, oCnn);
    }

    public async Task<FProDepositos> WriteAsync(Models.ProDepositos prodepositos, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (prodepositos.Id.IsEmptyIDNumber() ? _prodepositosFactory.CreateAsync() : _prodepositosFactory.CreateFromIdAsync(prodepositos.Id, oCnn));
        dbRec.FProcesso = prodepositos.Processo;
        dbRec.FFase = prodepositos.Fase;
        dbRec.FData = prodepositos.Data;
        dbRec.FValor = prodepositos.Valor;
        dbRec.FTipoProDesposito = prodepositos.TipoProDesposito;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}