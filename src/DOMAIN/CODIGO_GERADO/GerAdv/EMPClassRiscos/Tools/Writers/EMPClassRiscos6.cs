// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IEMPClassRiscosWriter
{
    Task<FEMPClassRiscos> WriteAsync(Models.EMPClassRiscos empclassriscos, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(EMPClassRiscosResponse empclassriscos, int operadorId, MsiSqlConnection oCnn);
}

public class EMPClassRiscosWriter(IFEMPClassRiscosFactory empclassriscosFactory) : IEMPClassRiscosWriter
{
    private readonly IFEMPClassRiscosFactory _empclassriscosFactory = empclassriscosFactory ?? throw new ArgumentNullException(nameof(empclassriscosFactory));
    public virtual async Task Delete(EMPClassRiscosResponse empclassriscos, int operadorId, MsiSqlConnection oCnn)
    {
        await _empclassriscosFactory.DeleteAsync(operadorId, empclassriscos.Id, oCnn);
    }

    public virtual async Task<FEMPClassRiscos> WriteAsync(Models.EMPClassRiscos empclassriscos, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (empclassriscos.Id.IsEmptyIDNumber() ? _empclassriscosFactory.CreateAsync() : _empclassriscosFactory.CreateFromIdAsync(empclassriscos.Id, oCnn));
        dbRec.FNome = empclassriscos.Nome;
        dbRec.FGUID = empclassriscos.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}