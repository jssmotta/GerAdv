// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterLivroCaixa } from '@/app/GerAdv_TS/LivroCaixa/Filters/LivroCaixa';
interface UseLivroCaixaFilterProps {
  handleFetchWithFilter: (filtro?: FilterLivroCaixa | undefined | null) => Promise<void>;
}
interface UseLivroCaixaFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterLivroCaixa;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterLivroCaixa>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterLivroCaixa) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterLivroCaixa>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useLivroCaixaFilter = ({ handleFetchWithFilter }: UseLivroCaixaFilterProps): UseLivroCaixaFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterLivroCaixa>({} as FilterLivroCaixa);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterLivroCaixa;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterLivroCaixa) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('LivroCaixaFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterLivroCaixa>) => (
  <>
  <InputComboFilterYesNo
  type='text'
  id='previsto'
  name='previsto'
  value={handlers.windowFilter?.previsto ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='livPrevisto'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='iddes'
  name='iddes'
  value={handlers.windowFilter?.iddes ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDDes'
  label='IDDes (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='iddes_end'
  name='iddes_end'
  value={handlers.windowFilter?.iddes_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDDes final'
  label='IDDes final'
  disabled={handlers.windowFilter?.iddes ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoal'
  name='pessoal'
  value={handlers.windowFilter?.pessoal ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pessoal'
  label='Pessoal (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='pessoal_end'
  name='pessoal_end'
  value={handlers.windowFilter?.pessoal_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Pessoal final'
  label='Pessoal final'
  disabled={handlers.windowFilter?.pessoal ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='ajuste'
  name='ajuste'
  value={handlers.windowFilter?.ajuste ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Ajuste'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='idhon'
  name='idhon'
  value={handlers.windowFilter?.idhon ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHon'
  label='IDHon (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idhon_end'
  name='idhon_end'
  value={handlers.windowFilter?.idhon_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHon final'
  label='IDHon final'
  disabled={handlers.windowFilter?.idhon ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idhonparc'
  name='idhonparc'
  value={handlers.windowFilter?.idhonparc ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHonParc'
  label='IDHonParc (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idhonparc_end'
  name='idhonparc_end'
  value={handlers.windowFilter?.idhonparc_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe IDHonParc final'
  label='IDHonParc final'
  disabled={handlers.windowFilter?.idhonparc ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='idhonsuc'
  name='idhonsuc'
  value={handlers.windowFilter?.idhonsuc ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='IDHonSuc'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='processo'
  name='processo'
  value={handlers.windowFilter?.processo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Processo'
  label='Processo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='processo_end'
  name='processo_end'
  value={handlers.windowFilter?.processo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Processo final'
  label='Processo final'
  disabled={handlers.windowFilter?.processo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputValor
  type='text'
  id='valor'
  name='valor'
  value={handlers.windowFilter?.valor ?? 0}
  onChange={handlers.handleInputValorChange}
  label='Valor (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valor_end'
  name='valor_end'
  value={handlers.windowFilter?.valor_end ?? 0}
  disabled={handlers.windowFilter?.valor != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='Valor (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputComboFilterYesNo
  type='text'
  id='tipo'
  name='tipo'
  value={handlers.windowFilter?.tipo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Tipo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='historico'
  name='historico'
  value={handlers.windowFilter?.historico ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Historico'
  label='Historico'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='grupo'
  name='grupo'
  value={handlers.windowFilter?.grupo ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Grupo'
  label='Grupo (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='grupo_end'
  name='grupo_end'
  value={handlers.windowFilter?.grupo_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Grupo final'
  label='Grupo final'
  disabled={handlers.windowFilter?.grupo ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};