// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// GridsMobileHook.tsx.txt
'use client';
import React, { useMemo } from 'react';
import { Grid, GridColumn } from '@progress/kendo-react-grid';
import { ICidade } from '../../Interfaces/interface.Cidade';
import { CRUD_CONSTANTS, formatCurrency, formatDateBrowser } from '@/app/tools/crud';
import '@/app/styles/MobileCrudGrid.css';
import { useCidadeGrid } from '../../Hooks/hookCidadeGrid';
import { useRouter } from 'next/navigation';
import { SvgIcon } from '@progress/kendo-react-common';
import { pencilIcon, searchIcon } from '@progress/kendo-svg-icons';
interface CidadeGridProps {
  data: ICidade[];
  onRowClick: (cidade: ICidade) => void;
  onDeleteClick: (e: any) => void;
  setSelectedId: (id: number | null) => void;
}
export const CidadeGridMobileComponent = React.memo(({
  data, 
  onRowClick, 
  onDeleteClick, 
  setSelectedId, 

}: CidadeGridProps) => {

const router = useRouter();
// ===== USO DO HOOK CENTRALIZADO =====
const {
  processedData, 
  sort, 
  handleSortChange, 
  page, 
  handlePageChange, 
  handleFilterChange, 
  handleRowClick: hookHandleRowClick, 
  RowNumberCell, 
} = useCidadeGrid({
data, 
onRowClick, 
onDeleteClick, 
setSelectedId, 
initialTake: 10, 
useCustomSort: false, // Mobile usa useGridSort interno
});

const openSearchCellAdvogados = (id: number) => {
  router.push(`/pages/advogados/?cidade=${id}`);
};
const SearchFromCellAdvogados = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAdvogados(props.dataItem.id)}><span title='Pesquisar relacionados em Advogados'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellAgenda = (id: number) => {
  router.push(`/pages/agenda/?cidade=${id}`);
};
const SearchFromCellAgenda = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAgenda(props.dataItem.id)}><span title='Pesquisar relacionados em Compromisso'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellBensMateriais = (id: number) => {
  router.push(`/pages/bensmateriais/?cidade=${id}`);
};
const SearchFromCellBensMateriais = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellBensMateriais(props.dataItem.id)}><span title='Pesquisar relacionados em Bens Materiais'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellClientes = (id: number) => {
  router.push(`/pages/clientes/?cidade=${id}`);
};
const SearchFromCellClientes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellClientes(props.dataItem.id)}><span title='Pesquisar relacionados em Clientes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellClientesSocios = (id: number) => {
  router.push(`/pages/clientessocios/?cidade=${id}`);
};
const SearchFromCellClientesSocios = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellClientesSocios(props.dataItem.id)}><span title='Pesquisar relacionados em Clientes Socios'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellColaboradores = (id: number) => {
  router.push(`/pages/colaboradores/?cidade=${id}`);
};
const SearchFromCellColaboradores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellColaboradores(props.dataItem.id)}><span title='Pesquisar relacionados em Colaboradores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellDivisaoTribunal = (id: number) => {
  router.push(`/pages/divisaotribunal/?cidade=${id}`);
};
const SearchFromCellDivisaoTribunal = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellDivisaoTribunal(props.dataItem.id)}><span title='Pesquisar relacionados em Divisao Tribunal'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellEnderecos = (id: number) => {
  router.push(`/pages/enderecos/?cidade=${id}`);
};
const SearchFromCellEnderecos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellEnderecos(props.dataItem.id)}><span title='Pesquisar relacionados em Endereços'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellEnderecoSistema = (id: number) => {
  router.push(`/pages/enderecosistema/?cidade=${id}`);
};
const SearchFromCellEnderecoSistema = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellEnderecoSistema(props.dataItem.id)}><span title='Pesquisar relacionados em Endereco Sistema'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellEscritorios = (id: number) => {
  router.push(`/pages/escritorios/?cidade=${id}`);
};
const SearchFromCellEscritorios = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellEscritorios(props.dataItem.id)}><span title='Pesquisar relacionados em Escritorios'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellFornecedores = (id: number) => {
  router.push(`/pages/fornecedores/?cidade=${id}`);
};
const SearchFromCellFornecedores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellFornecedores(props.dataItem.id)}><span title='Pesquisar relacionados em Fornecedores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellForo = (id: number) => {
  router.push(`/pages/foro/?cidade=${id}`);
};
const SearchFromCellForo = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellForo(props.dataItem.id)}><span title='Pesquisar relacionados em Foro'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellFuncionarios = (id: number) => {
  router.push(`/pages/funcionarios/?cidade=${id}`);
};
const SearchFromCellFuncionarios = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellFuncionarios(props.dataItem.id)}><span title='Pesquisar relacionados em Colaborador'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellOponentes = (id: number) => {
  router.push(`/pages/oponentes/?cidade=${id}`);
};
const SearchFromCellOponentes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellOponentes(props.dataItem.id)}><span title='Pesquisar relacionados em Oponentes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellOponentesRepLegal = (id: number) => {
  router.push(`/pages/oponentesreplegal/?cidade=${id}`);
};
const SearchFromCellOponentesRepLegal = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellOponentesRepLegal(props.dataItem.id)}><span title='Pesquisar relacionados em Oponentes Rep Legal'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellOutrasPartesCliente = (id: number) => {
  router.push(`/pages/outraspartescliente/?cidade=${id}`);
};
const SearchFromCellOutrasPartesCliente = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellOutrasPartesCliente(props.dataItem.id)}><span title='Pesquisar relacionados em Outras Partes Cliente'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPoderJudiciarioAssociado = (id: number) => {
  router.push(`/pages/poderjudiciarioassociado/?cidade=${id}`);
};
const SearchFromCellPoderJudiciarioAssociado = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPoderJudiciarioAssociado(props.dataItem.id)}><span title='Pesquisar relacionados em Poder Judiciario Associado'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPreClientes = (id: number) => {
  router.push(`/pages/preclientes/?cidade=${id}`);
};
const SearchFromCellPreClientes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPreClientes(props.dataItem.id)}><span title='Pesquisar relacionados em Pre Clientes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPrepostos = (id: number) => {
  router.push(`/pages/prepostos/?cidade=${id}`);
};
const SearchFromCellPrepostos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPrepostos(props.dataItem.id)}><span title='Pesquisar relacionados em Prepostos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellTerceiros = (id: number) => {
  router.push(`/pages/terceiros/?cidade=${id}`);
};
const SearchFromCellTerceiros = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellTerceiros(props.dataItem.id)}><span title='Pesquisar relacionados em Terceiros'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellTribEnderecos = (id: number) => {
  router.push(`/pages/tribenderecos/?cidade=${id}`);
};
const SearchFromCellTribEnderecos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellTribEnderecos(props.dataItem.id)}><span title='Pesquisar relacionados em Trib Endereços'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
// ===== CONFIGURAÇÃO DE COLUNAS =====
const gridColumns = useMemo(() => [
  <GridColumn format='{0:n0}' field='index' title='#' sortable={false} filterable={false} width='55px' cells={{ data: RowNumberCell }} />,
  <GridColumn
  field='id_edit_Advogados'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Advogados'
  cells={{ data: SearchFromCellAdvogados }}
  />, 
  <GridColumn
  field='id_edit_Agenda'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Compromisso'
  cells={{ data: SearchFromCellAgenda }}
  />, 
  <GridColumn
  field='id_edit_BensMateriais'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Bens Materiais'
  cells={{ data: SearchFromCellBensMateriais }}
  />, 
  <GridColumn
  field='id_edit_Clientes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Clientes'
  cells={{ data: SearchFromCellClientes }}
  />, 
  <GridColumn
  field='id_edit_ClientesSocios'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Clientes Socios'
  cells={{ data: SearchFromCellClientesSocios }}
  />, 
  <GridColumn
  field='id_edit_Colaboradores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Colaboradores'
  cells={{ data: SearchFromCellColaboradores }}
  />, 
  <GridColumn
  field='id_edit_DivisaoTribunal'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Divisao Tribunal'
  cells={{ data: SearchFromCellDivisaoTribunal }}
  />, 
  <GridColumn
  field='id_edit_Enderecos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Endereços'
  cells={{ data: SearchFromCellEnderecos }}
  />, 
  <GridColumn
  field='id_edit_EnderecoSistema'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Endereco Sistema'
  cells={{ data: SearchFromCellEnderecoSistema }}
  />, 
  <GridColumn
  field='id_edit_Escritorios'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Escritorios'
  cells={{ data: SearchFromCellEscritorios }}
  />, 
  <GridColumn
  field='id_edit_Fornecedores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Fornecedores'
  cells={{ data: SearchFromCellFornecedores }}
  />, 
  <GridColumn
  field='id_edit_Foro'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Foro'
  cells={{ data: SearchFromCellForo }}
  />, 
  <GridColumn
  field='id_edit_Funcionarios'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Colaborador'
  cells={{ data: SearchFromCellFuncionarios }}
  />, 
  <GridColumn
  field='id_edit_Oponentes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Oponentes'
  cells={{ data: SearchFromCellOponentes }}
  />, 
  <GridColumn
  field='id_edit_OponentesRepLegal'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Oponentes Rep Legal'
  cells={{ data: SearchFromCellOponentesRepLegal }}
  />, 
  <GridColumn
  field='id_edit_OutrasPartesCliente'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Outras Partes Cliente'
  cells={{ data: SearchFromCellOutrasPartesCliente }}
  />, 
  <GridColumn
  field='id_edit_PoderJudiciarioAssociado'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Poder Judiciario Associado'
  cells={{ data: SearchFromCellPoderJudiciarioAssociado }}
  />, 
  <GridColumn
  field='id_edit_PreClientes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pre Clientes'
  cells={{ data: SearchFromCellPreClientes }}
  />, 
  <GridColumn
  field='id_edit_Prepostos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Prepostos'
  cells={{ data: SearchFromCellPrepostos }}
  />, 
  <GridColumn
  field='id_edit_Terceiros'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Terceiros'
  cells={{ data: SearchFromCellTerceiros }}
  />, 
  <GridColumn
  field='id_edit_TribEnderecos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Trib Endereços'
  cells={{ data: SearchFromCellTribEnderecos }}
  />, 

  ], [RowNumberCell]);
  // ===== RENDER =====
  return (
  <Grid
  className='grid-mobile-crud grid-mobile-cidade'
  data={processedData.slice(page.skip, page.skip + page.take)}
  skip={page.skip}
  take={page.take}
  total={processedData.length}
  pageable={{
    pageSizes: Array.from(CRUD_CONSTANTS.PAGINATION.PAGE_SIZES), 
    buttonCount: CRUD_CONSTANTS.PAGINATION.BUTTON_COUNT, 
  }}
  onPageChange={handlePageChange}
  sortable={true}
  sort={sort}
  onSortChange={handleSortChange}
  resizable={true}
  reorderable={true}
  filterable={true}
  onFilterChange={handleFilterChange}
  onRowClick={(e) => hookHandleRowClick(e)}
>
{gridColumns}
</Grid>
);
});