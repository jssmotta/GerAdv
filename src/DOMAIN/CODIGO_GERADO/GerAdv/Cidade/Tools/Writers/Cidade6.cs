// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ICidadeWriter
{
    Task<FCidade> WriteAsync(Models.Cidade cidade, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(CidadeResponse cidade, int operadorId, MsiSqlConnection oCnn);
}

public class CidadeWriter(IFCidadeFactory cidadeFactory) : ICidadeWriter
{
    private readonly IFCidadeFactory _cidadeFactory = cidadeFactory;
    public async Task Delete(CidadeResponse cidade, int operadorId, MsiSqlConnection oCnn)
    {
        await _cidadeFactory.DeleteAsync(operadorId, cidade.Id, oCnn);
    }

    public async Task<FCidade> WriteAsync(Models.Cidade cidade, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (cidade.Id.IsEmptyIDNumber() ? _cidadeFactory.CreateAsync() : _cidadeFactory.CreateFromIdAsync(cidade.Id, oCnn));
        dbRec.FDDD = cidade.DDD;
        dbRec.FTop = cidade.Top;
        dbRec.FComarca = cidade.Comarca;
        dbRec.FCapital = cidade.Capital;
        dbRec.FNome = cidade.Nome;
        dbRec.FUF = cidade.UF;
        dbRec.FSigla = cidade.Sigla;
        dbRec.FGUID = cidade.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}