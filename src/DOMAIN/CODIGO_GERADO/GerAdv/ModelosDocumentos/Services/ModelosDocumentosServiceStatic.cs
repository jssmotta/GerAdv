// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ModelosDocumentosService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterModelosDocumentos? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (!string.IsNullOrWhiteSpace(filtro.Nome))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Nome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Remuneracao))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Remuneracao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Remuneracao)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Assinatura))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Assinatura)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Assinatura)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Header))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Header)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Header)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Footer))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Footer)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Footer)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Extra1))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Extra1)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Extra1)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Extra2))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Extra2)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Extra2)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Extra3))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Extra3)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Extra3)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Outorgante))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Outorgante)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Outorgante)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Outorgados))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Outorgados)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Outorgados)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Poderes))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Poderes)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Poderes)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Objeto))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Objeto)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Objeto)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Titulo))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Titulo)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Titulo)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Testemunhas))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.Testemunhas)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Testemunhas)));
        }

        if (filtro.TipoModeloDocumento != int.MinValue)
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.TipoModeloDocumento)}", filtro.TipoModeloDocumento));
            if (filtro.TipoModeloDocumento_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBModelosDocumentosDicInfo.TipoModeloDocumento)}_end", filtro.TipoModeloDocumento_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.CSS))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.CSS)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CSS)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBModelosDocumentosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBModelosDocumentosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Nome)}");
        cWhere.Append(filtro.Remuneracao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Remuneracao}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Remuneracao)}");
        cWhere.Append(filtro.Assinatura.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Assinatura}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Assinatura)}");
        cWhere.Append(filtro.Header.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Header}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Header)}");
        cWhere.Append(filtro.Footer.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Footer}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Footer)}");
        cWhere.Append(filtro.Extra1.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Extra1}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Extra1)}");
        cWhere.Append(filtro.Extra2.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Extra2}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Extra2)}");
        cWhere.Append(filtro.Extra3.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Extra3}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Extra3)}");
        cWhere.Append(filtro.Outorgante.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Outorgante}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Outorgante)}");
        cWhere.Append(filtro.Outorgados.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Outorgados}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Outorgados)}");
        cWhere.Append(filtro.Poderes.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Poderes}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Poderes)}");
        cWhere.Append(filtro.Objeto.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Objeto}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Objeto)}");
        cWhere.Append(filtro.Titulo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Titulo}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Titulo)}");
        cWhere.Append(filtro.Testemunhas.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.Testemunhas}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.Testemunhas)}");
        if (!(filtro.TipoModeloDocumento.IsEmptyX()) && filtro.TipoModeloDocumento_end.IsEmptyX())
        {
            cWhere.Append(filtro.TipoModeloDocumento.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.TipoModeloDocumento}] = @{(DBModelosDocumentosDicInfo.TipoModeloDocumento)}");
        }
        else if (!(filtro.TipoModeloDocumento.IsEmptyX()) && !(filtro.TipoModeloDocumento_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].{DBModelosDocumentosDicInfo.TipoModeloDocumento} BETWEEN @{(DBModelosDocumentosDicInfo.TipoModeloDocumento)} AND @{(DBModelosDocumentosDicInfo.TipoModeloDocumento)}_end");
        }

        cWhere.Append(filtro.CSS.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.CSS}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.CSS)}");
        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBModelosDocumentosDicInfo.GUID)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].[{DBModelosDocumentosDicInfo.CampoCodigo}] = @{(DBModelosDocumentosDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBModelosDocumentosDicInfo.PTabelaNome}].{DBModelosDocumentosDicInfo.CampoCodigo} BETWEEN @{(DBModelosDocumentosDicInfo.CampoCodigo)} AND @{(DBModelosDocumentosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterModelosDocumentos? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterModelosDocumentos? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter>? parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-ModelosDocumentos-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter>? parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBModelosDocumentosDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<ModelosDocumentosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter>? parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}