// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class DivisaoTribunalService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterDivisaoTribunal filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.NumCodigo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}", filtro.NumCodigo));
        }

        if (filtro.NumCodigo_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}_end", filtro.NumCodigo_end));
        }

        if (filtro.Justica != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Justica)}", filtro.Justica));
        }

        if (!string.IsNullOrEmpty(filtro.NomeEspecial))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.NomeEspecial)}", ApplyWildCard(filtro.WildcardChar, filtro.NomeEspecial)));
        }

        if (filtro.Area != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Area)}", filtro.Area));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Cidade)}", filtro.Cidade));
        }

        if (filtro.Foro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Foro)}", filtro.Foro));
        }

        if (filtro.Tribunal != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Tribunal)}", filtro.Tribunal));
        }

        if (!string.IsNullOrEmpty(filtro.CodigoDiv))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.CodigoDiv)}", ApplyWildCard(filtro.WildcardChar, filtro.CodigoDiv)));
        }

        if (!string.IsNullOrEmpty(filtro.Endereco))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Endereco)}", ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrEmpty(filtro.Fone))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Fone)}", ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrEmpty(filtro.Fax))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Fax)}", ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrEmpty(filtro.CEP))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.CEP)}", ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrEmpty(filtro.Obs))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Obs)}", ApplyWildCard(filtro.WildcardChar, filtro.Obs)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.EMail)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!string.IsNullOrEmpty(filtro.Andar))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.Andar)}", ApplyWildCard(filtro.WildcardChar, filtro.Andar)));
        }

        if (!string.IsNullOrEmpty(filtro.GUID))
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.GUID)}", ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.NumCodigo.IsEmpty() && filtro.NumCodigo_end.IsEmpty())
        {
            cWhere.Append(filtro.NumCodigo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.NumCodigo}] >= @{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.NumCodigo <= 0 && filtro.NumCodigo_end <= 0) ? string.Empty : (!(filtro.NumCodigo <= 0) && !(filtro.NumCodigo_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.NumCodigo} BETWEEN @{nameof(DBDivisaoTribunalDicInfo.NumCodigo)} AND @{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}_end" : !(filtro.NumCodigo <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.NumCodigo} = @{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.NumCodigo} <= @{nameof(DBDivisaoTribunalDicInfo.NumCodigo)}_end");
        }

        cWhere.Append(filtro.Justica <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Justica}] = @{nameof(DBDivisaoTribunalDicInfo.Justica)}");
        cWhere.Append(filtro.NomeEspecial.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.NomeEspecial}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.NomeEspecial)}");
        cWhere.Append(filtro.Area <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Area}] = @{nameof(DBDivisaoTribunalDicInfo.Area)}");
        cWhere.Append(filtro.Cidade <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Cidade}] = @{nameof(DBDivisaoTribunalDicInfo.Cidade)}");
        cWhere.Append(filtro.Foro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Foro}] = @{nameof(DBDivisaoTribunalDicInfo.Foro)}");
        cWhere.Append(filtro.Tribunal <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Tribunal}] = @{nameof(DBDivisaoTribunalDicInfo.Tribunal)}");
        cWhere.Append(filtro.CodigoDiv.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.CodigoDiv}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.CodigoDiv)}");
        cWhere.Append(filtro.Endereco.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.Endereco)}");
        cWhere.Append(filtro.Fone.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.Fone)}");
        cWhere.Append(filtro.Fax.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.Fax)}");
        cWhere.Append(filtro.CEP.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.CEP)}");
        cWhere.Append(filtro.Obs.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Obs}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.Obs)}");
        cWhere.Append(filtro.EMail.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.EMail)}");
        cWhere.Append(filtro.Andar.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.Andar}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.Andar)}");
        cWhere.Append(filtro.GUID.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{nameof(DBDivisaoTribunalDicInfo.GUID)}");
        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBDivisaoTribunalDicInfo.PTabelaNome}].[{DBDivisaoTribunalDicInfo.CampoCodigo}] >= @{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.CampoCodigo} BETWEEN @{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)} AND @{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.CampoCodigo} = @{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBDivisaoTribunalDicInfo.CampoCodigo} <= @{nameof(DBDivisaoTribunalDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private async Task<IEnumerable<DivisaoTribunalResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}