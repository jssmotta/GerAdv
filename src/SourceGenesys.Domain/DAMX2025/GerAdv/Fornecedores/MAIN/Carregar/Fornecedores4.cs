// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBFornecedores
{
    public DBFornecedores(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
    }

    public DBFornecedores(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Fornecedores: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBFornecedoresDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBFornecedoresDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBFornecedoresDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBFornecedoresDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBFornecedoresDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Grupo)))
                m_FGrupo = Convert.ToInt32(getValue(DBFornecedoresDicInfo.Grupo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBFornecedoresDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBFornecedoresDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBFornecedoresDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.SubGrupo)))
                m_FSubGrupo = Convert.ToInt32(getValue(DBFornecedoresDicInfo.SubGrupo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Tipo)))
                m_FTipo = Convert.ToBoolean(getValue(DBFornecedoresDicInfo.Tipo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBFornecedoresDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBFornecedoresDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBFornecedoresDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBFornecedoresDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNPJ = getValue(DBFornecedoresDicInfo.CNPJ)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FContatos = getValue(DBFornecedoresDicInfo.Contatos)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBFornecedoresDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEmail = getValue(DBFornecedoresDicInfo.Email)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBFornecedoresDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBFornecedoresDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBFornecedoresDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBFornecedoresDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FInscEst = getValue(DBFornecedoresDicInfo.InscEst)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBFornecedoresDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObs = getValue(DBFornecedoresDicInfo.Obs)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FProdutos = getValue(DBFornecedoresDicInfo.Produtos)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBFornecedoresDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSite = getValue(DBFornecedoresDicInfo.Site)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec.Table.Columns.Contains(name) ? dbRec[name] : null);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Fornecedores: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name => dbRec[name]);
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Fornecedores: {ex.Message}", ex);
        }
    }
}