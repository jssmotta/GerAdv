// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class LivroCaixaService
{
    private static (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterLivroCaixa filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.IDDes != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDDes)}", filtro.IDDes));
        }

        if (filtro.IDDes_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDDes)}_end", filtro.IDDes_end));
        }

        if (filtro.Pessoal != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Pessoal)}", filtro.Pessoal));
        }

        if (filtro.Pessoal_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Pessoal)}_end", filtro.Pessoal_end));
        }

        if (filtro.Ajuste != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Ajuste)}", filtro.Ajuste));
        }

        if (filtro.IDHon != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDHon)}", filtro.IDHon));
        }

        if (filtro.IDHon_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDHon)}_end", filtro.IDHon_end));
        }

        if (filtro.IDHonParc != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDHonParc)}", filtro.IDHonParc));
        }

        if (filtro.IDHonParc_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDHonParc)}_end", filtro.IDHonParc_end));
        }

        if (filtro.IDHonSuc != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.IDHonSuc)}", filtro.IDHonSuc));
        }

        if (!filtro.Data.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Data, out var dataParam))
                parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Data)}", dataParam));
        }

        if (!filtro.Data_end.IsEmpty())
        {
            if (DateTime.TryParse(filtro.Data_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Data)}_end", dataParam));
        }

        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Processo)}", filtro.Processo));
        }

        if (filtro.Valor != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Valor)}", filtro.Valor));
        }

        if (filtro.Valor_end != decimal.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Valor)}_end", filtro.Valor_end));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!string.IsNullOrEmpty(filtro.Historico))
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Historico)}", ApplyWildCard(filtro.WildcardChar, filtro.Historico)));
        }

        if (filtro.Previsto != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Previsto)}", filtro.Previsto));
        }

        if (filtro.Grupo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Grupo)}", filtro.Grupo));
        }

        if (filtro.Grupo_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.Grupo)}_end", filtro.Grupo_end));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBLivroCaixaDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmpty() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!filtro.IDDes.IsEmpty() && filtro.IDDes_end.IsEmpty())
        {
            cWhere.Append(filtro.IDDes <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.IDDes}] >= @{nameof(DBLivroCaixaDicInfo.IDDes)}");
        }
        else
        {
            cWhere.Append((filtro.IDDes <= 0 && filtro.IDDes_end <= 0) ? string.Empty : (!(filtro.IDDes <= 0) && !(filtro.IDDes_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDDes} BETWEEN @{nameof(DBLivroCaixaDicInfo.IDDes)} AND @{nameof(DBLivroCaixaDicInfo.IDDes)}_end" : !(filtro.IDDes <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDDes} = @{nameof(DBLivroCaixaDicInfo.IDDes)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDDes} <= @{nameof(DBLivroCaixaDicInfo.IDDes)}_end");
        }

        if (!filtro.Pessoal.IsEmpty() && filtro.Pessoal_end.IsEmpty())
        {
            cWhere.Append(filtro.Pessoal <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Pessoal}] >= @{nameof(DBLivroCaixaDicInfo.Pessoal)}");
        }
        else
        {
            cWhere.Append((filtro.Pessoal <= 0 && filtro.Pessoal_end <= 0) ? string.Empty : (!(filtro.Pessoal <= 0) && !(filtro.Pessoal_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Pessoal} BETWEEN @{nameof(DBLivroCaixaDicInfo.Pessoal)} AND @{nameof(DBLivroCaixaDicInfo.Pessoal)}_end" : !(filtro.Pessoal <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Pessoal} = @{nameof(DBLivroCaixaDicInfo.Pessoal)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Pessoal} <= @{nameof(DBLivroCaixaDicInfo.Pessoal)}_end");
        }

        cWhere.Append(filtro.Ajuste == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Ajuste}] = @{nameof(DBLivroCaixaDicInfo.Ajuste)}");
        if (!filtro.IDHon.IsEmpty() && filtro.IDHon_end.IsEmpty())
        {
            cWhere.Append(filtro.IDHon <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.IDHon}] >= @{nameof(DBLivroCaixaDicInfo.IDHon)}");
        }
        else
        {
            cWhere.Append((filtro.IDHon <= 0 && filtro.IDHon_end <= 0) ? string.Empty : (!(filtro.IDHon <= 0) && !(filtro.IDHon_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHon} BETWEEN @{nameof(DBLivroCaixaDicInfo.IDHon)} AND @{nameof(DBLivroCaixaDicInfo.IDHon)}_end" : !(filtro.IDHon <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHon} = @{nameof(DBLivroCaixaDicInfo.IDHon)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHon} <= @{nameof(DBLivroCaixaDicInfo.IDHon)}_end");
        }

        if (!filtro.IDHonParc.IsEmpty() && filtro.IDHonParc_end.IsEmpty())
        {
            cWhere.Append(filtro.IDHonParc <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.IDHonParc}] >= @{nameof(DBLivroCaixaDicInfo.IDHonParc)}");
        }
        else
        {
            cWhere.Append((filtro.IDHonParc <= 0 && filtro.IDHonParc_end <= 0) ? string.Empty : (!(filtro.IDHonParc <= 0) && !(filtro.IDHonParc_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHonParc} BETWEEN @{nameof(DBLivroCaixaDicInfo.IDHonParc)} AND @{nameof(DBLivroCaixaDicInfo.IDHonParc)}_end" : !(filtro.IDHonParc <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHonParc} = @{nameof(DBLivroCaixaDicInfo.IDHonParc)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.IDHonParc} <= @{nameof(DBLivroCaixaDicInfo.IDHonParc)}_end");
        }

        cWhere.Append(filtro.IDHonSuc == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.IDHonSuc}] = @{nameof(DBLivroCaixaDicInfo.IDHonSuc)}");
        if (!filtro.Data.IsEmpty() && filtro.Data_end.IsEmpty())
        {
            cWhere.Append(filtro.Data.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Data}], 103) >= CONVERT(DATE, @{nameof(DBLivroCaixaDicInfo.Data)}, 103)");
        }
        else
        {
            cWhere.Append((filtro.Data.IsEmpty() && filtro.Data_end.IsEmpty()) ? string.Empty : (!(filtro.Data.IsEmpty()) && !(filtro.Data_end.IsEmpty())) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Data} BETWEEN @{nameof(DBLivroCaixaDicInfo.Data)} AND @{nameof(DBLivroCaixaDicInfo.Data)}_end" : !(filtro.Data.IsEmpty()) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Data} = @{nameof(DBLivroCaixaDicInfo.Data)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Data} <= @{nameof(DBLivroCaixaDicInfo.Data)}_end");
        }

        cWhere.Append(filtro.Processo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Processo}] = @{nameof(DBLivroCaixaDicInfo.Processo)}");
        if (!filtro.Valor.IsEmpty() && filtro.Valor_end.IsEmpty())
        {
            cWhere.Append(filtro.Valor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Valor}] >= @{nameof(DBLivroCaixaDicInfo.Valor)}");
        }
        else
        {
            cWhere.Append((filtro.Valor == decimal.MinValue && filtro.Valor_end == decimal.MinValue) ? string.Empty : (!(filtro.Valor == decimal.MinValue) && !(filtro.Valor_end == decimal.MinValue)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Valor} BETWEEN @{nameof(DBLivroCaixaDicInfo.Valor)} AND @{nameof(DBLivroCaixaDicInfo.Valor)}_end" : !(filtro.Valor == decimal.MinValue) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Valor} = @{nameof(DBLivroCaixaDicInfo.Valor)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Valor} <= @{nameof(DBLivroCaixaDicInfo.Valor)}_end");
        }

        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Tipo}] = @{nameof(DBLivroCaixaDicInfo.Tipo)}");
        cWhere.Append(filtro.Historico.IsEmpty() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Historico}]  {DevourerConsts.MsiCollate} like @{nameof(DBLivroCaixaDicInfo.Historico)}");
        cWhere.Append(filtro.Previsto == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Previsto}] = @{nameof(DBLivroCaixaDicInfo.Previsto)}");
        if (!filtro.Grupo.IsEmpty() && filtro.Grupo_end.IsEmpty())
        {
            cWhere.Append(filtro.Grupo <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.Grupo}] >= @{nameof(DBLivroCaixaDicInfo.Grupo)}");
        }
        else
        {
            cWhere.Append((filtro.Grupo <= 0 && filtro.Grupo_end <= 0) ? string.Empty : (!(filtro.Grupo <= 0) && !(filtro.Grupo_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Grupo} BETWEEN @{nameof(DBLivroCaixaDicInfo.Grupo)} AND @{nameof(DBLivroCaixaDicInfo.Grupo)}_end" : !(filtro.Grupo <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Grupo} = @{nameof(DBLivroCaixaDicInfo.Grupo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.Grupo} <= @{nameof(DBLivroCaixaDicInfo.Grupo)}_end");
        }

        if (!filtro.Codigo_filtro.IsEmpty() && filtro.Codigo_filtro_end.IsEmpty())
        {
            cWhere.Append(filtro.Codigo_filtro <= 0 ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBLivroCaixaDicInfo.PTabelaNome}].[{DBLivroCaixaDicInfo.CampoCodigo}] >= @{nameof(DBLivroCaixaDicInfo.CampoCodigo)}");
        }
        else
        {
            cWhere.Append((filtro.Codigo_filtro <= 0 && filtro.Codigo_filtro_end <= 0) ? string.Empty : (!(filtro.Codigo_filtro <= 0) && !(filtro.Codigo_filtro_end <= 0)) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.CampoCodigo} BETWEEN @{nameof(DBLivroCaixaDicInfo.CampoCodigo)} AND @{nameof(DBLivroCaixaDicInfo.CampoCodigo)}_end" : !(filtro.Codigo_filtro <= 0) ? (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.CampoCodigo} = @{nameof(DBLivroCaixaDicInfo.CampoCodigo)}" : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"{DBLivroCaixaDicInfo.CampoCodigo} <= @{nameof(DBLivroCaixaDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private static string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private async Task<IEnumerable<LivroCaixaResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}