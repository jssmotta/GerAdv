// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBOutrasPartesCliente
{
    public DBOutrasPartesCliente(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBOutrasPartesCliente(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OutrasPartesCliente: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBOutrasPartesClienteDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.ClientePrincipal)))
                m_FClientePrincipal = Convert.ToInt32(getValue(DBOutrasPartesClienteDicInfo.ClientePrincipal));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBOutrasPartesClienteDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBOutrasPartesClienteDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBOutrasPartesClienteDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBOutrasPartesClienteDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBOutrasPartesClienteDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Terceirizado)))
                m_FTerceirizado = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Terceirizado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Tipo)))
                m_FTipo = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Tipo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBOutrasPartesClienteDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBOutrasPartesClienteDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBOutrasPartesClienteDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBOutrasPartesClienteDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBOutrasPartesClienteDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNPJ = getValue(DBOutrasPartesClienteDicInfo.CNPJ)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBOutrasPartesClienteDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBOutrasPartesClienteDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBOutrasPartesClienteDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBOutrasPartesClienteDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBOutrasPartesClienteDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBOutrasPartesClienteDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FInscEst = getValue(DBOutrasPartesClienteDicInfo.InscEst)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBOutrasPartesClienteDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNomeFantasia = getValue(DBOutrasPartesClienteDicInfo.NomeFantasia)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBOutrasPartesClienteDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FSite = getValue(DBOutrasPartesClienteDicInfo.Site)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OutrasPartesCliente: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do OutrasPartesCliente: {ex.Message}", ex);
        }
    }
}