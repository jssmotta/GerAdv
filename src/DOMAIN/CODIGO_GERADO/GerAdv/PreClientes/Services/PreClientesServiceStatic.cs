// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class PreClientesService
{
    private (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterPreClientes filtro)
    {
        var parameters = new List<SqlParameter>();
        if (filtro.Inativo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Inativo)}", filtro.Inativo));
        }

        if (!string.IsNullOrEmpty(filtro.QuemIndicou))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.QuemIndicou)}", ApplyWildCard(filtro.WildcardChar, filtro.QuemIndicou)));
        }

        if (!string.IsNullOrEmpty(filtro.Nome))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Nome)}", ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Adv != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Adv)}", filtro.Adv));
        }

        if (filtro.Adv_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Adv)}_end", filtro.Adv_end));
        }

        if (filtro.IDRep != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.IDRep)}", filtro.IDRep));
        }

        if (filtro.Juridica != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Juridica)}", filtro.Juridica));
        }

        if (!string.IsNullOrEmpty(filtro.NomeFantasia))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.NomeFantasia)}", ApplyWildCard(filtro.WildcardChar, filtro.NomeFantasia)));
        }

        if (!string.IsNullOrEmpty(filtro.Class))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Class)}", ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (filtro.Tipo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Tipo)}", filtro.Tipo));
        }

        if (!filtro.DtNasc.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam))
                parameters.Add(new($"@{nameof(DBPreClientesDicInfo.DtNasc)}", dataParam));
        }

        if (!filtro.DtNasc_end.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam))
                parameters.Add(new($"@{nameof(DBPreClientesDicInfo.DtNasc)}_end", dataParam));
        }

        if (!string.IsNullOrEmpty(filtro.InscEst))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.InscEst)}", ApplyWildCard(filtro.WildcardChar, filtro.InscEst)));
        }

        if (!string.IsNullOrEmpty(filtro.Qualificacao))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Qualificacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Qualificacao)));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Sexo)}", filtro.Sexo));
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Idade)}", filtro.Idade));
        }

        if (filtro.Idade_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Idade)}_end", filtro.Idade_end));
        }

        if (!string.IsNullOrEmpty(filtro.CNPJ))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CNPJ)}", ApplyWildCard(filtro.WildcardChar, filtro.CNPJ)));
        }

        if (!string.IsNullOrEmpty(filtro.CPF))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CPF)}", ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrEmpty(filtro.RG))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.RG)}", ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (filtro.TipoCaptacao != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.TipoCaptacao)}", filtro.TipoCaptacao));
        }

        if (!string.IsNullOrEmpty(filtro.Observacao))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Observacao)}", ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrEmpty(filtro.Endereco))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Endereco)}", ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrEmpty(filtro.Bairro))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Bairro)}", ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Cidade)}", filtro.Cidade));
        }

        if (!string.IsNullOrEmpty(filtro.CEP))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CEP)}", ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrEmpty(filtro.Fax))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Fax)}", ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrEmpty(filtro.Fone))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Fone)}", ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrEmpty(filtro.Data))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Data)}", ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (!string.IsNullOrEmpty(filtro.HomePage))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.HomePage)}", ApplyWildCard(filtro.WildcardChar, filtro.HomePage)));
        }

        if (!string.IsNullOrEmpty(filtro.EMail))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.EMail)}", ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!string.IsNullOrEmpty(filtro.Assistido))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.Assistido)}", ApplyWildCard(filtro.WildcardChar, filtro.Assistido)));
        }

        if (!string.IsNullOrEmpty(filtro.AssRG))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.AssRG)}", ApplyWildCard(filtro.WildcardChar, filtro.AssRG)));
        }

        if (!string.IsNullOrEmpty(filtro.AssCPF))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.AssCPF)}", ApplyWildCard(filtro.WildcardChar, filtro.AssCPF)));
        }

        if (!string.IsNullOrEmpty(filtro.AssEndereco))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.AssEndereco)}", ApplyWildCard(filtro.WildcardChar, filtro.AssEndereco)));
        }

        if (!string.IsNullOrEmpty(filtro.CNH))
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CNH)}", ApplyWildCard(filtro.WildcardChar, filtro.CNH)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
        }

        if (filtro.Codigo_filtro_end != int.MinValue)
        {
            parameters.Add(new($"@{nameof(DBPreClientesDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.Inativo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Inativo}] = @{nameof(DBPreClientesDicInfo.Inativo)}");
        cWhere.Append(filtro.QuemIndicou.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.QuemIndicou}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.QuemIndicou)}");
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Nome)}");
        if (!(filtro.Adv.IsEmptyX()) && filtro.Adv_end.IsEmptyX())
        {
            cWhere.Append(filtro.Adv.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Adv}] = @{nameof(DBPreClientesDicInfo.Adv)}");
        }
        else if (!(filtro.Adv.IsEmptyX()) && !(filtro.Adv_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].{DBPreClientesDicInfo.Adv} BETWEEN @{nameof(DBPreClientesDicInfo.Adv)} AND @{nameof(DBPreClientesDicInfo.Adv)}_end");
        }

        cWhere.Append(filtro.IDRep.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.IDRep}] = @{nameof(DBPreClientesDicInfo.IDRep)}");
        cWhere.Append(filtro.Juridica == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Juridica}] = @{nameof(DBPreClientesDicInfo.Juridica)}");
        cWhere.Append(filtro.NomeFantasia.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.NomeFantasia}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.NomeFantasia)}");
        cWhere.Append(filtro.Class.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Class)}");
        cWhere.Append(filtro.Tipo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Tipo}] = @{nameof(DBPreClientesDicInfo.Tipo)}");
        if (!(filtro.DtNasc.IsEmptyDX()) && filtro.DtNasc_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DtNasc.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.DtNasc}], 103) = CONVERT(DATE, @{nameof(DBPreClientesDicInfo.DtNasc)}, 103)");
        }
        else if (!(filtro.DtNasc.IsEmptyDX()) && !(filtro.DtNasc_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].{DBPreClientesDicInfo.DtNasc} BETWEEN @{nameof(DBPreClientesDicInfo.DtNasc)} AND @{nameof(DBPreClientesDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.InscEst.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.InscEst}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.InscEst)}");
        cWhere.Append(filtro.Qualificacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Qualificacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Qualificacao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Sexo}] = @{nameof(DBPreClientesDicInfo.Sexo)}");
        if (!(filtro.Idade.IsEmptyX()) && filtro.Idade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Idade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Idade}] = @{nameof(DBPreClientesDicInfo.Idade)}");
        }
        else if (!(filtro.Idade.IsEmptyX()) && !(filtro.Idade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].{DBPreClientesDicInfo.Idade} BETWEEN @{nameof(DBPreClientesDicInfo.Idade)} AND @{nameof(DBPreClientesDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.CNPJ.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.CNPJ}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.CNPJ)}");
        cWhere.Append(filtro.CPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.RG)}");
        cWhere.Append(filtro.TipoCaptacao == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.TipoCaptacao}] = @{nameof(DBPreClientesDicInfo.TipoCaptacao)}");
        cWhere.Append(filtro.Observacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Observacao)}");
        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Bairro)}");
        cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Cidade}] = @{nameof(DBPreClientesDicInfo.Cidade)}");
        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.CEP)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Fax)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Fone)}");
        cWhere.Append(filtro.Data.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Data)}");
        cWhere.Append(filtro.HomePage.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.HomePage}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.HomePage)}");
        cWhere.Append(filtro.EMail.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.EMail)}");
        cWhere.Append(filtro.Assistido.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.Assistido}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.Assistido)}");
        cWhere.Append(filtro.AssRG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.AssRG}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.AssRG)}");
        cWhere.Append(filtro.AssCPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.AssCPF}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.AssCPF)}");
        cWhere.Append(filtro.AssEndereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.AssEndereco}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.AssEndereco)}");
        cWhere.Append(filtro.CNH.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.CNH}]  {DevourerConsts.MsiCollate} like @{nameof(DBPreClientesDicInfo.CNH)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].[{DBPreClientesDicInfo.CampoCodigo}] = @{nameof(DBPreClientesDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPreClientesDicInfo.PTabelaNome}].{DBPreClientesDicInfo.CampoCodigo} BETWEEN @{nameof(DBPreClientesDicInfo.CampoCodigo)} AND @{nameof(DBPreClientesDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string ApplyWildCard(char wildcardChar, string value)
    {
        if (wildcardChar == '\0' || wildcardChar == ' ')
        {
            return value;
        }

        var result = $"{wildcardChar}{value.Replace(" ", wildcardChar.ToString())}{wildcardChar}";
        return result;
    }

    private string GetFilterHash(Filters.FilterPreClientes? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterPreClientes? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-PreClientes-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBPreClientesDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<PreClientesResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}