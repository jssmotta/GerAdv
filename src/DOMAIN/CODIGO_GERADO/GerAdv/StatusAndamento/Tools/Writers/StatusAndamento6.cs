// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IStatusAndamentoWriter
{
    Task<FStatusAndamento> WriteAsync(Models.StatusAndamento statusandamento, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(StatusAndamentoResponse statusandamento, int operadorId, MsiSqlConnection? oCnn);
}

public class StatusAndamentoWriter(IFStatusAndamentoFactory statusandamentoFactory) : IStatusAndamentoWriter
{
    private readonly IFStatusAndamentoFactory _statusandamentoFactory = statusandamentoFactory ?? throw new ArgumentNullException(nameof(statusandamentoFactory));
    public virtual async Task Delete(StatusAndamentoResponse statusandamento, int operadorId, MsiSqlConnection? oCnn)
    {
        await _statusandamentoFactory.DeleteAsync(operadorId, statusandamento.Id, oCnn);
    }

    public virtual async Task<FStatusAndamento> WriteAsync(Models.StatusAndamento statusandamento, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (statusandamento.Id.IsEmptyIDNumber() ? _statusandamentoFactory.CreateAsync() : _statusandamentoFactory.CreateFromIdAsync(statusandamento.Id, oCnn));
        dbRec.FNome = statusandamento.Nome;
        dbRec.FGUID = statusandamento.GUID;
        dbRec.FIcone = statusandamento.Icone;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}