// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBPreClientes
{
    public DBPreClientes(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBPreClientes(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PreClientes: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Adv)))
                m_FAdv = Convert.ToInt32(getValue(DBPreClientesDicInfo.Adv));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBPreClientesDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Data)))
                m_FData = Convert.ToDateTime(getValue(DBPreClientesDicInfo.Data));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBPreClientesDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBPreClientesDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBPreClientesDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Idade)))
                m_FIdade = Convert.ToInt32(getValue(DBPreClientesDicInfo.Idade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.IDRep)))
                m_FIDRep = Convert.ToInt32(getValue(DBPreClientesDicInfo.IDRep));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Inativo)))
                m_FInativo = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Inativo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Juridica)))
                m_FJuridica = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Juridica));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBPreClientesDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBPreClientesDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Tipo)))
                m_FTipo = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Tipo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.TipoCaptacao)))
                m_FTipoCaptacao = Convert.ToBoolean(getValue(DBPreClientesDicInfo.TipoCaptacao));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBPreClientesDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBPreClientesDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FAssCPF = getValue(DBPreClientesDicInfo.AssCPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FAssEndereco = getValue(DBPreClientesDicInfo.AssEndereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FAssistido = getValue(DBPreClientesDicInfo.Assistido)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FAssRG = getValue(DBPreClientesDicInfo.AssRG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBPreClientesDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBPreClientesDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBPreClientesDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNH = getValue(DBPreClientesDicInfo.CNH)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNPJ = getValue(DBPreClientesDicInfo.CNPJ)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBPreClientesDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBPreClientesDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBPreClientesDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFax = getValue(DBPreClientesDicInfo.Fax)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBPreClientesDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FHomePage = getValue(DBPreClientesDicInfo.HomePage)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FInscEst = getValue(DBPreClientesDicInfo.InscEst)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBPreClientesDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNomeFantasia = getValue(DBPreClientesDicInfo.NomeFantasia)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacao = getValue(DBPreClientesDicInfo.Observacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FQualificacao = getValue(DBPreClientesDicInfo.Qualificacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FQuemIndicou = getValue(DBPreClientesDicInfo.QuemIndicou)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBPreClientesDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PreClientes: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do PreClientes: {ex.Message}", ex);
        }
    }
}