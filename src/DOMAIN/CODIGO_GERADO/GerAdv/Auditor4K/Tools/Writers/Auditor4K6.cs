// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAuditor4KWriter
{
    Task<FAuditor4K> WriteAsync(Models.Auditor4K auditor4k, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(Auditor4KResponse auditor4k, int operadorId, MsiSqlConnection oCnn);
}

public class Auditor4KWriter(IFAuditor4KFactory auditor4kFactory) : IAuditor4KWriter
{
    private readonly IFAuditor4KFactory _auditor4kFactory = auditor4kFactory;
    public async Task Delete(Auditor4KResponse auditor4k, int operadorId, MsiSqlConnection oCnn)
    {
        await _auditor4kFactory.DeleteAsync(operadorId, auditor4k.Id, oCnn);
    }

    public async Task<FAuditor4K> WriteAsync(Models.Auditor4K auditor4k, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (auditor4k.Id.IsEmptyIDNumber() ? _auditor4kFactory.CreateAsync() : _auditor4kFactory.CreateFromIdAsync(auditor4k.Id, oCnn));
        dbRec.FNome = auditor4k.Nome;
        dbRec.FGUID = auditor4k.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}