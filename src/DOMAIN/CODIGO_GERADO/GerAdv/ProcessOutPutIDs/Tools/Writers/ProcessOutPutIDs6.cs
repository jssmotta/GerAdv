// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProcessOutPutIDsWriter
{
    Task<FProcessOutPutIDs> WriteAsync(Models.ProcessOutPutIDs processoutputids, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProcessOutPutIDsResponse processoutputids, int operadorId, MsiSqlConnection oCnn);
}

public class ProcessOutPutIDsWriter(IFProcessOutPutIDsFactory processoutputidsFactory) : IProcessOutPutIDsWriter
{
    private readonly IFProcessOutPutIDsFactory _processoutputidsFactory = processoutputidsFactory ?? throw new ArgumentNullException(nameof(processoutputidsFactory));
    public virtual async Task Delete(ProcessOutPutIDsResponse processoutputids, int operadorId, MsiSqlConnection oCnn)
    {
        await _processoutputidsFactory.DeleteAsync(operadorId, processoutputids.Id, oCnn);
    }

    public virtual async Task<FProcessOutPutIDs> WriteAsync(Models.ProcessOutPutIDs processoutputids, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (processoutputids.Id.IsEmptyIDNumber() ? _processoutputidsFactory.CreateAsync() : _processoutputidsFactory.CreateFromIdAsync(processoutputids.Id, oCnn));
        dbRec.FNome = processoutputids.Nome;
        dbRec.FGUID = processoutputids.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}