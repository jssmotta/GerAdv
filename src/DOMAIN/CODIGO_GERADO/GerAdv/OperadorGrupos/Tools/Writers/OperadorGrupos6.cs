// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IOperadorGruposWriter
{
    Task<FOperadorGrupos> WriteAsync(Models.OperadorGrupos operadorgrupos, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(OperadorGruposResponse operadorgrupos, int operadorId, MsiSqlConnection? oCnn);
}

public class OperadorGruposWriter(IFOperadorGruposFactory operadorgruposFactory) : IOperadorGruposWriter
{
    private readonly IFOperadorGruposFactory _operadorgruposFactory = operadorgruposFactory ?? throw new ArgumentNullException(nameof(operadorgruposFactory));
    public virtual async Task Delete(OperadorGruposResponse operadorgrupos, int operadorId, MsiSqlConnection? oCnn)
    {
        await _operadorgruposFactory.DeleteAsync(operadorId, operadorgrupos.Id, oCnn);
    }

    public virtual async Task<FOperadorGrupos> WriteAsync(Models.OperadorGrupos operadorgrupos, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (operadorgrupos.Id.IsEmptyIDNumber() ? _operadorgruposFactory.CreateAsync() : _operadorgruposFactory.CreateFromIdAsync(operadorgrupos.Id, oCnn));
        dbRec.FNome = operadorgrupos.Nome;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}