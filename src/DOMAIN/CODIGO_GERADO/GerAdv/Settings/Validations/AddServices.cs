using MenphisSI.GerAdv.Validations;

#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Validations;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public static class AddServices
{
    public static void Add(WebApplicationBuilder builder)
    {
        builder.Services.AddSingleton<IAcaoValidation, AcaoValidation>();
        builder.Services.AddSingleton<IAdvogadosValidation, AdvogadosValidation>();
        builder.Services.AddSingleton<IAgendaValidation, AgendaValidation>();
        builder.Services.AddSingleton<IAgenda2AgendaValidation, Agenda2AgendaValidation>();
        builder.Services.AddSingleton<IAgendaFinanceiroValidation, AgendaFinanceiroValidation>();
        builder.Services.AddSingleton<IAgendaQuemValidation, AgendaQuemValidation>();
        builder.Services.AddSingleton<IAgendaRecordsValidation, AgendaRecordsValidation>();
        builder.Services.AddSingleton<IAgendaRepetirValidation, AgendaRepetirValidation>();
        builder.Services.AddSingleton<IAgendaRepetirDiasValidation, AgendaRepetirDiasValidation>();
        builder.Services.AddSingleton<IAgendaStatusValidation, AgendaStatusValidation>();
        builder.Services.AddSingleton<IAlarmSMSValidation, AlarmSMSValidation>();
        builder.Services.AddSingleton<IAlertasValidation, AlertasValidation>();
        builder.Services.AddSingleton<IAlertasEnviadosValidation, AlertasEnviadosValidation>();
        builder.Services.AddSingleton<IAndamentosMDValidation, AndamentosMDValidation>();
        builder.Services.AddSingleton<IAndCompValidation, AndCompValidation>();
        builder.Services.AddSingleton<IAnexamentoRegistrosValidation, AnexamentoRegistrosValidation>();
        builder.Services.AddSingleton<IApensoValidation, ApensoValidation>();
        builder.Services.AddSingleton<IApenso2Validation, Apenso2Validation>();
        builder.Services.AddSingleton<IAreaValidation, AreaValidation>();
        builder.Services.AddSingleton<IAreasJusticaValidation, AreasJusticaValidation>();
        builder.Services.AddSingleton<IAtividadesValidation, AtividadesValidation>();
        builder.Services.AddSingleton<IAuditor4KValidation, Auditor4KValidation>();
        builder.Services.AddSingleton<IBensClassificacaoValidation, BensClassificacaoValidation>();
        builder.Services.AddSingleton<IBensMateriaisValidation, BensMateriaisValidation>();
        builder.Services.AddSingleton<ICargosValidation, CargosValidation>();
        builder.Services.AddSingleton<ICargosEscValidation, CargosEscValidation>();
        builder.Services.AddSingleton<ICargosEscClassValidation, CargosEscClassValidation>();
        builder.Services.AddSingleton<ICidadeValidation, CidadeValidation>();
        builder.Services.AddSingleton<IClientesValidation, ClientesValidation>();
        builder.Services.AddSingleton<IClientesSociosValidation, ClientesSociosValidation>();
        builder.Services.AddSingleton<IColaboradoresValidation, ColaboradoresValidation>();
        builder.Services.AddSingleton<IContaCorrenteValidation, ContaCorrenteValidation>();
        builder.Services.AddSingleton<IContatoCRMValidation, ContatoCRMValidation>();
        builder.Services.AddSingleton<IContatoCRMOperadorValidation, ContatoCRMOperadorValidation>();
        builder.Services.AddSingleton<IContatoCRMViewValidation, ContatoCRMViewValidation>();
        builder.Services.AddSingleton<IContratosValidation, ContratosValidation>();
        builder.Services.AddSingleton<IDadosProcuracaoValidation, DadosProcuracaoValidation>();
        builder.Services.AddSingleton<IDiario2Validation, Diario2Validation>();
        builder.Services.AddSingleton<IDivisaoTribunalValidation, DivisaoTribunalValidation>();
        builder.Services.AddSingleton<IDocsRecebidosItensValidation, DocsRecebidosItensValidation>();
        builder.Services.AddSingleton<IDocumentosValidation, DocumentosValidation>();
        builder.Services.AddSingleton<IEMPClassRiscosValidation, EMPClassRiscosValidation>();
        builder.Services.AddSingleton<IEnderecosValidation, EnderecosValidation>();
        builder.Services.AddSingleton<IEnderecoSistemaValidation, EnderecoSistemaValidation>();
        builder.Services.AddSingleton<IEndTitValidation, EndTitValidation>();
        builder.Services.AddSingleton<IEnquadramentoEmpresaValidation, EnquadramentoEmpresaValidation>();
        builder.Services.AddSingleton<IEscritoriosValidation, EscritoriosValidation>();
        builder.Services.AddSingleton<IEventoPrazoAgendaValidation, EventoPrazoAgendaValidation>();
        builder.Services.AddSingleton<IFaseValidation, FaseValidation>();
        builder.Services.AddSingleton<IFornecedoresValidation, FornecedoresValidation>();
        builder.Services.AddSingleton<IForoValidation, ForoValidation>();
        builder.Services.AddSingleton<IFuncaoValidation, FuncaoValidation>();
        builder.Services.AddSingleton<IFuncionariosValidation, FuncionariosValidation>();
        builder.Services.AddSingleton<IGraphValidation, GraphValidation>();
        builder.Services.AddSingleton<IGruposEmpresasValidation, GruposEmpresasValidation>();
        builder.Services.AddSingleton<IGruposEmpresasCliValidation, GruposEmpresasCliValidation>();
        builder.Services.AddSingleton<IGUTAtividadesValidation, GUTAtividadesValidation>();
        builder.Services.AddSingleton<IGUTAtividadesMatrizValidation, GUTAtividadesMatrizValidation>();
        builder.Services.AddSingleton<IGUTMatrizValidation, GUTMatrizValidation>();
        builder.Services.AddSingleton<IGUTPeriodicidadeValidation, GUTPeriodicidadeValidation>();
        builder.Services.AddSingleton<IGUTPeriodicidadeStatusValidation, GUTPeriodicidadeStatusValidation>();
        builder.Services.AddSingleton<IGUTTipoValidation, GUTTipoValidation>();
        builder.Services.AddSingleton<IHistoricoValidation, HistoricoValidation>();
        builder.Services.AddSingleton<IHonorariosDadosContratoValidation, HonorariosDadosContratoValidation>();
        builder.Services.AddSingleton<IHorasTrabValidation, HorasTrabValidation>();
        builder.Services.AddSingleton<IInstanciaValidation, InstanciaValidation>();
        builder.Services.AddSingleton<IJusticaValidation, JusticaValidation>();
        builder.Services.AddSingleton<ILigacoesValidation, LigacoesValidation>();
        builder.Services.AddSingleton<ILivroCaixaValidation, LivroCaixaValidation>();
        builder.Services.AddSingleton<ILivroCaixaClientesValidation, LivroCaixaClientesValidation>();
        builder.Services.AddSingleton<IModelosDocumentosValidation, ModelosDocumentosValidation>();
        builder.Services.AddSingleton<INECompromissosValidation, NECompromissosValidation>();
        builder.Services.AddSingleton<INENotasValidation, NENotasValidation>();
        builder.Services.AddSingleton<INEPalavrasChavesValidation, NEPalavrasChavesValidation>();
        builder.Services.AddSingleton<IObjetosValidation, ObjetosValidation>();
        builder.Services.AddSingleton<IOperadorValidation, OperadorValidation>();
        builder.Services.AddSingleton<IOperadorEMailPopupValidation, OperadorEMailPopupValidation>();
        builder.Services.AddSingleton<IOperadoresValidation, OperadoresValidation>();
        builder.Services.AddSingleton<IOperadorGrupoValidation, OperadorGrupoValidation>();
        builder.Services.AddSingleton<IOperadorGruposValidation, OperadorGruposValidation>();
        builder.Services.AddSingleton<IOperadorGruposAgendaValidation, OperadorGruposAgendaValidation>();
        builder.Services.AddSingleton<IOperadorGruposAgendaOperadoresValidation, OperadorGruposAgendaOperadoresValidation>();
        builder.Services.AddSingleton<IOponentesValidation, OponentesValidation>();
        builder.Services.AddSingleton<IOponentesRepLegalValidation, OponentesRepLegalValidation>();
        builder.Services.AddSingleton<IOutrasPartesClienteValidation, OutrasPartesClienteValidation>();
        builder.Services.AddSingleton<IPaisesValidation, PaisesValidation>();
        builder.Services.AddSingleton<IParceriaProcValidation, ParceriaProcValidation>();
        builder.Services.AddSingleton<IParteClienteOutrasValidation, ParteClienteOutrasValidation>();
        builder.Services.AddSingleton<IPenhoraValidation, PenhoraValidation>();
        builder.Services.AddSingleton<IPenhoraStatusValidation, PenhoraStatusValidation>();
        builder.Services.AddSingleton<IPoderJudiciarioAssociadoValidation, PoderJudiciarioAssociadoValidation>();
        builder.Services.AddSingleton<IPontoVirtualValidation, PontoVirtualValidation>();
        builder.Services.AddSingleton<IPontoVirtualAcessosValidation, PontoVirtualAcessosValidation>();
        builder.Services.AddSingleton<IPosicaoOutrasPartesValidation, PosicaoOutrasPartesValidation>();
        builder.Services.AddSingleton<IPrecatoriaValidation, PrecatoriaValidation>();
        builder.Services.AddSingleton<IPreClientesValidation, PreClientesValidation>();
        builder.Services.AddSingleton<IPrepostosValidation, PrepostosValidation>();
        builder.Services.AddSingleton<IProCDAValidation, ProCDAValidation>();
        builder.Services.AddSingleton<IProcessosValidation, ProcessosValidation>();
        builder.Services.AddSingleton<IProcessosObsReportValidation, ProcessosObsReportValidation>();
        builder.Services.AddSingleton<IProcessosParadosValidation, ProcessosParadosValidation>();
        builder.Services.AddSingleton<IProcessOutputEngineValidation, ProcessOutputEngineValidation>();
        builder.Services.AddSingleton<IProcessOutPutIDsValidation, ProcessOutPutIDsValidation>();
        builder.Services.AddSingleton<IProcessOutputRequestValidation, ProcessOutputRequestValidation>();
        builder.Services.AddSingleton<IProcessOutputSourcesValidation, ProcessOutputSourcesValidation>();
        builder.Services.AddSingleton<IProDepositosValidation, ProDepositosValidation>();
        builder.Services.AddSingleton<IProDespesasValidation, ProDespesasValidation>();
        builder.Services.AddSingleton<IProObservacoesValidation, ProObservacoesValidation>();
        builder.Services.AddSingleton<IProPartesValidation, ProPartesValidation>();
        builder.Services.AddSingleton<IProProcuradoresValidation, ProProcuradoresValidation>();
        builder.Services.AddSingleton<IProResumosValidation, ProResumosValidation>();
        builder.Services.AddSingleton<IProSucumbenciaValidation, ProSucumbenciaValidation>();
        builder.Services.AddSingleton<IProTipoBaixaValidation, ProTipoBaixaValidation>();
        builder.Services.AddSingleton<IProValoresValidation, ProValoresValidation>();
        builder.Services.AddSingleton<IRamalValidation, RamalValidation>();
        builder.Services.AddSingleton<IRecadosValidation, RecadosValidation>();
        builder.Services.AddSingleton<IRegimeTributacaoValidation, RegimeTributacaoValidation>();
        builder.Services.AddSingleton<IReuniaoValidation, ReuniaoValidation>();
        builder.Services.AddSingleton<IReuniaoPessoasValidation, ReuniaoPessoasValidation>();
        builder.Services.AddSingleton<IRitoValidation, RitoValidation>();
        builder.Services.AddSingleton<IServicosValidation, ServicosValidation>();
        builder.Services.AddSingleton<ISetorValidation, SetorValidation>();
        builder.Services.AddSingleton<ISituacaoValidation, SituacaoValidation>();
        builder.Services.AddSingleton<ISMSAliceValidation, SMSAliceValidation>();
        builder.Services.AddSingleton<IStatusAndamentoValidation, StatusAndamentoValidation>();
        builder.Services.AddSingleton<IStatusBiuValidation, StatusBiuValidation>();
        builder.Services.AddSingleton<IStatusHTrabValidation, StatusHTrabValidation>();
        builder.Services.AddSingleton<IStatusInstanciaValidation, StatusInstanciaValidation>();
        builder.Services.AddSingleton<IStatusTarefasValidation, StatusTarefasValidation>();
        builder.Services.AddSingleton<ITerceirosValidation, TerceirosValidation>();
        builder.Services.AddSingleton<ITipoCompromissoValidation, TipoCompromissoValidation>();
        builder.Services.AddSingleton<ITipoContatoCRMValidation, TipoContatoCRMValidation>();
        builder.Services.AddSingleton<ITipoEMailValidation, TipoEMailValidation>();
        builder.Services.AddSingleton<ITipoEnderecoValidation, TipoEnderecoValidation>();
        builder.Services.AddSingleton<ITipoEnderecoSistemaValidation, TipoEnderecoSistemaValidation>();
        builder.Services.AddSingleton<ITipoModeloDocumentoValidation, TipoModeloDocumentoValidation>();
        builder.Services.AddSingleton<ITipoOrigemSucumbenciaValidation, TipoOrigemSucumbenciaValidation>();
        builder.Services.AddSingleton<ITipoProDespositoValidation, TipoProDespositoValidation>();
        builder.Services.AddSingleton<ITipoRecursoValidation, TipoRecursoValidation>();
        builder.Services.AddSingleton<ITiposAcaoValidation, TiposAcaoValidation>();
        builder.Services.AddSingleton<ITipoStatusBiuValidation, TipoStatusBiuValidation>();
        builder.Services.AddSingleton<ITipoValorProcessoValidation, TipoValorProcessoValidation>();
        builder.Services.AddSingleton<ITribEnderecosValidation, TribEnderecosValidation>();
        builder.Services.AddSingleton<ITribunalValidation, TribunalValidation>();
        builder.Services.AddSingleton<IUFValidation, UFValidation>();
        builder.Services.AddSingleton<IUltimosProcessosValidation, UltimosProcessosValidation>();
        builder.Services.AddSingleton<IViaRecebimentoValidation, ViaRecebimentoValidation>();
        builder.Services.AddSingleton<IAgendaRelatorioValidation, AgendaRelatorioValidation>();
        builder.Services.AddSingleton<IAgendaSemanaValidation, AgendaSemanaValidation>();
    }
}