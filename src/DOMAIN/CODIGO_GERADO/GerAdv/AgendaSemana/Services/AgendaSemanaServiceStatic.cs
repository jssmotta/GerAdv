// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class AgendaSemanaService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterAgendaSemana? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (!string.IsNullOrWhiteSpace(filtro.ParaNome))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.ParaNome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.ParaNome)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Data))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Data)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Data)));
        }

        if (filtro.Funcionario != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Funcionario)}", filtro.Funcionario));
            if (filtro.Funcionario_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Funcionario)}_end", filtro.Funcionario_end));
            }
        }

        if (filtro.Advogado != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Advogado)}", filtro.Advogado));
            if (filtro.Advogado_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Advogado)}_end", filtro.Advogado_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Hora))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Hora)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Hora)));
        }

        if (filtro.TipoCompromisso != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.TipoCompromisso)}", filtro.TipoCompromisso));
            if (filtro.TipoCompromisso_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBAgendaSemanaDicInfo.TipoCompromisso)}_end", filtro.TipoCompromisso_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Compromisso))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Compromisso)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Compromisso)));
        }

        if (filtro.Concluido != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Concluido)}", filtro.Concluido));
        }

        if (filtro.Liberado != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Liberado)}", filtro.Liberado));
        }

        if (filtro.Importante != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Importante)}", filtro.Importante));
        }

        if (!string.IsNullOrWhiteSpace(filtro.HoraFinal))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.HoraFinal)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.HoraFinal)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Nome))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Nome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Cliente)}", filtro.Cliente));
            if (filtro.Cliente_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Cliente)}_end", filtro.Cliente_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.NomeCliente))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.NomeCliente)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.NomeCliente)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Tipo))
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.Tipo)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Tipo)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBAgendaSemanaDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBAgendaSemanaDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.ParaNome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.ParaNome}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.ParaNome)}");
        cWhere.Append(filtro.Data.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Data}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.Data)}");
        if (!(filtro.Funcionario.IsEmptyX()) && filtro.Funcionario_end.IsEmptyX())
        {
            cWhere.Append(filtro.Funcionario.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Funcionario}] = @{(DBAgendaSemanaDicInfo.Funcionario)}");
        }
        else if (!(filtro.Funcionario.IsEmptyX()) && !(filtro.Funcionario_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].{DBAgendaSemanaDicInfo.Funcionario} BETWEEN @{(DBAgendaSemanaDicInfo.Funcionario)} AND @{(DBAgendaSemanaDicInfo.Funcionario)}_end");
        }

        if (!(filtro.Advogado.IsEmptyX()) && filtro.Advogado_end.IsEmptyX())
        {
            cWhere.Append(filtro.Advogado.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Advogado}] = @{(DBAgendaSemanaDicInfo.Advogado)}");
        }
        else if (!(filtro.Advogado.IsEmptyX()) && !(filtro.Advogado_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].{DBAgendaSemanaDicInfo.Advogado} BETWEEN @{(DBAgendaSemanaDicInfo.Advogado)} AND @{(DBAgendaSemanaDicInfo.Advogado)}_end");
        }

        cWhere.Append(filtro.Hora.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Hora}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.Hora)}");
        if (!(filtro.TipoCompromisso.IsEmptyX()) && filtro.TipoCompromisso_end.IsEmptyX())
        {
            cWhere.Append(filtro.TipoCompromisso.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.TipoCompromisso}] = @{(DBAgendaSemanaDicInfo.TipoCompromisso)}");
        }
        else if (!(filtro.TipoCompromisso.IsEmptyX()) && !(filtro.TipoCompromisso_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].{DBAgendaSemanaDicInfo.TipoCompromisso} BETWEEN @{(DBAgendaSemanaDicInfo.TipoCompromisso)} AND @{(DBAgendaSemanaDicInfo.TipoCompromisso)}_end");
        }

        cWhere.Append(filtro.Compromisso.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Compromisso}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.Compromisso)}");
        cWhere.Append(filtro.Concluido == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Concluido}] = @{(DBAgendaSemanaDicInfo.Concluido)}");
        cWhere.Append(filtro.Liberado == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Liberado}] = @{(DBAgendaSemanaDicInfo.Liberado)}");
        cWhere.Append(filtro.Importante == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Importante}] = @{(DBAgendaSemanaDicInfo.Importante)}");
        cWhere.Append(filtro.HoraFinal.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.HoraFinal}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.HoraFinal)}");
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.Nome)}");
        if (!(filtro.Cliente.IsEmptyX()) && filtro.Cliente_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cliente.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Cliente}] = @{(DBAgendaSemanaDicInfo.Cliente)}");
        }
        else if (!(filtro.Cliente.IsEmptyX()) && !(filtro.Cliente_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].{DBAgendaSemanaDicInfo.Cliente} BETWEEN @{(DBAgendaSemanaDicInfo.Cliente)} AND @{(DBAgendaSemanaDicInfo.Cliente)}_end");
        }

        cWhere.Append(filtro.NomeCliente.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.NomeCliente}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.NomeCliente)}");
        cWhere.Append(filtro.Tipo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.Tipo}]  {DevourerConsts.MsiCollate} like @{(DBAgendaSemanaDicInfo.Tipo)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].[{DBAgendaSemanaDicInfo.CampoCodigo}] = @{(DBAgendaSemanaDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBAgendaSemanaDicInfo.PTabelaNome}].{DBAgendaSemanaDicInfo.CampoCodigo} BETWEEN @{(DBAgendaSemanaDicInfo.CampoCodigo)} AND @{(DBAgendaSemanaDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterAgendaSemana? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    private async Task<IEnumerable<AgendaSemanaResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter>? parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}