// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterPreClientes } from '@/app/GerAdv_TS/PreClientes/Filters/PreClientes';
import ClientesComboBox from '@/app/GerAdv_TS/Clientes/ComboBox/Clientes';
import CidadeComboBox from '@/app/GerAdv_TS/Cidade/ComboBox/Cidade';
interface UsePreClientesFilterProps {
  handleFetchWithFilter: (filtro?: FilterPreClientes | undefined | null) => Promise<void>;
}
interface UsePreClientesFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterPreClientes;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterPreClientes>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterPreClientes) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterPreClientes>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const usePreClientesFilter = ({ handleFetchWithFilter }: UsePreClientesFilterProps): UsePreClientesFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterPreClientes>({} as FilterPreClientes);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterPreClientes;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterPreClientes) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('PreClientesFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterPreClientes>) => (
  <>
  <InputComboFilterYesNo
  type='text'
  id='inativo'
  name='inativo'
  value={handlers.windowFilter?.inativo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Inativo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='quemindicou'
  name='quemindicou'
  value={handlers.windowFilter?.quemindicou ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe QuemIndicou'
  label='QuemIndicou'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nome'
  name='nome'
  value={handlers.windowFilter?.nome ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nome'
  label='Nome'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='adv'
  name='adv'
  value={handlers.windowFilter?.adv ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Adv'
  label='Adv (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='adv_end'
  name='adv_end'
  value={handlers.windowFilter?.adv_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Adv final'
  label='Adv final'
  disabled={handlers.windowFilter?.adv ? false: true}
  className='inputIncNome inputSearch'
  />
  <ClientesComboBox
  name='idrep'
  dataForm={null}
  value={handlers.windowFilter?.idrep}
  setValue={(e:any) => handlers.handleComboChange(e, 'idrep')}
  className='inputSearch inputSearchComboboxTab'
  label='Clientes'
  />
  <InputComboFilterYesNo
  type='text'
  id='juridica'
  name='juridica'
  value={handlers.windowFilter?.juridica ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Juridica'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='nomefantasia'
  name='nomefantasia'
  value={handlers.windowFilter?.nomefantasia ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NomeFantasia'
  label='NomeFantasia'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='class'
  name='class'
  value={handlers.windowFilter?.class ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Class'
  label='Class'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='tipo'
  name='tipo'
  value={handlers.windowFilter?.tipo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Tipo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputDate
  type='text'
  id='dtnasc'
  label='DtNasc (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dtnasc'
  value={handlers.windowFilter?.dtnasc ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dtnasc', value)}
  />
  <InputDate
  type='text'
  id='dtnasc_end'
  label='DtNasc (final)'
  dataForm={null}
  className='inputSearch'
  name='dtnasc_end'
  value={handlers.windowFilter?.dtnasc_end ?? ''}
  disabled={handlers.windowFilter?.dtnasc ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dtnasc_end', value)}
  />
  <InputInput
  type='text'
  id='inscest'
  name='inscest'
  value={handlers.windowFilter?.inscest ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe InscEst'
  label='InscEst'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='qualificacao'
  name='qualificacao'
  value={handlers.windowFilter?.qualificacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Qualificacao'
  label='Qualificacao'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='sexo'
  name='sexo'
  value={handlers.windowFilter?.sexo ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='Sexo'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='idade'
  name='idade'
  value={handlers.windowFilter?.idade ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Idade'
  label='Idade (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='idade_end'
  name='idade_end'
  value={handlers.windowFilter?.idade_end ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Idade final'
  label='Idade final'
  disabled={handlers.windowFilter?.idade ? false: true}
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cnpj'
  name='cnpj'
  value={handlers.windowFilter?.cnpj ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CNPJ'
  label='CNPJ'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cpf'
  name='cpf'
  value={handlers.windowFilter?.cpf ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CPF'
  label='CPF'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='rg'
  name='rg'
  value={handlers.windowFilter?.rg ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe RG'
  label='RG'
  className='inputIncNome inputSearch'
  />
  <InputComboFilterYesNo
  type='text'
  id='tipocaptacao'
  name='tipocaptacao'
  value={handlers.windowFilter?.tipocaptacao ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='TipoCaptacao'
  className='inputSearch inputSearchCheckbox'
  />
  <InputInput
  type='text'
  id='observacao'
  name='observacao'
  value={handlers.windowFilter?.observacao ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Observacao'
  label='Observacao'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='endereco'
  name='endereco'
  value={handlers.windowFilter?.endereco ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Endereco'
  label='Endereco'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='bairro'
  name='bairro'
  value={handlers.windowFilter?.bairro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Bairro'
  label='Bairro'
  className='inputIncNome inputSearch'
  />
  <CidadeComboBox
  name='cidade'
  dataForm={null}
  value={handlers.windowFilter?.cidade}
  setValue={(e:any) => handlers.handleComboChange(e, 'cidade')}
  className='inputSearch inputSearchComboboxTab'
  label='Cidade'
  />
  <InputInput
  type='text'
  id='cep'
  name='cep'
  value={handlers.windowFilter?.cep ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CEP'
  label='CEP'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fax'
  name='fax'
  value={handlers.windowFilter?.fax ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fax'
  label='Fax'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='fone'
  name='fone'
  value={handlers.windowFilter?.fone ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Fone'
  label='Fone'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='data'
  name='data'
  value={handlers.windowFilter?.data ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Data'
  label='Data'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='homepage'
  name='homepage'
  value={handlers.windowFilter?.homepage ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe HomePage'
  label='HomePage'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='email'
  name='email'
  value={handlers.windowFilter?.email ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe EMail'
  label='EMail'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='assistido'
  name='assistido'
  value={handlers.windowFilter?.assistido ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Assistido'
  label='Assistido'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='assrg'
  name='assrg'
  value={handlers.windowFilter?.assrg ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AssRG'
  label='AssRG'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='asscpf'
  name='asscpf'
  value={handlers.windowFilter?.asscpf ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AssCPF'
  label='AssCPF'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='assendereco'
  name='assendereco'
  value={handlers.windowFilter?.assendereco ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe AssEndereco'
  label='AssEndereco'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='cnh'
  name='cnh'
  value={handlers.windowFilter?.cnh ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe CNH'
  label='CNH'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};