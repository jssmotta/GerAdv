#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Readers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public static class AddServices
{
    public static void Add(WebApplicationBuilder builder)
    {
        builder.Services.AddScoped<IAcaoReader, Acao>();
        builder.Services.AddScoped<IAdvogadosReader, Advogados>();
        builder.Services.AddScoped<IAgendaReader, Agenda>();
        builder.Services.AddScoped<IAgenda2AgendaReader, Agenda2Agenda>();
        builder.Services.AddScoped<IAgendaFinanceiroReader, AgendaFinanceiro>();
        builder.Services.AddScoped<IAgendaQuemReader, AgendaQuem>();
        builder.Services.AddScoped<IAgendaRecordsReader, AgendaRecords>();
        builder.Services.AddScoped<IAgendaRepetirReader, AgendaRepetir>();
        builder.Services.AddScoped<IAgendaRepetirDiasReader, AgendaRepetirDias>();
        builder.Services.AddScoped<IAgendaStatusReader, AgendaStatus>();
        builder.Services.AddScoped<IAlarmSMSReader, AlarmSMS>();
        builder.Services.AddScoped<IAlertasReader, Alertas>();
        builder.Services.AddScoped<IAlertasEnviadosReader, AlertasEnviados>();
        builder.Services.AddScoped<IAndamentosMDReader, AndamentosMD>();
        builder.Services.AddScoped<IAndCompReader, AndComp>();
        builder.Services.AddScoped<IAnexamentoRegistrosReader, AnexamentoRegistros>();
        builder.Services.AddScoped<IApensoReader, Apenso>();
        builder.Services.AddScoped<IApenso2Reader, Apenso2>();
        builder.Services.AddScoped<IAreaReader, Area>();
        builder.Services.AddScoped<IAreasJusticaReader, AreasJustica>();
        builder.Services.AddScoped<IAtividadesReader, Atividades>();
        builder.Services.AddScoped<IAuditor4KReader, Auditor4K>();
        builder.Services.AddScoped<IBensClassificacaoReader, BensClassificacao>();
        builder.Services.AddScoped<IBensMateriaisReader, BensMateriais>();
        builder.Services.AddScoped<ICargosReader, Cargos>();
        builder.Services.AddScoped<ICargosEscReader, CargosEsc>();
        builder.Services.AddScoped<ICargosEscClassReader, CargosEscClass>();
        builder.Services.AddScoped<ICidadeReader, Cidade>();
        builder.Services.AddScoped<IClientesReader, Clientes>();
        builder.Services.AddScoped<IClientesSociosReader, ClientesSocios>();
        builder.Services.AddScoped<IColaboradoresReader, Colaboradores>();
        builder.Services.AddScoped<IContaCorrenteReader, ContaCorrente>();
        builder.Services.AddScoped<IContatoCRMReader, ContatoCRM>();
        builder.Services.AddScoped<IContatoCRMOperadorReader, ContatoCRMOperador>();
        builder.Services.AddScoped<IContatoCRMViewReader, ContatoCRMView>();
        builder.Services.AddScoped<IContratosReader, Contratos>();
        builder.Services.AddScoped<IDadosProcuracaoReader, DadosProcuracao>();
        builder.Services.AddScoped<IDiario2Reader, Diario2>();
        builder.Services.AddScoped<IDivisaoTribunalReader, DivisaoTribunal>();
        builder.Services.AddScoped<IDocsRecebidosItensReader, DocsRecebidosItens>();
        builder.Services.AddScoped<IDocumentosReader, Documentos>();
        builder.Services.AddScoped<IEMPClassRiscosReader, EMPClassRiscos>();
        builder.Services.AddScoped<IEnderecosReader, Enderecos>();
        builder.Services.AddScoped<IEnderecoSistemaReader, EnderecoSistema>();
        builder.Services.AddScoped<IEndTitReader, EndTit>();
        builder.Services.AddScoped<IEnquadramentoEmpresaReader, EnquadramentoEmpresa>();
        builder.Services.AddScoped<IEscritoriosReader, Escritorios>();
        builder.Services.AddScoped<IEventoPrazoAgendaReader, EventoPrazoAgenda>();
        builder.Services.AddScoped<IFaseReader, Fase>();
        builder.Services.AddScoped<IFornecedoresReader, Fornecedores>();
        builder.Services.AddScoped<IForoReader, Foro>();
        builder.Services.AddScoped<IFuncaoReader, Funcao>();
        builder.Services.AddScoped<IFuncionariosReader, Funcionarios>();
        builder.Services.AddScoped<IGraphReader, Graph>();
        builder.Services.AddScoped<IGruposEmpresasReader, GruposEmpresas>();
        builder.Services.AddScoped<IGruposEmpresasCliReader, GruposEmpresasCli>();
        builder.Services.AddScoped<IGUTAtividadesReader, GUTAtividades>();
        builder.Services.AddScoped<IGUTAtividadesMatrizReader, GUTAtividadesMatriz>();
        builder.Services.AddScoped<IGUTMatrizReader, GUTMatriz>();
        builder.Services.AddScoped<IGUTPeriodicidadeReader, GUTPeriodicidade>();
        builder.Services.AddScoped<IGUTPeriodicidadeStatusReader, GUTPeriodicidadeStatus>();
        builder.Services.AddScoped<IGUTTipoReader, GUTTipo>();
        builder.Services.AddScoped<IHistoricoReader, Historico>();
        builder.Services.AddScoped<IHonorariosDadosContratoReader, HonorariosDadosContrato>();
        builder.Services.AddScoped<IHorasTrabReader, HorasTrab>();
        builder.Services.AddScoped<IInstanciaReader, Instancia>();
        builder.Services.AddScoped<IJusticaReader, Justica>();
        builder.Services.AddScoped<ILigacoesReader, Ligacoes>();
        builder.Services.AddScoped<ILivroCaixaReader, LivroCaixa>();
        builder.Services.AddScoped<ILivroCaixaClientesReader, LivroCaixaClientes>();
        builder.Services.AddScoped<IModelosDocumentosReader, ModelosDocumentos>();
        builder.Services.AddScoped<INECompromissosReader, NECompromissos>();
        builder.Services.AddScoped<INENotasReader, NENotas>();
        builder.Services.AddScoped<INEPalavrasChavesReader, NEPalavrasChaves>();
        builder.Services.AddScoped<IObjetosReader, Objetos>();
        builder.Services.AddScoped<IOperadorReader, Operador>();
        builder.Services.AddScoped<IOperadorEMailPopupReader, OperadorEMailPopup>();
        builder.Services.AddScoped<IOperadoresReader, Operadores>();
        builder.Services.AddScoped<IOperadorGrupoReader, OperadorGrupo>();
        builder.Services.AddScoped<IOperadorGruposReader, OperadorGrupos>();
        builder.Services.AddScoped<IOperadorGruposAgendaReader, OperadorGruposAgenda>();
        builder.Services.AddScoped<IOperadorGruposAgendaOperadoresReader, OperadorGruposAgendaOperadores>();
        builder.Services.AddScoped<IOponentesReader, Oponentes>();
        builder.Services.AddScoped<IOponentesRepLegalReader, OponentesRepLegal>();
        builder.Services.AddScoped<IOutrasPartesClienteReader, OutrasPartesCliente>();
        builder.Services.AddScoped<IPaisesReader, Paises>();
        builder.Services.AddScoped<IParceriaProcReader, ParceriaProc>();
        builder.Services.AddScoped<IParteClienteOutrasReader, ParteClienteOutras>();
        builder.Services.AddScoped<IPenhoraReader, Penhora>();
        builder.Services.AddScoped<IPenhoraStatusReader, PenhoraStatus>();
        builder.Services.AddScoped<IPoderJudiciarioAssociadoReader, PoderJudiciarioAssociado>();
        builder.Services.AddScoped<IPontoVirtualReader, PontoVirtual>();
        builder.Services.AddScoped<IPontoVirtualAcessosReader, PontoVirtualAcessos>();
        builder.Services.AddScoped<IPosicaoOutrasPartesReader, PosicaoOutrasPartes>();
        builder.Services.AddScoped<IPrecatoriaReader, Precatoria>();
        builder.Services.AddScoped<IPreClientesReader, PreClientes>();
        builder.Services.AddScoped<IPrepostosReader, Prepostos>();
        builder.Services.AddScoped<IProCDAReader, ProCDA>();
        builder.Services.AddScoped<IProcessosReader, Processos>();
        builder.Services.AddScoped<IProcessosObsReportReader, ProcessosObsReport>();
        builder.Services.AddScoped<IProcessosParadosReader, ProcessosParados>();
        builder.Services.AddScoped<IProcessOutputEngineReader, ProcessOutputEngine>();
        builder.Services.AddScoped<IProcessOutPutIDsReader, ProcessOutPutIDs>();
        builder.Services.AddScoped<IProcessOutputRequestReader, ProcessOutputRequest>();
        builder.Services.AddScoped<IProcessOutputSourcesReader, ProcessOutputSources>();
        builder.Services.AddScoped<IProDepositosReader, ProDepositos>();
        builder.Services.AddScoped<IProDespesasReader, ProDespesas>();
        builder.Services.AddScoped<IProObservacoesReader, ProObservacoes>();
        builder.Services.AddScoped<IProPartesReader, ProPartes>();
        builder.Services.AddScoped<IProProcuradoresReader, ProProcuradores>();
        builder.Services.AddScoped<IProResumosReader, ProResumos>();
        builder.Services.AddScoped<IProSucumbenciaReader, ProSucumbencia>();
        builder.Services.AddScoped<IProTipoBaixaReader, ProTipoBaixa>();
        builder.Services.AddScoped<IProValoresReader, ProValores>();
        builder.Services.AddScoped<IRamalReader, Ramal>();
        builder.Services.AddScoped<IRecadosReader, Recados>();
        builder.Services.AddScoped<IRegimeTributacaoReader, RegimeTributacao>();
        builder.Services.AddScoped<IReuniaoReader, Reuniao>();
        builder.Services.AddScoped<IReuniaoPessoasReader, ReuniaoPessoas>();
        builder.Services.AddScoped<IRitoReader, Rito>();
        builder.Services.AddScoped<IServicosReader, Servicos>();
        builder.Services.AddScoped<ISetorReader, Setor>();
        builder.Services.AddScoped<ISituacaoReader, Situacao>();
        builder.Services.AddScoped<ISMSAliceReader, SMSAlice>();
        builder.Services.AddScoped<IStatusAndamentoReader, StatusAndamento>();
        builder.Services.AddScoped<IStatusBiuReader, StatusBiu>();
        builder.Services.AddScoped<IStatusHTrabReader, StatusHTrab>();
        builder.Services.AddScoped<IStatusInstanciaReader, StatusInstancia>();
        builder.Services.AddScoped<IStatusTarefasReader, StatusTarefas>();
        builder.Services.AddScoped<ITerceirosReader, Terceiros>();
        builder.Services.AddScoped<ITipoCompromissoReader, TipoCompromisso>();
        builder.Services.AddScoped<ITipoContatoCRMReader, TipoContatoCRM>();
        builder.Services.AddScoped<ITipoEMailReader, TipoEMail>();
        builder.Services.AddScoped<ITipoEnderecoReader, TipoEndereco>();
        builder.Services.AddScoped<ITipoEnderecoSistemaReader, TipoEnderecoSistema>();
        builder.Services.AddScoped<ITipoModeloDocumentoReader, TipoModeloDocumento>();
        builder.Services.AddScoped<ITipoOrigemSucumbenciaReader, TipoOrigemSucumbencia>();
        builder.Services.AddScoped<ITipoProDespositoReader, TipoProDesposito>();
        builder.Services.AddScoped<ITipoRecursoReader, TipoRecurso>();
        builder.Services.AddScoped<ITiposAcaoReader, TiposAcao>();
        builder.Services.AddScoped<ITipoStatusBiuReader, TipoStatusBiu>();
        builder.Services.AddScoped<ITipoValorProcessoReader, TipoValorProcesso>();
        builder.Services.AddScoped<ITribEnderecosReader, TribEnderecos>();
        builder.Services.AddScoped<ITribunalReader, Tribunal>();
        builder.Services.AddScoped<IUFReader, UF>();
        builder.Services.AddScoped<IUltimosProcessosReader, UltimosProcessos>();
        builder.Services.AddScoped<IViaRecebimentoReader, ViaRecebimento>();
        builder.Services.AddScoped<IAgendaRelatorioReader, AgendaRelatorio>();
        builder.Services.AddScoped<IAgendaSemanaReader, AgendaSemana>();
    }
}