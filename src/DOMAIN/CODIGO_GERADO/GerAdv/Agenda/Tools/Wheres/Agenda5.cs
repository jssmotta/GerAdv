// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Wheres;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAgendaWhere
{
    AgendaResponse Read(string where, List<SqlParameter> parameters, MsiSqlConnection oCnn);
}

public partial class AgendaWhere(IFAgendaFactory agendaFactory) : IAgendaWhere
{
    private readonly IFAgendaFactory _agendaFactory = agendaFactory;
    public AgendaResponse Read(string where, List<SqlParameter> parameters, MsiSqlConnection oCnn)
    {
        using var dbRec = _agendaFactory.CreateFromParameters(parameters, oCnn, sqlWhere: where);
        var agenda = new AgendaResponse
        {
            Id = dbRec.ID,
            IDCOB = dbRec.FIDCOB,
            ClienteAvisado = dbRec.FClienteAvisado,
            RevisarP2 = dbRec.FRevisarP2,
            IDNE = dbRec.FIDNE,
            Cidade = dbRec.FCidade,
            Oculto = dbRec.FOculto,
            CartaPrecatoria = dbRec.FCartaPrecatoria,
            Revisar = dbRec.FRevisar,
            Advogado = dbRec.FAdvogado,
            EventoGerador = dbRec.FEventoGerador,
            Funcionario = dbRec.FFuncionario,
            Data = dbRec.FData ?? string.Empty,
            EventoPrazo = dbRec.FEventoPrazo,
            Compromisso = dbRec.FCompromisso ?? string.Empty,
            TipoCompromisso = dbRec.FTipoCompromisso,
            Cliente = dbRec.FCliente,
            Liberado = dbRec.FLiberado,
            Importante = dbRec.FImportante,
            Concluido = dbRec.FConcluido,
            Area = dbRec.FArea,
            Justica = dbRec.FJustica,
            Processo = dbRec.FProcesso,
            IDHistorico = dbRec.FIDHistorico,
            IDInsProcesso = dbRec.FIDInsProcesso,
            Usuario = dbRec.FUsuario,
            Preposto = dbRec.FPreposto,
            QuemID = dbRec.FQuemID,
            QuemCodigo = dbRec.FQuemCodigo,
            Status = dbRec.FStatus ?? string.Empty,
            Valor = dbRec.FValor,
            Decisao = dbRec.FDecisao ?? string.Empty,
            Sempre = dbRec.FSempre,
            PrazoDias = dbRec.FPrazoDias,
            ProtocoloIntegrado = dbRec.FProtocoloIntegrado,
            UsuarioCiente = dbRec.FUsuarioCiente,
            GUID = dbRec.FGUID ?? string.Empty,
        };
        if (DateTime.TryParse(dbRec.FHrFinal, out DateTime XHrFinal))
        {
            agenda.HrFinal = dbRec.FHrFinal;
            agenda.HrFinal_date = XHrFinal;
        }

        if (DateTime.TryParse(dbRec.FEventoData, out DateTime XEventoData))
        {
            agenda.EventoData = dbRec.FEventoData;
            agenda.EventoData_date = XEventoData;
        }

        if (DateTime.TryParse(dbRec.FHora, out DateTime XHora))
        {
            agenda.Hora = dbRec.FHora;
            agenda.Hora_date = XHora;
        }

        if (DateTime.TryParse(dbRec.FDataInicioPrazo, out DateTime XDataInicioPrazo))
        {
            agenda.DataInicioPrazo = dbRec.FDataInicioPrazo;
            agenda.DataInicioPrazo_date = XDataInicioPrazo;
        }

        return agenda;
    }
}