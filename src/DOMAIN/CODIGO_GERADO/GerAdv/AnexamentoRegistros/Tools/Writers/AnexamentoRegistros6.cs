// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAnexamentoRegistrosWriter
{
    Task<FAnexamentoRegistros> WriteAsync(Models.AnexamentoRegistros anexamentoregistros, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(AnexamentoRegistrosResponse anexamentoregistros, int operadorId, MsiSqlConnection oCnn);
}

public class AnexamentoRegistrosWriter(IFAnexamentoRegistrosFactory anexamentoregistrosFactory) : IAnexamentoRegistrosWriter
{
    private readonly IFAnexamentoRegistrosFactory _anexamentoregistrosFactory = anexamentoregistrosFactory;
    public async Task Delete(AnexamentoRegistrosResponse anexamentoregistros, int operadorId, MsiSqlConnection oCnn)
    {
        await _anexamentoregistrosFactory.DeleteAsync(operadorId, anexamentoregistros.Id, oCnn);
    }

    public async Task<FAnexamentoRegistros> WriteAsync(Models.AnexamentoRegistros anexamentoregistros, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (anexamentoregistros.Id.IsEmptyIDNumber() ? _anexamentoregistrosFactory.CreateAsync() : _anexamentoregistrosFactory.CreateFromIdAsync(anexamentoregistros.Id, oCnn));
        dbRec.FCliente = anexamentoregistros.Cliente;
        dbRec.FGUIDReg = anexamentoregistros.GUIDReg;
        dbRec.FCodigoReg = anexamentoregistros.CodigoReg;
        dbRec.FIDReg = anexamentoregistros.IDReg;
        dbRec.FData = anexamentoregistros.Data;
        dbRec.FGUID = anexamentoregistros.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}