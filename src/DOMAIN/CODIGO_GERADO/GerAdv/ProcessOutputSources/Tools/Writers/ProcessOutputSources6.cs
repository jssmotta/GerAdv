// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProcessOutputSourcesWriter
{
    Task<FProcessOutputSources> WriteAsync(Models.ProcessOutputSources processoutputsources, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProcessOutputSourcesResponse processoutputsources, int operadorId, MsiSqlConnection oCnn);
}

public class ProcessOutputSourcesWriter(IFProcessOutputSourcesFactory processoutputsourcesFactory) : IProcessOutputSourcesWriter
{
    private readonly IFProcessOutputSourcesFactory _processoutputsourcesFactory = processoutputsourcesFactory ?? throw new ArgumentNullException(nameof(processoutputsourcesFactory));
    public virtual async Task Delete(ProcessOutputSourcesResponse processoutputsources, int operadorId, MsiSqlConnection oCnn)
    {
        await _processoutputsourcesFactory.DeleteAsync(operadorId, processoutputsources.Id, oCnn);
    }

    public virtual async Task<FProcessOutputSources> WriteAsync(Models.ProcessOutputSources processoutputsources, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (processoutputsources.Id.IsEmptyIDNumber() ? _processoutputsourcesFactory.CreateAsync() : _processoutputsourcesFactory.CreateFromIdAsync(processoutputsources.Id, oCnn));
        dbRec.FNome = processoutputsources.Nome;
        dbRec.FGUID = processoutputsources.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}