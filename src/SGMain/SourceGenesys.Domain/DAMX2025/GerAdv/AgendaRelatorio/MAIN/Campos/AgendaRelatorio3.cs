// 100% auto-generated by Source Genesys Core
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBAgendaRelatorio
{
    [XmlIgnore]
    [EditorBrowsable(EditorBrowsableState.Never)]
    private protected int m_FvqaProcesso;
    [XmlIgnore]
    [EditorBrowsable(EditorBrowsableState.Never)]
    private protected string? m_FxxxParaNome, m_FxxxParaPessoas, m_FxxxBoxAudiencia, m_FxxxBoxAudienciaMobile, m_FxxxNomeAdvogado, m_FxxxNomeForo, m_FxxxNomeJustica, m_FxxxNomeArea;
    [XmlIgnore]
    [EditorBrowsable(EditorBrowsableState.Never)]
    private protected DateTime? m_FvqaData;
    public virtual string? FvqaData
    {
        get => $"{m_FvqaData:dd/MM/yyyy HH:mm:ss}";
        set
        {
            if (string.IsNullOrEmpty(value))
                return;
            if (DateTime.TryParseExact(value, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out var dt) || DateTime.TryParseExact(value, "dd/MM/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out dt))
            {
                m_FvqaData = dt;
            }
            else
            {
                throw new FormatException($"String '{value}' was not recognized as a valid DateTime.");
            }
        }
    }

    public virtual int FvqaProcesso {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FvqaProcesso; set => m_FvqaProcesso = value; }

    // Tracking Code: 20250503
    [StringLength(60, ErrorMessage = "A propriedade FxxxParaNome da tabela AgendaRelatorio deve ter no máximo 60 caracteres.")]
    public virtual string? FxxxParaNome {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxParaNome ?? string.Empty; set => m_FxxxParaNome = value.trim().Length > 60 ? value.trim().Substring(0, 60) : value.trim(); }
    // Tracking Code: 20250503
    public virtual string? FxxxParaPessoas {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxParaPessoas ?? string.Empty; set => m_FxxxParaPessoas = value.trim(); }
    // Tracking Code: 20250503
    public virtual string? FxxxBoxAudiencia {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxBoxAudiencia ?? string.Empty; set => m_FxxxBoxAudiencia = value.trim(); }
    // Tracking Code: 20250503
    public virtual string? FxxxBoxAudienciaMobile {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxBoxAudienciaMobile ?? string.Empty; set => m_FxxxBoxAudienciaMobile = value.trim(); }

    // Tracking Code: 20250503
    [StringLength(50, ErrorMessage = "A propriedade FxxxNomeAdvogado da tabela AgendaRelatorio deve ter no máximo 50 caracteres.")]
    public virtual string? FxxxNomeAdvogado {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeAdvogado ?? string.Empty; set => m_FxxxNomeAdvogado = value.trim().Length > 50 ? value.trim().Substring(0, 50) : value.trim(); }

    // Tracking Code: 20250503
    [StringLength(40, ErrorMessage = "A propriedade FxxxNomeForo da tabela AgendaRelatorio deve ter no máximo 40 caracteres.")]
    public virtual string? FxxxNomeForo {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeForo ?? string.Empty; set => m_FxxxNomeForo = value.trim().Length > 40 ? value.trim().Substring(0, 40) : value.trim(); }

    // Tracking Code: 20250503
    [StringLength(50, ErrorMessage = "A propriedade FxxxNomeJustica da tabela AgendaRelatorio deve ter no máximo 50 caracteres.")]
    public virtual string? FxxxNomeJustica {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeJustica ?? string.Empty; set => m_FxxxNomeJustica = value.trim().Length > 50 ? value.trim().Substring(0, 50) : value.trim(); }

    // Tracking Code: 20250503
    [StringLength(40, ErrorMessage = "A propriedade FxxxNomeArea da tabela AgendaRelatorio deve ter no máximo 40 caracteres.")]
    public virtual string? FxxxNomeArea {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeArea ?? string.Empty; set => m_FxxxNomeArea = value.trim().Length > 40 ? value.trim().Substring(0, 40) : value.trim(); }

    public int IQuemCad() => 0;
    public int IQuemAtu() => 0;
    [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public void SetAuditor(int usuarioId)
    {
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITabelaName() => PTabelaNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoCodigo() => CampoCodigo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoNome() => CampoNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string IPrefixo() => PTabelaPrefixo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITypeFieldCode() => "int";
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IdIsIdentity() => false;
#pragma warning disable CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasAuditor() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasNameId() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IIsStoredProcedureOrView() => true;
#pragma warning restore CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public int GetID() => ID;
}