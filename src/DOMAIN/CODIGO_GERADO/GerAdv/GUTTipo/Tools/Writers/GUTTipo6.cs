// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTTipoWriter
{
    Task<FGUTTipo> WriteAsync(Models.GUTTipo guttipo, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(GUTTipoResponse guttipo, int operadorId, MsiSqlConnection oCnn);
}

public class GUTTipoWriter(IFGUTTipoFactory guttipoFactory) : IGUTTipoWriter
{
    private readonly IFGUTTipoFactory _guttipoFactory = guttipoFactory ?? throw new ArgumentNullException(nameof(guttipoFactory));
    public virtual async Task Delete(GUTTipoResponse guttipo, int operadorId, MsiSqlConnection oCnn)
    {
        await _guttipoFactory.DeleteAsync(operadorId, guttipo.Id, oCnn);
    }

    public virtual async Task<FGUTTipo> WriteAsync(Models.GUTTipo guttipo, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (guttipo.Id.IsEmptyIDNumber() ? _guttipoFactory.CreateAsync() : _guttipoFactory.CreateFromIdAsync(guttipo.Id, oCnn));
        dbRec.FNome = guttipo.Nome;
        dbRec.FOrdem = guttipo.Ordem;
        dbRec.FGUID = guttipo.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}