// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProTipoBaixaWriter
{
    Task<FProTipoBaixa> WriteAsync(Models.ProTipoBaixa protipobaixa, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(ProTipoBaixaResponse protipobaixa, int operadorId, MsiSqlConnection oCnn);
}

public class ProTipoBaixaWriter(IFProTipoBaixaFactory protipobaixaFactory) : IProTipoBaixaWriter
{
    private readonly IFProTipoBaixaFactory _protipobaixaFactory = protipobaixaFactory ?? throw new ArgumentNullException(nameof(protipobaixaFactory));
    public virtual async Task Delete(ProTipoBaixaResponse protipobaixa, int operadorId, MsiSqlConnection oCnn)
    {
        await _protipobaixaFactory.DeleteAsync(operadorId, protipobaixa.Id, oCnn);
    }

    public virtual async Task<FProTipoBaixa> WriteAsync(Models.ProTipoBaixa protipobaixa, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (protipobaixa.Id.IsEmptyIDNumber() ? _protipobaixaFactory.CreateAsync() : _protipobaixaFactory.CreateFromIdAsync(protipobaixa.Id, oCnn));
        dbRec.FNome = protipobaixa.Nome;
        dbRec.FGUID = protipobaixa.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}