// 100% auto-generated by Source Genesys WebApi Front & Back Creator
                     // copyright © 2000-2025 Menphis - Sistemas Inteligentes
                     // This file is part of the Source Genesys project                     
                    import { useState } from 'react';
import InputInput from '@/app/components/Inputs/InputInput';
import InputDate from '@/app/components/Inputs/InputDate';
import InputHora from '@/app/components/Inputs/InputHora';
import InputValor from '@/app/components/Inputs/InputValor';
import InputComboFilterYesNo from '@/app/components/Inputs/InputComboFilterYesNo';
import { FilterHandlers } from '@/app/components/Cruds/GenericFilterDialog';
import { FilterBensMateriais } from '@/app/GerAdv_TS/BensMateriais/Filters/BensMateriais';
import BensClassificacaoComboBox from '@/app/GerAdv_TS/BensClassificacao/ComboBox/BensClassificacao';
import FornecedoresComboBox from '@/app/GerAdv_TS/Fornecedores/ComboBox/Fornecedores';
import CidadeComboBox from '@/app/GerAdv_TS/Cidade/ComboBox/Cidade';
interface UseBensMateriaisFilterProps {
  handleFetchWithFilter: (filtro?: FilterBensMateriais | undefined | null) => Promise<void>;
}
interface UseBensMateriaisFilterReturn {
  // Estados
  showSearch: boolean;
  windowFilter: FilterBensMateriais;
  setWindowFilter: React.Dispatch<React.SetStateAction<FilterBensMateriais>>;
  // Handlers do Dialog
  handleSearch: () => void;
  handleCloseSearch: () => void;
  handleConfirmSearch: (filter: FilterBensMateriais) => Promise<void>;
  // Render function
  renderInputFilters: (handlers: FilterHandlers<FilterBensMateriais>) => React.ReactNode;
  // Utilitários
  clearFilter: () => void;
  hasActiveFilter: boolean;
}
export const useBensMateriaisFilter = ({ handleFetchWithFilter }: UseBensMateriaisFilterProps): UseBensMateriaisFilterReturn => {
  const [showSearch, setShowSearch] = useState(false);
  const [windowFilter, setWindowFilter] = useState<FilterBensMateriais>({} as FilterBensMateriais);
  // Handlers do Dialog
  const handleSearch = () => {
    setShowSearch(true);
    const filterWildechar = {...windowFilter, wildcardChar: '%' } as FilterBensMateriais;
    setWindowFilter(filterWildechar);
  };
  const handleCloseSearch = () => {
    setShowSearch(false);
  };
  const handleConfirmSearch = async (filter: FilterBensMateriais) => {
    await handleFetchWithFilter(filter);
  };
  // Função para limpar filtros
  const clearFilter = () => {
    setWindowFilter({});
    sessionStorage.removeItem(btoa('BensMateriaisFilter'));
    handleFetchWithFilter({});
  };
  // Verificar se há filtros ativos
  const hasActiveFilter = Object.values(windowFilter).some(value =>
    value !== undefined && value !== null && value !== '' && value !== -2147483648
  );
  // Função para renderizar os campos de filtro
  const renderInputFilters = (handlers: FilterHandlers<FilterBensMateriais>) => (
  <>
  <InputInput
  type='text'
  id='nome'
  name='nome'
  value={handlers.windowFilter?.nome ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Nome'
  label='Nome'
  className='inputIncNome inputSearch'
  />
  <BensClassificacaoComboBox
  name='bensclassificacao'
  dataForm={null}
  value={handlers.windowFilter?.bensclassificacao}
  setValue={(e:any) => handlers.handleComboChange(e, 'bensclassificacao')}
  className='inputSearch inputSearchComboboxTab'
  label='Bens Classificacao'
  />
  <InputDate
  type='text'
  id='datacompra'
  label='DataCompra (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datacompra'
  value={handlers.windowFilter?.datacompra ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datacompra', value)}
  />
  <InputDate
  type='text'
  id='datacompra_end'
  label='DataCompra (final)'
  dataForm={null}
  className='inputSearch'
  name='datacompra_end'
  value={handlers.windowFilter?.datacompra_end ?? ''}
  disabled={handlers.windowFilter?.datacompra ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datacompra_end', value)}
  />
  <InputDate
  type='text'
  id='datafimdagarantia'
  label='DataFimDaGarantia (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='datafimdagarantia'
  value={handlers.windowFilter?.datafimdagarantia ?? ''}
  onChange={(value: string) => handlers.handleDateChange('datafimdagarantia', value)}
  />
  <InputDate
  type='text'
  id='datafimdagarantia_end'
  label='DataFimDaGarantia (final)'
  dataForm={null}
  className='inputSearch'
  name='datafimdagarantia_end'
  value={handlers.windowFilter?.datafimdagarantia_end ?? ''}
  disabled={handlers.windowFilter?.datafimdagarantia ? false: true}
  onChange={(value: string) => handlers.handleDateChange('datafimdagarantia_end', value)}
  />
  <InputInput
  type='text'
  id='nfnro'
  name='nfnro'
  value={handlers.windowFilter?.nfnro ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NFNRO'
  label='NFNRO'
  className='inputIncNome inputSearch'
  />
  <FornecedoresComboBox
  name='fornecedor'
  dataForm={null}
  value={handlers.windowFilter?.fornecedor}
  setValue={(e:any) => handlers.handleComboChange(e, 'fornecedor')}
  className='inputSearch inputSearchComboboxTab'
  label='Fornecedores'
  />
  <InputValor
  type='text'
  id='valorbem'
  name='valorbem'
  value={handlers.windowFilter?.valorbem ?? 0}
  onChange={handlers.handleInputValorChange}
  label='ValorBem (igual ou começando com)'
  className='inputSearch inputSearchValor'
  />

  <InputValor
  type='text'
  id='valorbem_end'
  name='valorbem_end'
  value={handlers.windowFilter?.valorbem_end ?? 0}
  disabled={handlers.windowFilter?.valorbem != 0 ? false: true}
  onChange={handlers.handleInputValorChange}
  label='ValorBem (até)'
  className='inputSearch inputSearchValor inputSearchValorEnd'
  />

  <InputInput
  type='text'
  id='nroserieproduto'
  name='nroserieproduto'
  value={handlers.windowFilter?.nroserieproduto ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NroSerieProduto'
  label='NroSerieProduto'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='comprador'
  name='comprador'
  value={handlers.windowFilter?.comprador ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Comprador'
  label='Comprador'
  className='inputIncNome inputSearch'
  />
  <CidadeComboBox
  name='cidade'
  dataForm={null}
  value={handlers.windowFilter?.cidade}
  setValue={(e:any) => handlers.handleComboChange(e, 'cidade')}
  className='inputSearch inputSearchComboboxTab'
  label='Cidade'
  />
  <InputComboFilterYesNo
  type='text'
  id='garantialoja'
  name='garantialoja'
  value={handlers.windowFilter?.garantialoja ?? -2147483648}
  onChange={handlers.handleInputChange}
  label='GarantiaLoja'
  className='inputSearch inputSearchCheckbox'
  />
  <InputDate
  type='text'
  id='dataterminodagarantiadaloja'
  label='DataTerminoDaGarantiaDaLoja (igual ou início)'
  dataForm={null}
  className='inputSearch'
  name='dataterminodagarantiadaloja'
  value={handlers.windowFilter?.dataterminodagarantiadaloja ?? ''}
  onChange={(value: string) => handlers.handleDateChange('dataterminodagarantiadaloja', value)}
  />
  <InputDate
  type='text'
  id='dataterminodagarantiadaloja_end'
  label='DataTerminoDaGarantiaDaLoja (final)'
  dataForm={null}
  className='inputSearch'
  name='dataterminodagarantiadaloja_end'
  value={handlers.windowFilter?.dataterminodagarantiadaloja_end ?? ''}
  disabled={handlers.windowFilter?.dataterminodagarantiadaloja ? false: true}
  onChange={(value: string) => handlers.handleDateChange('dataterminodagarantiadaloja_end', value)}
  />
  <InputInput
  type='text'
  id='observacoes'
  name='observacoes'
  value={handlers.windowFilter?.observacoes ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe Observacoes'
  label='Observacoes'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='nomevendedor'
  name='nomevendedor'
  value={handlers.windowFilter?.nomevendedor ?? ''}
  onChange={handlers.handleInputChange}
  placeholder='Informe NomeVendedor'
  label='NomeVendedor'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro'
  name='codigo_filtro'
  value={handlers.windowFilter?.codigo_filtro ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código do cadastro'
  label='Código (igual ou inicial)'
  className='inputIncNome inputSearch'
  />
  <InputInput
  type='text'
  id='codigo_filtro_end'
  name='codigo_filtro_end'
  value={handlers.windowFilter?.codigo_filtro_end ?? ''}
  onChange={handlers.handleInputChange}
  dataForm={handlers.windowFilter}
  placeholder='Código final do cadastro'
  label='Código final'
  disabled={handlers.windowFilter?.codigo_filtro ? false: true}
  className='inputIncNome inputSearch'
  />
</>
);
return {
  // Estados
  showSearch, 
  windowFilter, 
  setWindowFilter, 
  // Handlers
  handleSearch, 
  handleCloseSearch, 
  handleConfirmSearch, 
  // Render function
  renderInputFilters, 
  // Utilitários
  clearFilter, 
  hasActiveFilter
};
};