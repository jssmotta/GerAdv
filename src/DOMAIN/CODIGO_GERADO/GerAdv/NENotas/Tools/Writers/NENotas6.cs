// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface INENotasWriter
{
    Task<FNENotas> WriteAsync(Models.NENotas nenotas, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(NENotasResponse nenotas, int operadorId, MsiSqlConnection oCnn);
}

public class NENotasWriter(IFNENotasFactory nenotasFactory) : INENotasWriter
{
    private readonly IFNENotasFactory _nenotasFactory = nenotasFactory ?? throw new ArgumentNullException(nameof(nenotasFactory));
    public virtual async Task Delete(NENotasResponse nenotas, int operadorId, MsiSqlConnection oCnn)
    {
        await _nenotasFactory.DeleteAsync(operadorId, nenotas.Id, oCnn);
    }

    public virtual async Task<FNENotas> WriteAsync(Models.NENotas nenotas, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (nenotas.Id.IsEmptyIDNumber() ? _nenotasFactory.CreateAsync() : _nenotasFactory.CreateFromIdAsync(nenotas.Id, oCnn));
        dbRec.FApenso = nenotas.Apenso;
        dbRec.FPrecatoria = nenotas.Precatoria;
        dbRec.FInstancia = nenotas.Instancia;
        dbRec.FMovPro = nenotas.MovPro;
        dbRec.FNome = nenotas.Nome;
        dbRec.FNotaExpedida = nenotas.NotaExpedida;
        dbRec.FRevisada = nenotas.Revisada;
        dbRec.FProcesso = nenotas.Processo;
        dbRec.FPalavraChave = nenotas.PalavraChave;
        dbRec.FData = nenotas.Data;
        dbRec.FNotaPublicada = nenotas.NotaPublicada;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}