// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface ICargosEscWriter
{
    Task<FCargosEsc> WriteAsync(Models.CargosEsc cargosesc, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(CargosEscResponse cargosesc, int operadorId, MsiSqlConnection oCnn);
}

public class CargosEscWriter(IFCargosEscFactory cargosescFactory) : ICargosEscWriter
{
    private readonly IFCargosEscFactory _cargosescFactory = cargosescFactory ?? throw new ArgumentNullException(nameof(cargosescFactory));
    public virtual async Task Delete(CargosEscResponse cargosesc, int operadorId, MsiSqlConnection oCnn)
    {
        await _cargosescFactory.DeleteAsync(operadorId, cargosesc.Id, oCnn);
    }

    public virtual async Task<FCargosEsc> WriteAsync(Models.CargosEsc cargosesc, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (cargosesc.Id.IsEmptyIDNumber() ? _cargosescFactory.CreateAsync() : _cargosescFactory.CreateFromIdAsync(cargosesc.Id, oCnn));
        dbRec.FPercentual = cargosesc.Percentual;
        dbRec.FNome = cargosesc.Nome;
        dbRec.FClassificacao = cargosesc.Classificacao;
        dbRec.FGUID = cargosesc.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}