// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IAcaoWriter
{
    Task<FAcao> WriteAsync(Models.Acao acao, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(AcaoResponse acao, int operadorId, MsiSqlConnection? oCnn);
}

public class AcaoWriter(IFAcaoFactory acaoFactory) : IAcaoWriter
{
    private readonly IFAcaoFactory _acaoFactory = acaoFactory ?? throw new ArgumentNullException(nameof(acaoFactory));
    public virtual async Task Delete(AcaoResponse acao, int operadorId, MsiSqlConnection? oCnn)
    {
        await _acaoFactory.DeleteAsync(operadorId, acao.Id, oCnn);
    }

    public virtual async Task<FAcao> WriteAsync(Models.Acao acao, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (acao.Id.IsEmptyIDNumber() ? _acaoFactory.CreateAsync() : _acaoFactory.CreateFromIdAsync(acao.Id, oCnn));
        dbRec.FGUID = acao.GUID;
        dbRec.FJustica = acao.Justica;
        dbRec.FArea = acao.Area;
        dbRec.FDescricao = acao.Descricao;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}