// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IProPartesWriter
{
    Task<FProPartes> WriteAsync(Models.ProPartes propartes, MsiSqlConnection oCnn);
    Task Delete(ProPartesResponse propartes, int operadorId, MsiSqlConnection oCnn);
}

public class ProPartesWriter(IFProPartesFactory propartesFactory) : IProPartesWriter
{
    private readonly IFProPartesFactory _propartesFactory = propartesFactory;
    public async Task Delete(ProPartesResponse propartes, int operadorId, MsiSqlConnection oCnn)
    {
        await _propartesFactory.DeleteAsync(operadorId, propartes.Id, oCnn);
    }

    public async Task<FProPartes> WriteAsync(Models.ProPartes propartes, MsiSqlConnection oCnn)
    {
        using var dbRec = await (propartes.Id.IsEmptyIDNumber() ? _propartesFactory.CreateAsync() : _propartesFactory.CreateFromIdAsync(propartes.Id, oCnn));
        dbRec.FParte = propartes.Parte;
        dbRec.FProcesso = propartes.Processo;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}