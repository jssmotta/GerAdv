// 100% auto-generated by Source Genesys Core
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming
public partial class DBAgendaRelatorio
{
    [XmlIgnore]
    private protected int m_FvqaProcesso;
    [XmlIgnore]
    private protected string? m_FxxxParaNome, m_FxxxParaPessoas, m_FxxxBoxAudiencia, m_FxxxBoxAudienciaMobile, m_FxxxNomeAdvogado, m_FxxxNomeForo, m_FxxxNomeJustica, m_FxxxNomeArea;
    [XmlIgnore]
    private protected DateTime? m_FvqaData;
    public string? FvqaData
    {
        get => $"{m_FvqaData:dd/MM/yyyy HH:mm:ss}"; // 20250502
        set
        {
            if (!string.IsNullOrEmpty(value))
                m_FvqaData = DateTime.ParseExact(value, "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
            ;
        }
    }

    public int FvqaProcesso {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FvqaProcesso; set => m_FvqaProcesso = value; }

    [StringLength(60, ErrorMessage = "A propriedade FxxxParaNome da tabela AgendaRelatorio deve ter no máximo 60 caracteres.")]
    public string? FxxxParaNome {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxParaNome ?? string.Empty; set => m_FxxxParaNome = value; }
    public string? FxxxParaPessoas {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxParaPessoas ?? string.Empty; set => m_FxxxParaPessoas = value; }
    public string? FxxxBoxAudiencia {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxBoxAudiencia ?? string.Empty; set => m_FxxxBoxAudiencia = value; }
    public string? FxxxBoxAudienciaMobile {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxBoxAudienciaMobile ?? string.Empty; set => m_FxxxBoxAudienciaMobile = value; }

    [StringLength(50, ErrorMessage = "A propriedade FxxxNomeAdvogado da tabela AgendaRelatorio deve ter no máximo 50 caracteres.")]
    public string? FxxxNomeAdvogado {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeAdvogado ?? string.Empty; set => m_FxxxNomeAdvogado = value; }

    [StringLength(40, ErrorMessage = "A propriedade FxxxNomeForo da tabela AgendaRelatorio deve ter no máximo 40 caracteres.")]
    public string? FxxxNomeForo {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeForo ?? string.Empty; set => m_FxxxNomeForo = value; }

    [StringLength(50, ErrorMessage = "A propriedade FxxxNomeJustica da tabela AgendaRelatorio deve ter no máximo 50 caracteres.")]
    public string? FxxxNomeJustica {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeJustica ?? string.Empty; set => m_FxxxNomeJustica = value; }

    [StringLength(40, ErrorMessage = "A propriedade FxxxNomeArea da tabela AgendaRelatorio deve ter no máximo 40 caracteres.")]
    public string? FxxxNomeArea {[MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => m_FxxxNomeArea ?? string.Empty; set => m_FxxxNomeArea = value; }

    public int IQuemCad() => 0;
    public int IQuemAtu() => 0;
    public string IDtCadDataX_DataHora() => string.Empty;
    public string IDtAtuDataX_DataHora() => string.Empty;
    [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public void SetAuditor(int usuarioId)
    {
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITabelaName() => PTabelaNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoCodigo() => CampoCodigo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ICampoNome() => CampoNome;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string IPrefixo() => PTabelaPrefixo;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public string ITypeFieldCode() => "int";
    public ImmutableArray<DBInfoSystem> IFieldsRaw() => throw new NotImplementedException();
    public ImmutableArray<DBInfoSystem> IPkFields() => throw new NotImplementedException();
    public ImmutableArray<DBInfoSystem> IPkIndicesFields() => throw new NotImplementedException();
#pragma warning disable CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasAuditor() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool HasNameId() => false;
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public bool IIsStoredProcedureOrView() => true;
#pragma warning restore CA1822 // Mark members as static

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public int GetID() => ID;
}