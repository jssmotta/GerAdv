// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class ContratosService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterContratos? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Processo != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Processo)}", filtro.Processo));
            if (filtro.Processo_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.Processo)}_end", filtro.Processo_end));
            }
        }

        if (filtro.Cliente != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Cliente)}", filtro.Cliente));
            if (filtro.Cliente_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.Cliente)}_end", filtro.Cliente_end));
            }
        }

        if (filtro.Advogado != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Advogado)}", filtro.Advogado));
            if (filtro.Advogado_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.Advogado)}_end", filtro.Advogado_end));
            }
        }

        if (filtro.Dia != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Dia)}", filtro.Dia));
            if (filtro.Dia_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.Dia)}_end", filtro.Dia_end));
            }
        }

        if (filtro.Valor != decimal.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Valor)}", filtro.Valor));
            if (filtro.Valor_end != decimal.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.Valor)}_end", filtro.Valor_end));
            }
        }

        if (!filtro.DataInicio.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DataInicio, out var dataParam1))
                parameters.Add(new($"@{(DBContratosDicInfo.DataInicio)}", dataParam1));
            if (!filtro.DataInicio_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.DataInicio_end, out var dataParam2))
                    parameters.Add(new($"@{(DBContratosDicInfo.DataInicio)}_end", dataParam2));
            }
        }

        if (!filtro.DataTermino.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DataTermino, out var dataParam3))
                parameters.Add(new($"@{(DBContratosDicInfo.DataTermino)}", dataParam3));
            if (!filtro.DataTermino_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.DataTermino_end, out var dataParam4))
                    parameters.Add(new($"@{(DBContratosDicInfo.DataTermino)}_end", dataParam4));
            }
        }

        if (filtro.OcultarRelatorio != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.OcultarRelatorio)}", filtro.OcultarRelatorio));
        }

        if (filtro.PercEscritorio != decimal.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.PercEscritorio)}", filtro.PercEscritorio));
            if (filtro.PercEscritorio_end != decimal.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.PercEscritorio)}_end", filtro.PercEscritorio_end));
            }
        }

        if (filtro.ValorConsultoria != decimal.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.ValorConsultoria)}", filtro.ValorConsultoria));
            if (filtro.ValorConsultoria_end != decimal.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.ValorConsultoria)}_end", filtro.ValorConsultoria_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (filtro.TipoCobranca != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.TipoCobranca)}", filtro.TipoCobranca));
            if (filtro.TipoCobranca_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.TipoCobranca)}_end", filtro.TipoCobranca_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Protestar))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Protestar)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Protestar)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Juros))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Juros)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Juros)));
        }

        if (filtro.ValorRealizavel != decimal.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.ValorRealizavel)}", filtro.ValorRealizavel));
            if (filtro.ValorRealizavel_end != decimal.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.ValorRealizavel)}_end", filtro.ValorRealizavel_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.DOCUMENTO))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.DOCUMENTO)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.DOCUMENTO)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail1))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.EMail1)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail1)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail2))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.EMail2)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail2)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail3))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.EMail3)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail3)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Pessoa1))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Pessoa1)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Pessoa1)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Pessoa2))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Pessoa2)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Pessoa2)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Pessoa3))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Pessoa3)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Pessoa3)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.OBS))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.OBS)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.OBS)));
        }

        if (filtro.ClienteContrato != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.ClienteContrato)}", filtro.ClienteContrato));
            if (filtro.ClienteContrato_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.ClienteContrato)}_end", filtro.ClienteContrato_end));
            }
        }

        if (filtro.IdExtrangeiro != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.IdExtrangeiro)}", filtro.IdExtrangeiro));
            if (filtro.IdExtrangeiro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.IdExtrangeiro)}_end", filtro.IdExtrangeiro_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.ChaveContrato))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.ChaveContrato)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.ChaveContrato)));
        }

        if (filtro.Avulso != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Avulso)}", filtro.Avulso));
        }

        if (filtro.Suspenso != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Suspenso)}", filtro.Suspenso));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Multa))
        {
            parameters.Add(new($"@{(DBContratosDicInfo.Multa)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Multa)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBContratosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBContratosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Processo.IsEmptyX()) && filtro.Processo_end.IsEmptyX())
        {
            cWhere.Append(filtro.Processo.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Processo}] = @{(DBContratosDicInfo.Processo)}");
        }
        else if (!(filtro.Processo.IsEmptyX()) && !(filtro.Processo_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.Processo} BETWEEN @{(DBContratosDicInfo.Processo)} AND @{(DBContratosDicInfo.Processo)}_end");
        }

        if (!(filtro.Cliente.IsEmptyX()) && filtro.Cliente_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cliente.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Cliente}] = @{(DBContratosDicInfo.Cliente)}");
        }
        else if (!(filtro.Cliente.IsEmptyX()) && !(filtro.Cliente_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.Cliente} BETWEEN @{(DBContratosDicInfo.Cliente)} AND @{(DBContratosDicInfo.Cliente)}_end");
        }

        if (!(filtro.Advogado.IsEmptyX()) && filtro.Advogado_end.IsEmptyX())
        {
            cWhere.Append(filtro.Advogado.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Advogado}] = @{(DBContratosDicInfo.Advogado)}");
        }
        else if (!(filtro.Advogado.IsEmptyX()) && !(filtro.Advogado_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.Advogado} BETWEEN @{(DBContratosDicInfo.Advogado)} AND @{(DBContratosDicInfo.Advogado)}_end");
        }

        if (!(filtro.Dia.IsEmptyX()) && filtro.Dia_end.IsEmptyX())
        {
            cWhere.Append(filtro.Dia.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Dia}] = @{(DBContratosDicInfo.Dia)}");
        }
        else if (!(filtro.Dia.IsEmptyX()) && !(filtro.Dia_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.Dia} BETWEEN @{(DBContratosDicInfo.Dia)} AND @{(DBContratosDicInfo.Dia)}_end");
        }

        if (!(filtro.Valor == decimal.MinValue) && filtro.Valor_end == decimal.MinValue)
        {
            cWhere.Append(filtro.Valor == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Valor}] = @{(DBContratosDicInfo.Valor)}");
        }
        else if (!(filtro.Valor == decimal.MinValue) && !(filtro.Valor_end == decimal.MinValue))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.Valor} BETWEEN @{(DBContratosDicInfo.Valor)} AND @{(DBContratosDicInfo.Valor)}_end");
        }

        if (!(filtro.DataInicio.IsEmptyDX()) && filtro.DataInicio_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DataInicio.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DataInicio}], 103) = CONVERT(DATE, @{(DBContratosDicInfo.DataInicio)}, 103)");
        }
        else if (!(filtro.DataInicio.IsEmptyDX()) && !(filtro.DataInicio_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.DataInicio} BETWEEN @{(DBContratosDicInfo.DataInicio)} AND @{(DBContratosDicInfo.DataInicio)}_end");
        }

        if (!(filtro.DataTermino.IsEmptyDX()) && filtro.DataTermino_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DataTermino.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DataTermino}], 103) = CONVERT(DATE, @{(DBContratosDicInfo.DataTermino)}, 103)");
        }
        else if (!(filtro.DataTermino.IsEmptyDX()) && !(filtro.DataTermino_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.DataTermino} BETWEEN @{(DBContratosDicInfo.DataTermino)} AND @{(DBContratosDicInfo.DataTermino)}_end");
        }

        cWhere.Append(filtro.OcultarRelatorio == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.OcultarRelatorio}] = @{(DBContratosDicInfo.OcultarRelatorio)}");
        if (!(filtro.PercEscritorio == decimal.MinValue) && filtro.PercEscritorio_end == decimal.MinValue)
        {
            cWhere.Append(filtro.PercEscritorio == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.PercEscritorio}] = @{(DBContratosDicInfo.PercEscritorio)}");
        }
        else if (!(filtro.PercEscritorio == decimal.MinValue) && !(filtro.PercEscritorio_end == decimal.MinValue))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.PercEscritorio} BETWEEN @{(DBContratosDicInfo.PercEscritorio)} AND @{(DBContratosDicInfo.PercEscritorio)}_end");
        }

        if (!(filtro.ValorConsultoria == decimal.MinValue) && filtro.ValorConsultoria_end == decimal.MinValue)
        {
            cWhere.Append(filtro.ValorConsultoria == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ValorConsultoria}] = @{(DBContratosDicInfo.ValorConsultoria)}");
        }
        else if (!(filtro.ValorConsultoria == decimal.MinValue) && !(filtro.ValorConsultoria_end == decimal.MinValue))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.ValorConsultoria} BETWEEN @{(DBContratosDicInfo.ValorConsultoria)} AND @{(DBContratosDicInfo.ValorConsultoria)}_end");
        }

        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.GUID)}");
        if (!(filtro.TipoCobranca.IsEmptyX()) && filtro.TipoCobranca_end.IsEmptyX())
        {
            cWhere.Append(filtro.TipoCobranca.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.TipoCobranca}] = @{(DBContratosDicInfo.TipoCobranca)}");
        }
        else if (!(filtro.TipoCobranca.IsEmptyX()) && !(filtro.TipoCobranca_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.TipoCobranca} BETWEEN @{(DBContratosDicInfo.TipoCobranca)} AND @{(DBContratosDicInfo.TipoCobranca)}_end");
        }

        cWhere.Append(filtro.Protestar.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Protestar}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Protestar)}");
        cWhere.Append(filtro.Juros.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Juros}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Juros)}");
        if (!(filtro.ValorRealizavel == decimal.MinValue) && filtro.ValorRealizavel_end == decimal.MinValue)
        {
            cWhere.Append(filtro.ValorRealizavel == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ValorRealizavel}] = @{(DBContratosDicInfo.ValorRealizavel)}");
        }
        else if (!(filtro.ValorRealizavel == decimal.MinValue) && !(filtro.ValorRealizavel_end == decimal.MinValue))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.ValorRealizavel} BETWEEN @{(DBContratosDicInfo.ValorRealizavel)} AND @{(DBContratosDicInfo.ValorRealizavel)}_end");
        }

        cWhere.Append(filtro.DOCUMENTO.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.DOCUMENTO}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.DOCUMENTO)}");
        cWhere.Append(filtro.EMail1.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail1}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.EMail1)}");
        cWhere.Append(filtro.EMail2.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail2}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.EMail2)}");
        cWhere.Append(filtro.EMail3.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.EMail3}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.EMail3)}");
        cWhere.Append(filtro.Pessoa1.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa1}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Pessoa1)}");
        cWhere.Append(filtro.Pessoa2.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa2}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Pessoa2)}");
        cWhere.Append(filtro.Pessoa3.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Pessoa3}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Pessoa3)}");
        cWhere.Append(filtro.OBS.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.OBS}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.OBS)}");
        if (!(filtro.ClienteContrato.IsEmptyX()) && filtro.ClienteContrato_end.IsEmptyX())
        {
            cWhere.Append(filtro.ClienteContrato.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ClienteContrato}] = @{(DBContratosDicInfo.ClienteContrato)}");
        }
        else if (!(filtro.ClienteContrato.IsEmptyX()) && !(filtro.ClienteContrato_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.ClienteContrato} BETWEEN @{(DBContratosDicInfo.ClienteContrato)} AND @{(DBContratosDicInfo.ClienteContrato)}_end");
        }

        if (!(filtro.IdExtrangeiro.IsEmptyX()) && filtro.IdExtrangeiro_end.IsEmptyX())
        {
            cWhere.Append(filtro.IdExtrangeiro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.IdExtrangeiro}] = @{(DBContratosDicInfo.IdExtrangeiro)}");
        }
        else if (!(filtro.IdExtrangeiro.IsEmptyX()) && !(filtro.IdExtrangeiro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.IdExtrangeiro} BETWEEN @{(DBContratosDicInfo.IdExtrangeiro)} AND @{(DBContratosDicInfo.IdExtrangeiro)}_end");
        }

        cWhere.Append(filtro.ChaveContrato.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.ChaveContrato}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.ChaveContrato)}");
        cWhere.Append(filtro.Avulso == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Avulso}] = @{(DBContratosDicInfo.Avulso)}");
        cWhere.Append(filtro.Suspenso == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Suspenso}] = @{(DBContratosDicInfo.Suspenso)}");
        cWhere.Append(filtro.Multa.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.Multa}]  {DevourerConsts.MsiCollate} like @{(DBContratosDicInfo.Multa)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].[{DBContratosDicInfo.CampoCodigo}] = @{(DBContratosDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBContratosDicInfo.PTabelaNome}].{DBContratosDicInfo.CampoCodigo} BETWEEN @{(DBContratosDicInfo.CampoCodigo)} AND @{(DBContratosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterContratos? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    private async Task<IEnumerable<ContratosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}