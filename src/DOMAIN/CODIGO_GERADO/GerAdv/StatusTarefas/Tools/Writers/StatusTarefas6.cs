// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IStatusTarefasWriter
{
    Task<FStatusTarefas> WriteAsync(Models.StatusTarefas statustarefas, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(StatusTarefasResponse statustarefas, int operadorId, MsiSqlConnection oCnn);
}

public class StatusTarefasWriter(IFStatusTarefasFactory statustarefasFactory) : IStatusTarefasWriter
{
    private readonly IFStatusTarefasFactory _statustarefasFactory = statustarefasFactory ?? throw new ArgumentNullException(nameof(statustarefasFactory));
    public virtual async Task Delete(StatusTarefasResponse statustarefas, int operadorId, MsiSqlConnection oCnn)
    {
        await _statustarefasFactory.DeleteAsync(operadorId, statustarefas.Id, oCnn);
    }

    public virtual async Task<FStatusTarefas> WriteAsync(Models.StatusTarefas statustarefas, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (statustarefas.Id.IsEmptyIDNumber() ? _statustarefasFactory.CreateAsync() : _statustarefasFactory.CreateFromIdAsync(statustarefas.Id, oCnn));
        dbRec.FNome = statustarefas.Nome;
        dbRec.FGUID = statustarefas.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}