// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IPenhoraStatusWriter
{
    Task<FPenhoraStatus> WriteAsync(Models.PenhoraStatus penhorastatus, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(PenhoraStatusResponse penhorastatus, int operadorId, MsiSqlConnection oCnn);
}

public class PenhoraStatusWriter(IFPenhoraStatusFactory penhorastatusFactory) : IPenhoraStatusWriter
{
    private readonly IFPenhoraStatusFactory _penhorastatusFactory = penhorastatusFactory ?? throw new ArgumentNullException(nameof(penhorastatusFactory));
    public virtual async Task Delete(PenhoraStatusResponse penhorastatus, int operadorId, MsiSqlConnection oCnn)
    {
        await _penhorastatusFactory.DeleteAsync(operadorId, penhorastatus.Id, oCnn);
    }

    public virtual async Task<FPenhoraStatus> WriteAsync(Models.PenhoraStatus penhorastatus, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (penhorastatus.Id.IsEmptyIDNumber() ? _penhorastatusFactory.CreateAsync() : _penhorastatusFactory.CreateFromIdAsync(penhorastatus.Id, oCnn));
        dbRec.FNome = penhorastatus.Nome;
        dbRec.FGUID = penhorastatus.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}