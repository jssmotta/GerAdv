// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// GridsMobileHook.tsx.txt
'use client';
import React, { useMemo } from 'react';
import { Grid, GridColumn } from '@progress/kendo-react-grid';
import { IClientes } from '../../Interfaces/interface.Clientes';
import { CRUD_CONSTANTS, formatCurrency, formatDateBrowser } from '@/app/tools/crud';
import '@/app/styles/MobileCrudGrid.css';
import { useClientesGrid } from '../../Hooks/hookClientesGrid';
import { useRouter } from 'next/navigation';
import { SvgIcon } from '@progress/kendo-react-common';
import { pencilIcon, searchIcon } from '@progress/kendo-svg-icons';
interface ClientesGridProps {
  data: IClientes[];
  onRowClick: (clientes: IClientes) => void;
  onDeleteClick: (e: any) => void;
  setSelectedId: (id: number | null) => void;
}
export const ClientesGridMobileComponent = React.memo(({
  data, 
  onRowClick, 
  onDeleteClick, 
  setSelectedId, 

}: ClientesGridProps) => {

const router = useRouter();
// ===== USO DO HOOK CENTRALIZADO =====
const {
  processedData, 
  sort, 
  handleSortChange, 
  page, 
  handlePageChange, 
  handleFilterChange, 
  handleRowClick: hookHandleRowClick, 
  RowNumberCell, 
} = useClientesGrid({
data, 
onRowClick, 
onDeleteClick, 
setSelectedId, 
initialTake: 10, 
useCustomSort: false, // Mobile usa useGridSort interno
});

const openSearchCellAgenda = (id: number) => {
  router.push(`/pages/agenda/?clientes=${id}`);
};
const SearchFromCellAgenda = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAgenda(props.dataItem.id)}><span title='Pesquisar relacionados em Compromisso'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellAnexamentoRegistros = (id: number) => {
  router.push(`/pages/anexamentoregistros/?clientes=${id}`);
};
const SearchFromCellAnexamentoRegistros = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellAnexamentoRegistros(props.dataItem.id)}><span title='Pesquisar relacionados em Anexamento Registros'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellClientesSocios = (id: number) => {
  router.push(`/pages/clientessocios/?clientes=${id}`);
};
const SearchFromCellClientesSocios = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellClientesSocios(props.dataItem.id)}><span title='Pesquisar relacionados em Clientes Socios'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellColaboradores = (id: number) => {
  router.push(`/pages/colaboradores/?clientes=${id}`);
};
const SearchFromCellColaboradores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellColaboradores(props.dataItem.id)}><span title='Pesquisar relacionados em Colaboradores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellContaCorrente = (id: number) => {
  router.push(`/pages/contacorrente/?clientes=${id}`);
};
const SearchFromCellContaCorrente = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellContaCorrente(props.dataItem.id)}><span title='Pesquisar relacionados em Conta Corrente'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellContratos = (id: number) => {
  router.push(`/pages/contratos/?clientes=${id}`);
};
const SearchFromCellContratos = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellContratos(props.dataItem.id)}><span title='Pesquisar relacionados em Contratos'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellDadosProcuracao = (id: number) => {
  router.push(`/pages/dadosprocuracao/?clientes=${id}`);
};
const SearchFromCellDadosProcuracao = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellDadosProcuracao(props.dataItem.id)}><span title='Pesquisar relacionados em Dados Procuracao'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellDiario2 = (id: number) => {
  router.push(`/pages/diario2/?clientes=${id}`);
};
const SearchFromCellDiario2 = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellDiario2(props.dataItem.id)}><span title='Pesquisar relacionados em Diario2'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellGruposEmpresas = (id: number) => {
  router.push(`/pages/gruposempresas/?clientes=${id}`);
};
const SearchFromCellGruposEmpresas = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellGruposEmpresas(props.dataItem.id)}><span title='Pesquisar relacionados em Grupos Empresas'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellGruposEmpresasCli = (id: number) => {
  router.push(`/pages/gruposempresascli/?clientes=${id}`);
};
const SearchFromCellGruposEmpresasCli = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellGruposEmpresasCli(props.dataItem.id)}><span title='Pesquisar relacionados em Grupos Empresas Cli'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellHonorariosDadosContrato = (id: number) => {
  router.push(`/pages/honorariosdadoscontrato/?clientes=${id}`);
};
const SearchFromCellHonorariosDadosContrato = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellHonorariosDadosContrato(props.dataItem.id)}><span title='Pesquisar relacionados em Honorarios Dados Contrato'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellHorasTrab = (id: number) => {
  router.push(`/pages/horastrab/?clientes=${id}`);
};
const SearchFromCellHorasTrab = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellHorasTrab(props.dataItem.id)}><span title='Pesquisar relacionados em Horas Trab'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellLigacoes = (id: number) => {
  router.push(`/pages/ligacoes/?clientes=${id}`);
};
const SearchFromCellLigacoes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellLigacoes(props.dataItem.id)}><span title='Pesquisar relacionados em Ligacoes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellOperadores = (id: number) => {
  router.push(`/pages/operadores/?clientes=${id}`);
};
const SearchFromCellOperadores = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellOperadores(props.dataItem.id)}><span title='Pesquisar relacionados em Operadores'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellPreClientes = (id: number) => {
  router.push(`/pages/preclientes/?clientes=${id}`);
};
const SearchFromCellPreClientes = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellPreClientes(props.dataItem.id)}><span title='Pesquisar relacionados em Pre Clientes'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellProDespesas = (id: number) => {
  router.push(`/pages/prodespesas/?clientes=${id}`);
};
const SearchFromCellProDespesas = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellProDespesas(props.dataItem.id)}><span title='Pesquisar relacionados em Pro Despesas'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
const openSearchCellReuniao = (id: number) => {
  router.push(`/pages/reuniao/?clientes=${id}`);
};
const SearchFromCellReuniao = (props: any) => {
  return (
  <>
  <td>
    <div onClick={() => openSearchCellReuniao(props.dataItem.id)}><span title='Pesquisar relacionados em Reunião'><SvgIcon icon={searchIcon} /></span></div>
  </td>
</>
);
};
// ===== CONFIGURAÇÃO DE COLUNAS =====
const gridColumns = useMemo(() => [
  <GridColumn format='{0:n0}' field='index' title='#' sortable={false} filterable={false} width='55px' cells={{ data: RowNumberCell }} />,
  <GridColumn
  field='id_edit_Agenda'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Compromisso'
  cells={{ data: SearchFromCellAgenda }}
  />, 
  <GridColumn
  field='id_edit_AnexamentoRegistros'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Anexamento Registros'
  cells={{ data: SearchFromCellAnexamentoRegistros }}
  />, 
  <GridColumn
  field='id_edit_ClientesSocios'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Clientes Socios'
  cells={{ data: SearchFromCellClientesSocios }}
  />, 
  <GridColumn
  field='id_edit_Colaboradores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Colaboradores'
  cells={{ data: SearchFromCellColaboradores }}
  />, 
  <GridColumn
  field='id_edit_ContaCorrente'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Conta Corrente'
  cells={{ data: SearchFromCellContaCorrente }}
  />, 
  <GridColumn
  field='id_edit_Contratos'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Contratos'
  cells={{ data: SearchFromCellContratos }}
  />, 
  <GridColumn
  field='id_edit_DadosProcuracao'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Dados Procuracao'
  cells={{ data: SearchFromCellDadosProcuracao }}
  />, 
  <GridColumn
  field='id_edit_Diario2'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Diario2'
  cells={{ data: SearchFromCellDiario2 }}
  />, 
  <GridColumn
  field='id_edit_GruposEmpresas'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Grupos Empresas'
  cells={{ data: SearchFromCellGruposEmpresas }}
  />, 
  <GridColumn
  field='id_edit_GruposEmpresasCli'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Grupos Empresas Cli'
  cells={{ data: SearchFromCellGruposEmpresasCli }}
  />, 
  <GridColumn
  field='id_edit_HonorariosDadosContrato'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Honorarios Dados Contrato'
  cells={{ data: SearchFromCellHonorariosDadosContrato }}
  />, 
  <GridColumn
  field='id_edit_HorasTrab'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Horas Trab'
  cells={{ data: SearchFromCellHorasTrab }}
  />, 
  <GridColumn
  field='id_edit_Ligacoes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Ligacoes'
  cells={{ data: SearchFromCellLigacoes }}
  />, 
  <GridColumn
  field='id_edit_Operadores'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Operadores'
  cells={{ data: SearchFromCellOperadores }}
  />, 
  <GridColumn
  field='id_edit_PreClientes'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pre Clientes'
  cells={{ data: SearchFromCellPreClientes }}
  />, 
  <GridColumn
  field='id_edit_ProDespesas'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Pro Despesas'
  cells={{ data: SearchFromCellProDespesas }}
  />, 
  <GridColumn
  field='id_edit_Reuniao'
  filterable={false}
  sortable={false}
  width={'65px'}
  title='Reunião'
  cells={{ data: SearchFromCellReuniao }}
  />, 

  ], [RowNumberCell]);
  // ===== RENDER =====
  return (
  <Grid
  className='grid-mobile-crud grid-mobile-clientes'
  data={processedData.slice(page.skip, page.skip + page.take)}
  skip={page.skip}
  take={page.take}
  total={processedData.length}
  pageable={{
    pageSizes: Array.from(CRUD_CONSTANTS.PAGINATION.PAGE_SIZES), 
    buttonCount: CRUD_CONSTANTS.PAGINATION.BUTTON_COUNT, 
  }}
  onPageChange={handlePageChange}
  sortable={true}
  sort={sort}
  onSortChange={handleSortChange}
  resizable={true}
  reorderable={true}
  filterable={true}
  onFilterChange={handleFilterChange}
  onRowClick={(e) => hookHandleRowClick(e)}
>
{gridColumns}
</Grid>
);
});