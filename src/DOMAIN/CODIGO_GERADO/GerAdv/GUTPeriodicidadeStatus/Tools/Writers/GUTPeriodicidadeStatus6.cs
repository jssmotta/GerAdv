// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IGUTPeriodicidadeStatusWriter
{
    Task<FGUTPeriodicidadeStatus> WriteAsync(Models.GUTPeriodicidadeStatus gutperiodicidadestatus, int auditorQuem, MsiSqlConnection? oCnn);
    Task Delete(GUTPeriodicidadeStatusResponse gutperiodicidadestatus, int operadorId, MsiSqlConnection? oCnn);
}

public class GUTPeriodicidadeStatusWriter(IFGUTPeriodicidadeStatusFactory gutperiodicidadestatusFactory) : IGUTPeriodicidadeStatusWriter
{
    private readonly IFGUTPeriodicidadeStatusFactory _gutperiodicidadestatusFactory = gutperiodicidadestatusFactory ?? throw new ArgumentNullException(nameof(gutperiodicidadestatusFactory));
    public virtual async Task Delete(GUTPeriodicidadeStatusResponse gutperiodicidadestatus, int operadorId, MsiSqlConnection? oCnn)
    {
        await _gutperiodicidadestatusFactory.DeleteAsync(operadorId, gutperiodicidadestatus.Id, oCnn);
    }

    public virtual async Task<FGUTPeriodicidadeStatus> WriteAsync(Models.GUTPeriodicidadeStatus gutperiodicidadestatus, int auditorQuem, MsiSqlConnection? oCnn)
    {
        using var dbRec = await (gutperiodicidadestatus.Id.IsEmptyIDNumber() ? _gutperiodicidadestatusFactory.CreateAsync() : _gutperiodicidadestatusFactory.CreateFromIdAsync(gutperiodicidadestatus.Id, oCnn));
        dbRec.FGUTAtividade = gutperiodicidadestatus.GUTAtividade;
        if (gutperiodicidadestatus.DataRealizado != null)
            dbRec.FDataRealizado = gutperiodicidadestatus.DataRealizado.ToString();
        dbRec.FGUID = gutperiodicidadestatus.GUID;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}