// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBColaboradores
{
    public DBColaboradores(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBColaboradores(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Colaboradores: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Ani)))
                m_FAni = Convert.ToBoolean(getValue(DBColaboradoresDicInfo.Ani));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBColaboradoresDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Cargo)))
                m_FCargo = Convert.ToInt32(getValue(DBColaboradoresDicInfo.Cargo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Cidade)))
                m_FCidade = Convert.ToInt32(getValue(DBColaboradoresDicInfo.Cidade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Cliente)))
                m_FCliente = Convert.ToInt32(getValue(DBColaboradoresDicInfo.Cliente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBColaboradoresDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBColaboradoresDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.DtNasc)))
                m_FDtNasc = Convert.ToDateTime(getValue(DBColaboradoresDicInfo.DtNasc));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Etiqueta)))
                m_FEtiqueta = Convert.ToBoolean(getValue(DBColaboradoresDicInfo.Etiqueta));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Idade)))
                m_FIdade = Convert.ToInt32(getValue(DBColaboradoresDicInfo.Idade));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBColaboradoresDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBColaboradoresDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Sexo)))
                m_FSexo = Convert.ToBoolean(getValue(DBColaboradoresDicInfo.Sexo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBColaboradoresDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBColaboradoresDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FBairro = getValue(DBColaboradoresDicInfo.Bairro)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCEP = getValue(DBColaboradoresDicInfo.CEP)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FClass = getValue(DBColaboradoresDicInfo.Class)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCNH = getValue(DBColaboradoresDicInfo.CNH)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FCPF = getValue(DBColaboradoresDicInfo.CPF)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEMail = getValue(DBColaboradoresDicInfo.EMail)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FEndereco = getValue(DBColaboradoresDicInfo.Endereco)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBColaboradoresDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBColaboradoresDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FObservacao = getValue(DBColaboradoresDicInfo.Observacao)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FRG = getValue(DBColaboradoresDicInfo.RG)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Colaboradores: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Colaboradores: {ex.Message}", ex);
        }
    }
}