// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class PrepostosService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterPrepostos? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (!string.IsNullOrWhiteSpace(filtro.GUID))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.GUID)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.GUID)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Nome))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Nome)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Nome)));
        }

        if (filtro.Funcao != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Funcao)}", filtro.Funcao));
            if (filtro.Funcao_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.Funcao)}_end", filtro.Funcao_end));
            }
        }

        if (filtro.Setor != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Setor)}", filtro.Setor));
            if (filtro.Setor_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.Setor)}_end", filtro.Setor_end));
            }
        }

        if (!filtro.DtNasc.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.DtNasc, out var dataParam1))
                parameters.Add(new($"@{(DBPrepostosDicInfo.DtNasc)}", dataParam1));
            if (!filtro.DtNasc_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.DtNasc_end, out var dataParam2))
                    parameters.Add(new($"@{(DBPrepostosDicInfo.DtNasc)}_end", dataParam2));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Qualificacao))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Qualificacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Qualificacao)));
        }

        if (filtro.Sexo != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Sexo)}", filtro.Sexo));
        }

        if (filtro.Idade != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Idade)}", filtro.Idade));
            if (filtro.Idade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.Idade)}_end", filtro.Idade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.CPF))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.CPF)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CPF)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.RG))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.RG)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.RG)));
        }

        if (!filtro.Periodo_Ini.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.Periodo_Ini, out var dataParam3))
                parameters.Add(new($"@{(DBPrepostosDicInfo.Periodo_Ini)}", dataParam3));
            if (!filtro.Periodo_Ini_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.Periodo_Ini_end, out var dataParam4))
                    parameters.Add(new($"@{(DBPrepostosDicInfo.Periodo_Ini)}_end", dataParam4));
            }
        }

        if (!filtro.Periodo_Fim.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.Periodo_Fim, out var dataParam5))
                parameters.Add(new($"@{(DBPrepostosDicInfo.Periodo_Fim)}", dataParam5));
            if (!filtro.Periodo_Fim_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.Periodo_Fim_end, out var dataParam6))
                    parameters.Add(new($"@{(DBPrepostosDicInfo.Periodo_Fim)}_end", dataParam6));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Registro))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Registro)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Registro)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CTPSNumero))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.CTPSNumero)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CTPSNumero)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CTPSSerie))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.CTPSSerie)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CTPSSerie)));
        }

        if (!filtro.CTPSDtEmissao.IsEmptyDX())
        {
            if (DateTime.TryParse(filtro.CTPSDtEmissao, out var dataParam7))
                parameters.Add(new($"@{(DBPrepostosDicInfo.CTPSDtEmissao)}", dataParam7));
            if (!filtro.CTPSDtEmissao_end.IsEmptyDX())
            {
                if (DateTime.TryParse(filtro.CTPSDtEmissao_end, out var dataParam8))
                    parameters.Add(new($"@{(DBPrepostosDicInfo.CTPSDtEmissao)}_end", dataParam8));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.PIS))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.PIS)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.PIS)));
        }

        if (filtro.Salario != decimal.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Salario)}", filtro.Salario));
            if (filtro.Salario_end != decimal.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.Salario)}_end", filtro.Salario_end));
            }
        }

        if (filtro.LiberaAgenda != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.LiberaAgenda)}", filtro.LiberaAgenda));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Observacao))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Observacao)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Observacao)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Endereco))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Endereco)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Bairro))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Bairro)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Bairro)));
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.CEP))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.CEP)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fone))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Fone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fax))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Fax)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.EMail))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.EMail)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.EMail)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Pai))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Pai)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Pai)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Mae))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Mae)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Mae)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Class))
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.Class)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Class)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBPrepostosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBPrepostosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        cWhere.Append(filtro.GUID.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.GUID}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.GUID)}");
        cWhere.Append(filtro.Nome.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Nome}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Nome)}");
        if (!(filtro.Funcao.IsEmptyX()) && filtro.Funcao_end.IsEmptyX())
        {
            cWhere.Append(filtro.Funcao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Funcao}] = @{(DBPrepostosDicInfo.Funcao)}");
        }
        else if (!(filtro.Funcao.IsEmptyX()) && !(filtro.Funcao_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Funcao} BETWEEN @{(DBPrepostosDicInfo.Funcao)} AND @{(DBPrepostosDicInfo.Funcao)}_end");
        }

        if (!(filtro.Setor.IsEmptyX()) && filtro.Setor_end.IsEmptyX())
        {
            cWhere.Append(filtro.Setor.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Setor}] = @{(DBPrepostosDicInfo.Setor)}");
        }
        else if (!(filtro.Setor.IsEmptyX()) && !(filtro.Setor_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Setor} BETWEEN @{(DBPrepostosDicInfo.Setor)} AND @{(DBPrepostosDicInfo.Setor)}_end");
        }

        if (!(filtro.DtNasc.IsEmptyDX()) && filtro.DtNasc_end.IsEmptyDX())
        {
            cWhere.Append(filtro.DtNasc.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.DtNasc}], 103) = CONVERT(DATE, @{(DBPrepostosDicInfo.DtNasc)}, 103)");
        }
        else if (!(filtro.DtNasc.IsEmptyDX()) && !(filtro.DtNasc_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.DtNasc} BETWEEN @{(DBPrepostosDicInfo.DtNasc)} AND @{(DBPrepostosDicInfo.DtNasc)}_end");
        }

        cWhere.Append(filtro.Qualificacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Qualificacao}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Qualificacao)}");
        cWhere.Append(filtro.Sexo == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Sexo}] = @{(DBPrepostosDicInfo.Sexo)}");
        if (!(filtro.Idade.IsEmptyX()) && filtro.Idade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Idade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Idade}] = @{(DBPrepostosDicInfo.Idade)}");
        }
        else if (!(filtro.Idade.IsEmptyX()) && !(filtro.Idade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Idade} BETWEEN @{(DBPrepostosDicInfo.Idade)} AND @{(DBPrepostosDicInfo.Idade)}_end");
        }

        cWhere.Append(filtro.CPF.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CPF}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.CPF)}");
        cWhere.Append(filtro.RG.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.RG}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.RG)}");
        if (!(filtro.Periodo_Ini.IsEmptyDX()) && filtro.Periodo_Ini_end.IsEmptyDX())
        {
            cWhere.Append(filtro.Periodo_Ini.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Periodo_Ini}], 103) = CONVERT(DATE, @{(DBPrepostosDicInfo.Periodo_Ini)}, 103)");
        }
        else if (!(filtro.Periodo_Ini.IsEmptyDX()) && !(filtro.Periodo_Ini_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Periodo_Ini} BETWEEN @{(DBPrepostosDicInfo.Periodo_Ini)} AND @{(DBPrepostosDicInfo.Periodo_Ini)}_end");
        }

        if (!(filtro.Periodo_Fim.IsEmptyDX()) && filtro.Periodo_Fim_end.IsEmptyDX())
        {
            cWhere.Append(filtro.Periodo_Fim.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Periodo_Fim}], 103) = CONVERT(DATE, @{(DBPrepostosDicInfo.Periodo_Fim)}, 103)");
        }
        else if (!(filtro.Periodo_Fim.IsEmptyDX()) && !(filtro.Periodo_Fim_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Periodo_Fim} BETWEEN @{(DBPrepostosDicInfo.Periodo_Fim)} AND @{(DBPrepostosDicInfo.Periodo_Fim)}_end");
        }

        cWhere.Append(filtro.Registro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Registro}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Registro)}");
        cWhere.Append(filtro.CTPSNumero.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CTPSNumero}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.CTPSNumero)}");
        cWhere.Append(filtro.CTPSSerie.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CTPSSerie}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.CTPSSerie)}");
        if (!(filtro.CTPSDtEmissao.IsEmptyDX()) && filtro.CTPSDtEmissao_end.IsEmptyDX())
        {
            cWhere.Append(filtro.CTPSDtEmissao.IsEmptyDX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"CONVERT(DATE,[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CTPSDtEmissao}], 103) = CONVERT(DATE, @{(DBPrepostosDicInfo.CTPSDtEmissao)}, 103)");
        }
        else if (!(filtro.CTPSDtEmissao.IsEmptyDX()) && !(filtro.CTPSDtEmissao_end.IsEmptyDX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.CTPSDtEmissao} BETWEEN @{(DBPrepostosDicInfo.CTPSDtEmissao)} AND @{(DBPrepostosDicInfo.CTPSDtEmissao)}_end");
        }

        cWhere.Append(filtro.PIS.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.PIS}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.PIS)}");
        if (!(filtro.Salario == decimal.MinValue) && filtro.Salario_end == decimal.MinValue)
        {
            cWhere.Append(filtro.Salario == decimal.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Salario}] = @{(DBPrepostosDicInfo.Salario)}");
        }
        else if (!(filtro.Salario == decimal.MinValue) && !(filtro.Salario_end == decimal.MinValue))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Salario} BETWEEN @{(DBPrepostosDicInfo.Salario)} AND @{(DBPrepostosDicInfo.Salario)}_end");
        }

        cWhere.Append(filtro.LiberaAgenda == int.MinValue ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.LiberaAgenda}] = @{(DBPrepostosDicInfo.LiberaAgenda)}");
        cWhere.Append(filtro.Observacao.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Observacao}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Observacao)}");
        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Endereco)}");
        cWhere.Append(filtro.Bairro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Bairro}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Bairro)}");
        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Cidade}] = @{(DBPrepostosDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.Cidade} BETWEEN @{(DBPrepostosDicInfo.Cidade)} AND @{(DBPrepostosDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.CEP)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Fone)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Fax)}");
        cWhere.Append(filtro.EMail.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.EMail}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.EMail)}");
        cWhere.Append(filtro.Pai.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Pai}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Pai)}");
        cWhere.Append(filtro.Mae.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Mae}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Mae)}");
        cWhere.Append(filtro.Class.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Class}]  {DevourerConsts.MsiCollate} like @{(DBPrepostosDicInfo.Class)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CampoCodigo}] = @{(DBPrepostosDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBPrepostosDicInfo.PTabelaNome}].{DBPrepostosDicInfo.CampoCodigo} BETWEEN @{(DBPrepostosDicInfo.CampoCodigo)} AND @{(DBPrepostosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterPrepostos? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    public async Task<IEnumerable<NomeID>> GetListN([FromQuery] int max, [FromBody] Filters.FilterPrepostos? filtro, [FromRoute, Required] string uri, CancellationToken token)
    {
        // Tracking: 20250606-0
        ThrowIfDisposed();
        var filtroResult = filtro == null ? null : WFiltro(filtro!);
        string where = filtroResult?.where ?? string.Empty;
        List<SqlParameter> parameters = filtroResult?.parametros ?? [];
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new Exception($"Coneão nula.");
        }

        var keyCache = await reader.ReadStringAuditor(max, uri, "", [], oCnn);
        var cacheKey = $"{uri}-Prepostos-{max}-{where.GetHashCode()}-GetListN-{keyCache}";
        var entryOptions = new HybridCacheEntryOptions
        {
            Expiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId),
            LocalCacheExpiration = TimeSpan.FromSeconds(BaseConsts.PMaxSecondsCacheId)
        };
        return await _cache.GetOrCreateAsync(cacheKey, async cancel => await GetDataListNAsync(max, uri, where, parameters, cancel), entryOptions, cancellationToken: token) ?? [];
    }

    private async Task<IEnumerable<NomeID>> GetDataListNAsync(int max, string uri, string where, List<SqlParameter> parameters, CancellationToken token)
    {
        var result = new List<NomeID>(max);
        var lista = await reader.ListarN(max, uri, where, parameters, DBPrepostosDicInfo.CampoNome);
        foreach (var item in lista)
        {
            if (token.IsCancellationRequested)
                break;
            if (item?.FNome != null)
            {
                result.Add(new NomeID { Nome = item.FNome, ID = item.ID });
            }
        }

        return result;
    }

    private async Task<IEnumerable<PrepostosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}