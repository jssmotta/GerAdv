// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
// WindowId.tsx.txt
import React, { useEffect, useMemo } from 'react';
import { useSystemContext } from '@/app/context/SystemContext';
import { ITribEnderecos } from '../../Interfaces/interface.TribEnderecos';
import { TribEnderecosService } from '../../Services/TribEnderecos.service';
import { TribEnderecosApi } from '../../Apis/ApiTribEnderecos';
import TribEnderecosWindow from './TribEnderecosWindow';
import {TribEnderecosEmpty } from '@/app/GerAdv_TS/Models/TribEnderecos';
interface TribEnderecosWindowIdProps {
  isOpen: boolean;
  onClose: () => void;
  id?: number;
  onSuccess: (registro?: any) => void;
  onError: () => void;
}
const TribEnderecosWindowId: React.FC<TribEnderecosWindowIdProps> = ({
  isOpen, 
  onClose, 
  id, 
  onSuccess, 
  onError, 
}) => {
const { systemContext } = useSystemContext();
const tribenderecosService = useMemo(() => {
  return new TribEnderecosService(
  new TribEnderecosApi(systemContext?.Uri ?? '', systemContext?.Token ?? '')
);
}, [systemContext?.Uri, systemContext?.Token]);
const [data, setData] = React.useState<ITribEnderecos | null>(null);
useEffect(() => {
  const fetchData = async () => {
    if (id !== null && id === 0) {
      setData(TribEnderecosEmpty() as ITribEnderecos);
      return;
    }
    if (id) {
      const response = await tribenderecosService.fetchTribEnderecosById(id??0);
      setData(response);
    }
  };
  fetchData();
}, [isOpen]);

if (!isOpen)
  return null;
  return (
  <>
  {data && (
    <TribEnderecosWindow
    isOpen={isOpen}
    onClose={onClose}
    selectedTribEnderecos={data}
    onSuccess={onSuccess}
    onError={onError} />
    )}
  </>
);
};
export default TribEnderecosWindowId;