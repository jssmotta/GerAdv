// 100% auto-generated by Source Genesys Core
// copyright Â© 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.SG.GerAdv;
// ReSharper disable once InconsistentNaming 1
public partial class DBLigacoes
{
    public DBLigacoes(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        InitFromRecord(name =>
        {
            try
            {
                return dbRec[name];
            }
            catch
            {
                return DBNull.Value;
            }
        });
    }

    public DBLigacoes(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Ligacoes: {ex.Message}", ex);
        }
    }

    private void InitFromRecord(Func<string, object?> getValue)
    {
        if (DBNull.Value.Equals(getValue(CampoCodigo)))
            return;
        ID = Convert.ToInt32(getValue(CampoCodigo));
        // Checkpoint Carregar 
        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.AgeClienteAvisado)))
                m_FAgeClienteAvisado = Convert.ToInt32(getValue(DBLigacoesDicInfo.AgeClienteAvisado));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Bold)))
                m_FBold = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Bold));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Celular)))
                m_FCelular = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Celular));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Cliente)))
                m_FCliente = Convert.ToInt32(getValue(DBLigacoesDicInfo.Cliente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Data)))
                m_FData = Convert.ToDateTime(getValue(DBLigacoesDicInfo.Data));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.DataRealizada)))
                m_FDataRealizada = Convert.ToDateTime(getValue(DBLigacoesDicInfo.DataRealizada));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.DtAtu)))
                m_FDtAtu = Convert.ToDateTime(getValue(DBLigacoesDicInfo.DtAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.DtCad)))
                m_FDtCad = Convert.ToDateTime(getValue(DBLigacoesDicInfo.DtCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Emotion)))
                m_FEmotion = Convert.ToInt32(getValue(DBLigacoesDicInfo.Emotion));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Hora)))
                m_FHora = Convert.ToDateTime(getValue(DBLigacoesDicInfo.Hora));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.HoraFinal)))
                m_FHoraFinal = Convert.ToDateTime(getValue(DBLigacoesDicInfo.HoraFinal));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Particular)))
                m_FParticular = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Particular));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Processo)))
                m_FProcesso = Convert.ToInt32(getValue(DBLigacoesDicInfo.Processo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.QuemAtu)))
                m_FQuemAtu = Convert.ToInt32(getValue(DBLigacoesDicInfo.QuemAtu));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.QuemCad)))
                m_FQuemCad = Convert.ToInt32(getValue(DBLigacoesDicInfo.QuemCad));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.QuemCodigo)))
                m_FQuemCodigo = Convert.ToInt32(getValue(DBLigacoesDicInfo.QuemCodigo));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.QuemID)))
                m_FQuemID = Convert.ToInt32(getValue(DBLigacoesDicInfo.QuemID));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Ramal)))
                m_FRamal = Convert.ToInt32(getValue(DBLigacoesDicInfo.Ramal));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Realizada)))
                m_FRealizada = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Realizada));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Solicitante)))
                m_FSolicitante = Convert.ToInt32(getValue(DBLigacoesDicInfo.Solicitante));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.StartScreen)))
                m_FStartScreen = Convert.ToBoolean(getValue(DBLigacoesDicInfo.StartScreen));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Telefonista)))
                m_FTelefonista = Convert.ToInt32(getValue(DBLigacoesDicInfo.Telefonista));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.UltimoAviso)))
                m_FUltimoAviso = Convert.ToDateTime(getValue(DBLigacoesDicInfo.UltimoAviso));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Urgente)))
                m_FUrgente = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Urgente));
        }
        catch
        {
        }

        try
        {
            if (!DBNull.Value.Equals(getValue(DBLigacoesDicInfo.Visto)))
                m_FVisto = Convert.ToBoolean(getValue(DBLigacoesDicInfo.Visto));
        }
        catch
        {
        }

        try
        {
            m_FAssunto = getValue(DBLigacoesDicInfo.Assunto)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FContato = getValue(DBLigacoesDicInfo.Contato)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FFone = getValue(DBLigacoesDicInfo.Fone)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FGUID = getValue(DBLigacoesDicInfo.GUID)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FLigarPara = getValue(DBLigacoesDicInfo.LigarPara)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FNome = getValue(DBLigacoesDicInfo.Nome)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FPara = getValue(DBLigacoesDicInfo.Para)?.ToString() ?? string.Empty;
        }
        catch
        {
        }

        try
        {
            m_FStatus = getValue(DBLigacoesDicInfo.Status)?.ToString() ?? string.Empty;
        }
        catch
        {
        }
    }

    public void CarregarDadosBd(DataRow? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Ligacoes: {ex.Message}", ex);
        }
    }

    public void CarregarDadosBd(SqlDataReader? dbRec)
    {
        if (dbRec is null)
            return;
        try
        {
            InitFromRecord(name =>
            {
                try
                {
                    return dbRec[name];
                }
                catch
                {
                    return DBNull.Value;
                }
            });
        }
        catch (Exception ex)
        {
            throw new Exception($"Erro ao carregar dados do Ligacoes: {ex.Message}", ex);
        }
    }
}