// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
namespace MenphisSI.GerAdv.Interface.Readers;
public partial interface ISetorReader
{
    Task<SetorResponse?> Read(int id, MsiSqlConnection? oCnn);
    Task<Models.Setor?> ReadM(int id, MsiSqlConnection? oCnn);
    SetorResponse? Read(FSetor dbRec, MsiSqlConnection? oCnn);
    SetorResponse? Read(string where, List<SqlParameter>? parameters, MsiSqlConnection? oCnn);
    SetorResponse? Read(FSetor dbRec);
    Task<string> ReadStringAuditor(int id, string uri, MsiSqlConnection? oCnn);
    Task<string> ReadStringAuditor(int max, string uri, string cWhere, List<SqlParameter>? parameters, MsiSqlConnection? oCnn);
    SetorResponseAll? ReadAll(FSetor dbRec, IDataRecord dr);
    SetorResponseAll? ReadAll(SG.GerAdv.DBSetor dbRec, DataRow dr);
    Task<IEnumerable<DBNomeID>> ListarN(int max, string uri, string cWhere, List<SqlParameter>? parameters, string order);
    Task<IEnumerable<SetorResponseAll>> Listar(int max, string uri, string cWhere, List<SqlParameter>? parameters, string order, CancellationToken cancellationToken);
}