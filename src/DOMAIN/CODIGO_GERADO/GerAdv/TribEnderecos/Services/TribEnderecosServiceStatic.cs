// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Services;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class TribEnderecosService
{
    public (string where, List<SqlParameter> parametros)? WFiltro(Filters.FilterTribEnderecos? filtro)
    {
        if (filtro == null)
            return null;
        var parameters = new List<SqlParameter>();
        if (filtro.Tribunal != int.MinValue)
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.Tribunal)}", filtro.Tribunal));
            if (filtro.Tribunal_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBTribEnderecosDicInfo.Tribunal)}_end", filtro.Tribunal_end));
            }
        }

        if (filtro.Cidade != int.MinValue)
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.Cidade)}", filtro.Cidade));
            if (filtro.Cidade_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBTribEnderecosDicInfo.Cidade)}_end", filtro.Cidade_end));
            }
        }

        if (!string.IsNullOrWhiteSpace(filtro.Endereco))
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.Endereco)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Endereco)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.CEP))
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.CEP)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.CEP)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fone))
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.Fone)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fone)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.Fax))
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.Fax)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.Fax)));
        }

        if (!string.IsNullOrWhiteSpace(filtro.OBS))
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.OBS)}", DevourerOne.ApplyWildCard(filtro.WildcardChar, filtro.OBS)));
        }

        if (filtro.Codigo_filtro != int.MinValue)
        {
            parameters.Add(new($"@{(DBTribEnderecosDicInfo.CampoCodigo)}", filtro.Codigo_filtro));
            if (filtro.Codigo_filtro_end != int.MinValue)
            {
                parameters.Add(new($"@{(DBTribEnderecosDicInfo.CampoCodigo)}_end", filtro.Codigo_filtro_end));
            }
        }

        if (filtro.LogicalOperator.IsEmptyX() || (filtro.LogicalOperator.NotEquals(TSql.And) && filtro.LogicalOperator.NotEquals(TSql.OR)))
        {
            filtro.LogicalOperator = TSql.And;
        }

        var cWhere = new StringBuilder();
        if (!(filtro.Tribunal.IsEmptyX()) && filtro.Tribunal_end.IsEmptyX())
        {
            cWhere.Append(filtro.Tribunal.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.Tribunal}] = @{(DBTribEnderecosDicInfo.Tribunal)}");
        }
        else if (!(filtro.Tribunal.IsEmptyX()) && !(filtro.Tribunal_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].{DBTribEnderecosDicInfo.Tribunal} BETWEEN @{(DBTribEnderecosDicInfo.Tribunal)} AND @{(DBTribEnderecosDicInfo.Tribunal)}_end");
        }

        if (!(filtro.Cidade.IsEmptyX()) && filtro.Cidade_end.IsEmptyX())
        {
            cWhere.Append(filtro.Cidade.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.Cidade}] = @{(DBTribEnderecosDicInfo.Cidade)}");
        }
        else if (!(filtro.Cidade.IsEmptyX()) && !(filtro.Cidade_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].{DBTribEnderecosDicInfo.Cidade} BETWEEN @{(DBTribEnderecosDicInfo.Cidade)} AND @{(DBTribEnderecosDicInfo.Cidade)}_end");
        }

        cWhere.Append(filtro.Endereco.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.Endereco}]  {DevourerConsts.MsiCollate} like @{(DBTribEnderecosDicInfo.Endereco)}");
        cWhere.Append(filtro.CEP.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.CEP}]  {DevourerConsts.MsiCollate} like @{(DBTribEnderecosDicInfo.CEP)}");
        cWhere.Append(filtro.Fone.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.Fone}]  {DevourerConsts.MsiCollate} like @{(DBTribEnderecosDicInfo.Fone)}");
        cWhere.Append(filtro.Fax.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.Fax}]  {DevourerConsts.MsiCollate} like @{(DBTribEnderecosDicInfo.Fax)}");
        cWhere.Append(filtro.OBS.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.OBS}]  {DevourerConsts.MsiCollate} like @{(DBTribEnderecosDicInfo.OBS)}");
        if (!(filtro.Codigo_filtro.IsEmptyX()) && filtro.Codigo_filtro_end.IsEmptyX())
        {
            cWhere.Append(filtro.Codigo_filtro.IsEmptyX() ? string.Empty : (cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].[{DBTribEnderecosDicInfo.CampoCodigo}] = @{(DBTribEnderecosDicInfo.CampoCodigo)}");
        }
        else if (!(filtro.Codigo_filtro.IsEmptyX()) && !(filtro.Codigo_filtro_end.IsEmptyX()))
        {
            cWhere.Append((cWhere.Length == 0 ? string.Empty : filtro.LogicalOperator) + $"[{DBTribEnderecosDicInfo.PTabelaNome}].{DBTribEnderecosDicInfo.CampoCodigo} BETWEEN @{(DBTribEnderecosDicInfo.CampoCodigo)} AND @{(DBTribEnderecosDicInfo.CampoCodigo)}_end");
        }

        return (cWhere.ToString().Trim(), parameters);
    }

    private string GetFilterHash(Filters.FilterTribEnderecos? filtro)
    {
        if (filtro == null)
            return string.Empty;
        var json = JsonSerializer.Serialize(filtro);
        using var sha256 = SHA256.Create();
        var hashBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(json));
        return BitConverter.ToString(hashBytes).Replace("-", "").ToLowerInvariant();
    }

    private async Task<IEnumerable<TribEnderecosResponseAll>> GetDataAllAsync(int max, string where, List<SqlParameter> parameters, string uri, CancellationToken token)
    {
        using var oCnn = Configuracoes.GetConnectionByUri(uri);
        if (oCnn == null)
        {
            throw new DatabaseConnectionException();
        }

        var result = await reader.Listar(max, uri, where, parameters, string.Empty, token);
        return result;
    }
}