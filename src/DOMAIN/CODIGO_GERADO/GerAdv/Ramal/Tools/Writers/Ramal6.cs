// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Writers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial interface IRamalWriter
{
    Task<FRamal> WriteAsync(Models.Ramal ramal, int auditorQuem, MsiSqlConnection oCnn);
    Task Delete(RamalResponse ramal, int operadorId, MsiSqlConnection oCnn);
}

public class RamalWriter(IFRamalFactory ramalFactory) : IRamalWriter
{
    private readonly IFRamalFactory _ramalFactory = ramalFactory ?? throw new ArgumentNullException(nameof(ramalFactory));
    public virtual async Task Delete(RamalResponse ramal, int operadorId, MsiSqlConnection oCnn)
    {
        await _ramalFactory.DeleteAsync(operadorId, ramal.Id, oCnn);
    }

    public virtual async Task<FRamal> WriteAsync(Models.Ramal ramal, int auditorQuem, MsiSqlConnection oCnn)
    {
        using var dbRec = await (ramal.Id.IsEmptyIDNumber() ? _ramalFactory.CreateAsync() : _ramalFactory.CreateFromIdAsync(ramal.Id, oCnn));
        dbRec.FNome = ramal.Nome;
        dbRec.FObs = ramal.Obs;
        dbRec.AuditorQuem = auditorQuem;
        await dbRec.UpdateAsync(oCnn);
        return dbRec;
    }
}