// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Readers;
#pragma warning restore IDE0130 // Namespace does not match folder structure

public partial class AgendaQuemReader
{
    private static string BuildSqlQuery(string campos, string whereClause, string orderClause, int max, MsiSqlConnection? oCnn = null)
    {
        if (max <= 0)
        {
            max = 200;
        }

        var orderQuery = $"{TSql.OrderBy} {DBAgendaQuemDicInfo.CampoCodigo}";
        if (!string.IsNullOrEmpty(orderClause))
        {
            orderQuery = (!orderClause.ToUpperInvariant().Contains(TSql.OrderBy, StringComparison.OrdinalIgnoreCase) ? TSql.OrderBy : string.Empty) + orderClause;
        }

        var cWhere = whereClause.IsEmpty() ? string.Empty : (whereClause.Contains("WHERE", StringComparison.CurrentCultureIgnoreCase) ? whereClause : $" WHERE {whereClause}");
        var query = $@"SELECT TOP ({max})
                   {campos}, 
[{DBAdvogadosDicInfo.PTabelaNome}].[{DBAdvogadosDicInfo.Nome}],
[{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.Nome}],
[{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.Nome}]
                   FROM {DBAgendaQuem.PTabelaNome.dbo(oCnn)}
                   LEFT JOIN {DBAdvogadosDicInfo.PTabelaNome.dbo(oCnn)} ON [{DBAdvogadosDicInfo.PTabelaNome}].[{DBAdvogadosDicInfo.CampoCodigo}]=[{DBAgendaQuemDicInfo.PTabelaNome}].[{DBAgendaQuemDicInfo.Advogado}]
LEFT JOIN {DBFuncionariosDicInfo.PTabelaNome.dbo(oCnn)} ON [{DBFuncionariosDicInfo.PTabelaNome}].[{DBFuncionariosDicInfo.CampoCodigo}]=[{DBAgendaQuemDicInfo.PTabelaNome}].[{DBAgendaQuemDicInfo.Funcionario}]
LEFT JOIN {DBPrepostosDicInfo.PTabelaNome.dbo(oCnn)} ON [{DBPrepostosDicInfo.PTabelaNome}].[{DBPrepostosDicInfo.CampoCodigo}]=[{DBAgendaQuemDicInfo.PTabelaNome}].[{DBAgendaQuemDicInfo.Preposto}]
 
                   {cWhere}
                   {orderQuery}
                   OPTION (OPTIMIZE FOR UNKNOWN)";
        return query;
    }
}