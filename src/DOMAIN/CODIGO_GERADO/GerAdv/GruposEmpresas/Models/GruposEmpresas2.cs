// 100% auto-generated by Source Genesys WebApi Front & Back Creator
// copyright © 2000-2025 Menphis - Sistemas Inteligentes
// This file is part of the Source Genesys project                     
#pragma warning disable IDE0130 // Namespace does not match folder structure

namespace MenphisSI.GerAdv.Models
{
#pragma warning restore IDE0130 // Namespace does not match folder structure

    [Serializable]
    public record GruposEmpresas
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        /// <summary>
        /// Oponente - grpOponente  
        /// </summary>
        [JsonPropertyName("oponente")]
        public int Oponente { get; set; }

        /// <summary>
        /// Cliente - grpCliente  
        /// </summary>
        [JsonPropertyName("cliente")]
        public int Cliente { get; set; }

        /// <summary>
        /// EMail - grpEMail - tamanho máximo: 255 
        /// </summary>
        [JsonPropertyName("email")]
        public string EMail { get; set; } = "";

        /// <summary>
        /// Inativo - grpInativo  
        /// </summary>
        [JsonPropertyName("inativo")]
        public bool Inativo { get; set; }

        /// <summary>
        /// Descricao - grpDescricao - tamanho máximo: 50 
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; } = "";

        /// <summary>
        /// Observacoes - grpObservacoes  
        /// </summary>
        [JsonPropertyName("observacoes")]
        public string Observacoes { get; set; } = "";

        /// <summary>
        /// GUID - grpGUID - tamanho máximo: 100 
        /// </summary>
        [JsonPropertyName("guid")]
        public string GUID { get; set; } = "";

        /// <summary>
        /// Icone - grpIcone - tamanho máximo: 255 
        /// </summary>
        [JsonPropertyName("icone")]
        public string Icone { get; set; } = "";

        /// <summary>
        /// DespesaUnificada - grpDespesaUnificada  
        /// </summary>
        [JsonPropertyName("despesaunificada")]
        public bool DespesaUnificada { get; set; }
    }
}

namespace MenphisSI.GerAdv.Models.All
{
    [Serializable]
    public record GruposEmpresasAll
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        /// <summary>
        /// Oponente - grpOponente  
        /// </summary>
        [JsonPropertyName("oponente")]
        public int Oponente { get; set; }

        /// <summary>
        /// Cliente - grpCliente  
        /// </summary>
        [JsonPropertyName("cliente")]
        public int Cliente { get; set; }

        /// <summary>
        /// EMail - grpEMail - tamanho máximo: 255 
        /// </summary>
        [JsonPropertyName("email")]
        public string EMail { get; set; } = "";

        /// <summary>
        /// Inativo - grpInativo  
        /// </summary>
        [JsonPropertyName("inativo")]
        public bool Inativo { get; set; }

        /// <summary>
        /// Descricao - grpDescricao - tamanho máximo: 50 
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; } = "";

        /// <summary>
        /// Observacoes - grpObservacoes  
        /// </summary>
        [JsonPropertyName("observacoes")]
        public string Observacoes { get; set; } = "";

        /// <summary>
        /// GUID - grpGUID - tamanho máximo: 100 
        /// </summary>
        [JsonPropertyName("guid")]
        public string GUID { get; set; } = "";

        /// <summary>
        /// Icone - grpIcone - tamanho máximo: 255 
        /// </summary>
        [JsonPropertyName("icone")]
        public string Icone { get; set; } = "";

        /// <summary>
        /// DespesaUnificada - grpDespesaUnificada  
        /// </summary>
        [JsonPropertyName("despesaunificada")]
        public bool DespesaUnificada { get; set; }

        [JsonPropertyName("nomeoponentes")]
        public string NomeOponentes { get; set; } = string.Empty;

        [JsonPropertyName("nomeclientes")]
        public string NomeClientes { get; set; } = string.Empty;
    }
}